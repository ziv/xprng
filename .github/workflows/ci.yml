name: xprng-auto-release

on:
  workflow_dispatch:
  push:
    branches:
      - main

#permissions:
#  #  contents: read # for checkout
#  contents: write # to be able to publish a GitHub release
#  issues: write # to be able to comment on released issues
#  pull-requests: write # to be able to comment on released pull requests
#  id-token: write # to enable use of OIDC for npm provenance (npm and jsr)
#  pages: write # to be able to publish docs

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      id-token: write
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: ⛵️ checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☂️ setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

#      - name: Cache npm dependencies
#        uses: actions/cache@v4
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-npm-

      - name: 🔑 dependencies
        run: npm ci --no-fund

      - name: 🌈 build
        run: npm run build

      #      - name: 🍓 test
      #        run: npm test

      - name: 🦋release common
        if: contains(github.event.head_commit.message, '(common)')
        run: cd dist/xprng/common && npx semantic-release

      - name: 🦋release vendor
        if: contains(github.event.head_commit.message, '(vendor)')
        run: cd dist/xprng/vendor && npx semantic-release

      - name: 🦋release markdown
        if: contains(github.event.head_commit.message, '(markdown)')
        run: cd dist/xprng/markdown && npx semantic-release

      - name: 🦋release content
        if: contains(github.event.head_commit.message, '(code)')
        run: cd dist/xprng/code && npx semantic-release

      - name: 🦋release slides
        if: contains(github.event.head_commit.message, '(slides)')
        run: cd dist/xprng/slides && npx semantic-release

      - name: 🦋release query
        if: contains(github.event.head_commit.message, '(query)')
        run: cd dist/xprng/query && npx semantic-release

      - name: 🦋release docs
        if: contains(github.event.head_commit.message, '(docs)')
        run: cd dist/xprng/docs && npx semantic-release

  demo:
    name: demo
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    environment:
      name: github-pages # artifact name
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: ⛵️ checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☂️ setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: 🔑 dependencies
        run: npm ci --no-fund

      - name: 🌈 build
        run: npm run build

      - name: 🌈 build demo
        run: npm run demo

      - name: 📦 publish docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./dist/demo/browser
          publish_branch: gh-pages
