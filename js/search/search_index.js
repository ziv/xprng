var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,1.006,1,0.808]],["body/components/Code.html",[0,0.774,1,1.439,2,0.731,3,0.146,4,0.126,5,0.692,6,0.811,7,3.02,8,0.692,9,3.01,10,1.843,11,1.843,12,0.991,13,0.976,14,1.708,15,2.252,16,1.708,17,0.811,18,0.991,19,0.692,20,1.708,21,2.012,22,1.574,23,2.677,24,1.708,25,2.677,26,1.708,27,1.398,28,2.677,29,2.677,30,3.059,31,1.843,32,2.472,33,1.708,34,1.708,35,1.708,36,1.708,37,1.708,38,2.252,39,1.944,40,0.991,41,1.708,42,3.02,43,1.694,44,1.581,45,1.282,46,2.252,47,3.302,48,0.991,49,0.991,50,0.991,51,1.708,52,0.041,53,0.991,54,0.471,55,0.731,56,0.731,57,0.731,58,0.991,59,0.991,60,0.692,61,0.991,62,0.991,63,0.38,64,0.692,65,1.557,66,0.664,67,0.604,68,1.708,69,0.744,70,3.059,71,1.843,72,1.708,73,0.918,74,0.168,75,0.331,76,1.927,77,1.632,78,1.871,79,1.194,80,1.398,81,0.856,82,1.372,83,0.991,84,0.811,85,0.991,86,0.692,87,1.398,88,2.252,89,1.708,90,1.574,91,1.708,92,1.398,93,0.991,94,0.991,95,1.398,96,0.811,97,0.991,98,0.991,99,0.991,100,0.991,101,0.991,102,2.702,103,0.991,104,0.991,105,0.991,106,0.991,107,0.991,108,0.692,109,0.811,110,0.692,111,0.991,112,0.991,113,0.991,114,1.632,115,0.604,116,1.441,117,0.604,118,0.341,119,0.604,120,0.424,121,0.604,122,0.655,123,0.424,124,1.027,125,1.372,126,0.424,127,0.919,128,0.604,129,0.012,130,0.012]],["title/classes/CodeHarness.html",[131,1.122,132,2.045]],["body/classes/CodeHarness.html",[1,1.269,2,1.566,3,0.54,4,0.464,6,2.994,13,1.01,52,0.038,66,0.622,73,0.801,74,0.622,75,0.89,81,0.801,129,0.033,130,0.033,132,2.557,133,1.403,134,2.994,135,1.752,136,3.659,137,3.659,138,3.659,139,1.403,140,2.23,141,1.968,142,1.968,143,0.901]],["title/directives/ContentSrc.html",[123,1.252,144,1.401]],["body/directives/ContentSrc.html",[0,1.08,1,1.375,3,0.464,4,0.398,9,2.911,19,2.194,21,2.242,22,2.911,39,1.995,52,0.038,54,0.867,60,2.194,73,1.024,74,0.533,75,0.807,76,2.28,77,2.539,79,2.911,81,1.024,82,2.539,86,2.194,90,2.194,108,2.194,123,1.344,129,0.03,130,0.03,145,2.569,146,2.569,147,2.569,148,2.569,149,2.569,150,2.569,151,1.914]],["title/directives/EmptyState.html",[57,1.252,144,1.401]],["body/directives/EmptyState.html",[3,0.6,4,0.515,45,2.348,52,0.035,54,1.121,57,1.738,63,1.558,65,1.558,66,0.69,69,1.001,124,1.558,129,0.035,130,0.035,152,2.186,153,2.476,154,4.062]],["title/classes/EmptyStateHarness.html",[131,1.122,155,2.045]],["body/classes/EmptyStateHarness.html",[3,0.559,4,0.48,13,1.044,45,1.812,52,0.038,66,0.643,69,0.932,73,0.829,74,0.643,75,0.909,81,0.829,129,0.034,130,0.034,133,1.451,135,1.812,139,1.451,141,2.01,142,2.01,143,0.932,155,2.644,156,2.306,157,2.644]],["title/directives/ErrorState.html",[56,1.252,144,1.401]],["body/directives/ErrorState.html",[3,0.6,4,0.515,44,2.348,52,0.035,54,1.121,56,1.738,63,1.558,65,1.558,66,0.69,69,1.001,124,1.558,129,0.035,130,0.035,152,2.186,153,2.476,158,4.062]],["title/classes/ErrorStateHarness.html",[131,1.122,159,2.045]],["body/classes/ErrorStateHarness.html",[3,0.559,4,0.48,13,1.044,44,1.812,52,0.038,66,0.643,69,0.932,73,0.829,74,0.643,75,0.909,81,0.829,129,0.034,130,0.034,133,1.451,135,1.812,139,1.451,141,2.01,142,2.01,143,0.932,156,2.306,157,2.644,159,2.644]],["title/directives/LoadingState.html",[55,1.252,144,1.401]],["body/directives/LoadingState.html",[3,0.6,4,0.515,43,2.348,52,0.035,54,1.121,55,1.738,63,1.558,65,1.558,66,0.69,69,1.001,124,1.558,129,0.035,130,0.035,152,2.186,153,2.476,160,4.062]],["title/classes/LoadingStateHarness.html",[131,1.122,161,2.045]],["body/classes/LoadingStateHarness.html",[3,0.559,4,0.48,13,1.044,43,1.812,52,0.038,66,0.643,69,0.932,73,0.829,74,0.643,75,0.909,81,0.829,129,0.034,130,0.034,133,1.451,135,1.812,139,1.451,141,2.01,142,2.01,143,0.932,156,2.306,157,2.644,161,2.644]],["title/components/Markdown.html",[0,1.006,118,1.006]],["body/components/Markdown.html",[0,0.534,1,1.07,2,1.062,3,0.229,4,0.197,9,1.735,10,1.271,11,1.271,13,0.685,19,1.085,21,1.907,22,1.735,30,2.539,31,1.271,39,1.697,43,1.189,44,1.189,45,1.189,52,0.042,54,0.429,55,0.665,56,0.665,57,0.665,60,1.085,63,0.595,64,1.085,65,1.828,66,0.79,67,0.946,69,0.383,73,0.95,74,0.264,75,0.481,76,2.121,77,2.16,78,2.477,79,1.735,80,2.032,81,0.95,82,1.891,86,1.085,87,1.271,90,1.085,95,2.032,96,1.271,102,1.271,108,1.085,109,1.271,110,1.085,114,2.16,115,0.946,116,2.086,117,0.946,118,1.421,119,0.946,120,0.665,121,0.946,122,0.952,123,1.062,124,1.359,125,1.891,126,0.665,127,1.336,128,0.946,129,0.018,130,0.018,139,0.595,143,0.383,147,1.271,148,1.271,149,1.271,150,1.271,151,0.946,162,1.085,163,2.483,164,2.483,165,2.483,166,2.483,167,2.539,168,1.513,169,1.553,170,1.271,171,0.946,172,1.553,173,1.553,174,1.553,175,1.553,176,1.553,177,1.553,178,1.553,179,1.553]],["title/classes/MarkdownHarness.html",[131,1.122,180,2.045]],["body/classes/MarkdownHarness.html",[1,1.309,3,0.477,4,0.41,13,0.892,21,1.739,52,0.039,66,0.549,70,3.475,71,2.645,73,1.039,74,0.549,75,0.822,81,1.039,118,1.111,129,0.03,130,0.03,133,1.239,135,1.547,139,1.239,140,1.969,141,1.817,142,1.817,143,0.796,151,2.588,180,2.258,181,2.645,182,4.246,183,4.246,184,4.246,185,3.231,186,4.246,187,4.246]],["title/directives/OkState.html",[126,1.252,144,1.401]],["body/directives/OkState.html",[3,0.6,4,0.515,52,0.035,54,1.121,63,1.558,65,1.558,66,0.69,69,1.001,124,1.558,126,1.738,127,2.64,129,0.035,130,0.035,152,2.186,153,2.476,188,4.062]],["title/components/Slide.html",[0,1.006,120,1.252]],["body/components/Slide.html",[1,0.652,2,1.463,3,0.349,4,0.299,8,3.406,17,2.798,43,1.637,44,1.637,45,1.637,52,0.04,54,0.652,55,1.011,56,1.011,57,1.011,63,0.906,65,2.042,66,0.891,67,1.44,69,0.582,73,0.749,74,0.401,75,0.662,76,1.463,81,0.749,114,2.685,115,1.44,116,2.371,117,1.44,118,0.812,119,1.44,120,1.885,121,1.44,122,1.311,123,1.011,124,1.689,125,2.449,126,1.011,127,1.84,128,1.44,129,0.025,130,0.025,168,2.084,171,2.084,189,1.933,190,4.019,191,3.289,192,3.419,193,2.798]],["title/classes/SlideHarness.html",[131,1.122,194,2.045]],["body/classes/SlideHarness.html",[3,0.533,4,0.458,13,0.997,39,2.184,52,0.039,66,0.614,73,0.999,74,0.614,75,0.883,76,1.952,81,0.999,120,1.545,129,0.033,130,0.033,133,1.385,139,1.385,140,2.201,141,1.952,142,1.952,143,0.89,194,2.523,195,2.523,196,2.523,197,2.955]],["title/components/Slides.html",[0,1.006,122,1.122]],["body/components/Slides.html",[1,0.303,2,0.798,3,0.162,4,0.139,8,2.002,43,0.892,44,0.892,45,0.892,52,0.04,54,0.303,55,0.469,56,0.469,57,0.469,63,0.421,64,1.302,65,1.621,66,0.775,67,0.669,69,0.27,73,0.953,74,0.487,75,0.361,76,2.106,77,2.924,78,3.248,81,0.953,114,1.746,115,0.669,116,1.542,117,0.669,118,0.377,119,0.669,120,1.593,121,0.669,122,1.669,123,0.469,124,1.098,125,1.481,126,0.469,127,1.003,128,0.669,129,0.013,130,0.013,143,0.27,168,1.136,171,2.387,191,0.898,193,3.206,198,1.864,199,0.767,200,1.097,201,1.097,202,2.865,203,1.864,204,2.865,205,2.865,206,1.864,207,1.864,208,1.864,209,1.864,210,1.864,211,1.864,212,3.342,213,1.864,214,1.864,215,1.864,216,3.49,217,2.43,218,1.864,219,1.864,220,1.864,221,1.864,222,2.865,223,1.864,224,1.864,225,2.43,226,2.43,227,2.865,228,2.43,229,2.865,230,2.43,231,2.865,232,2.43,233,2.43,234,1.864,235,1.864,236,2.865,237,1.864,238,1.864,239,1.864,240,2.43,241,1.097,242,2.865,243,1.097,244,1.097,245,1.097,246,1.097,247,1.097,248,1.097,249,1.097,250,1.097,251,1.097,252,1.097,253,1.864,254,1.097,255,1.097,256,1.097,257,1.097,258,1.097,259,1.097,260,1.097,261,1.097,262,1.097,263,1.097,264,1.097,265,1.097,266,1.097,267,1.097,268,1.097,269,0.898]],["title/classes/SlidesHarness.html",[131,1.122,270,2.045]],["body/classes/SlidesHarness.html",[3,0.436,4,0.375,13,0.816,39,1.915,52,0.04,66,0.502,73,0.993,74,0.68,75,0.775,76,2.08,81,0.993,110,2.065,116,1.59,122,1.739,129,0.029,130,0.029,133,1.133,139,1.133,140,1.801,141,1.712,142,1.712,143,0.986,168,2.438,170,2.418,171,2.438,195,2.065,196,2.065,197,2.418,269,3.274,270,2.065,271,4.86,272,4,273,4.535,274,2.955,275,2.955,276,4]],["title/coverage.html",[277,3.252]],["body/coverage.html",[0,1.438,1,0.584,4,0.268,5,2.636,27,1.733,52,0.041,55,0.906,56,0.906,57,0.906,92,1.733,118,0.728,120,0.906,122,0.812,123,0.906,126,0.906,129,0.023,130,0.023,131,1.862,132,1.48,134,1.733,135,2.14,143,0.929,144,2.14,145,1.733,146,1.733,152,2.25,155,1.48,156,2.299,159,1.48,161,1.48,162,2.205,180,1.48,181,1.733,189,1.733,194,1.48,195,2.205,196,2.205,199,2.205,212,4.413,270,1.48,277,1.733,278,2.118,279,2.118,280,2.118,281,2.118,282,3.156,283,1.733,284,4.856,285,1.733,286,3.156,287,2.118,288,2.118,289,2.118,290,3.772,291,2.118,292,2.118,293,3.156,294,1.733,295,2.118,296,2.118,297,2.118,298,2.118,299,2.118,300,2.118,301,1.733,302,2.118,303,2.118,304,2.118,305,2.118]],["title/dependencies.html",[306,1.715,307,2.876]],["body/dependencies.html",[52,0.041,129,0.035,130,0.035,307,3.324,308,4.062,309,4.062,310,4.062,311,4.062,312,4.062,313,4.062,314,4.062,315,4.062,316,4.062]],["title/index.html",[74,0.417,317,2.454,318,2.454]],["body/index.html",[0,1.748,1,1.19,2,1.845,32,2.708,39,1.584,52,0.034,54,0.913,69,0.815,118,1.483,122,1.653,129,0.031,130,0.031,306,2.312,319,3.309,320,3.309,321,3.309,322,3.309,323,3.309,324,3.309,325,3.309,326,3.309,327,3.309,328,4.312,329,3.309,330,2.708,331,3.309,332,3.309,333,3.309,334,3.309,335,3.309,336,3.309,337,3.309,338,3.309,339,3.309,340,3.309,341,3.309,342,3.309,343,3.309,344,3.309]],["title/modules.html",[345,3.252]],["body/modules.html",[52,0.037,129,0.037,130,0.037,345,3.675]],["title/overview.html",[346,3.252]],["body/overview.html",[2,1.832,52,0.036,54,1.182,129,0.036,130,0.036,133,1.642,346,3.504,347,4.282,348,4.282,349,4.282]],["title/properties.html",[75,0.68,306,1.715]],["body/properties.html",[52,0.039,75,0.849,129,0.037,130,0.037,330,3.588,350,4.384]],["title/miscellaneous/typealiases.html",[351,1.495,352,3.514]],["body/miscellaneous/typealiases.html",[13,1.044,52,0.039,74,0.643,118,1.301,129,0.034,130,0.034,143,0.932,162,2.644,167,3.097,199,2.644,294,3.844,301,3.844,351,2.306,353,3.784,354,3.784,355,3.784,356,3.784,357,3.784,358,3.784,359,3.784,360,3.784,361,3.784]],["title/miscellaneous/variables.html",[351,1.495,362,2.876]],["body/miscellaneous/variables.html",[1,1.254,5,2.507,13,1.254,21,2.445,52,0.04,73,0.995,74,0.61,81,0.995,82,2.769,84,2.936,129,0.033,130,0.033,143,1.119,151,2.769,283,3.718,285,3.718,351,2.187,362,2.936,363,4.542,364,3.588]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":212,"title":{},"body":{"components/Slides.html":{},"coverage.html":{}}}],["0.0.0",{"_index":350,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":258,"title":{},"body":{"components/Slides.html":{}}}],["1/1",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["11/21",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":329,"title":{},"body":{"index.html":{}}}],["20.1.0",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["2em",{"_index":209,"title":{},"body":{"components/Slides.html":{}}}],["3/4",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":207,"title":{},"body":{"components/Slides.html":{}}}],["3rd",{"_index":335,"title":{},"body":{"index.html":{}}}],["4",{"_index":347,"title":{},"body":{"overview.html":{}}}],["5",{"_index":348,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["5/9",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["6/10",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":349,"title":{},"body":{"overview.html":{}}}],["75",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":210,"title":{},"body":{"components/Slides.html":{}}}],["actual_component",{"_index":128,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["alias",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":353,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":328,"title":{},"body":{"index.html":{}}}],["angular/platform",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["api.ts",{"_index":196,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["async",{"_index":271,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["attr",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["attribute",{"_index":85,"title":{},"body":{"components/Code.html":{}}}],["autoplay",{"_index":216,"title":{},"body":{"components/Slides.html":{}}}],["available",{"_index":62,"title":{},"body":{"components/Code.html":{}}}],["avoid",{"_index":262,"title":{},"body":{"components/Slides.html":{}}}],["back",{"_index":244,"title":{},"body":{"components/Slides.html":{}}}],["below",{"_index":48,"title":{},"body":{"components/Code.html":{}}}],["between",{"_index":256,"title":{},"body":{"components/Slides.html":{}}}],["bindings",{"_index":338,"title":{},"body":{"index.html":{}}}],["block",{"_index":204,"title":{},"body":{"components/Slides.html":{}}}],["booleanattribute",{"_index":237,"title":{},"body":{"components/Slides.html":{}}}],["both",{"_index":364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":214,"title":{},"body":{"components/Slides.html":{}}}],["case",{"_index":70,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["class",{"_index":131,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}},"body":{"coverage.html":{}}}],["classes",{"_index":133,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code'},{'name",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["codeharness",{"_index":132,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":332,"title":{},"body":{"index.html":{}}}],["community",{"_index":344,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":326,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":115,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["componentharness",{"_index":157,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":87,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["const",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["constructor",{"_index":234,"title":{},"body":{"components/Slides.html":{}}}],["containing",{"_index":18,"title":{},"body":{"components/Code.html":{}}}],["content",{"_index":39,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"index.html":{}}}],["contentchildren(slide",{"_index":267,"title":{},"body":{"components/Slides.html":{}}}],["contentcontainercomponentharness",{"_index":140,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["contentsrc",{"_index":123,"title":{"directives/ContentSrc.html":{}},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["coverage",{"_index":277,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":217,"title":{},"body":{"components/Slides.html":{}}}],["custom",{"_index":33,"title":{},"body":{"components/Code.html":{}}}],["cyclic",{"_index":218,"title":{},"body":{"components/Slides.html":{}}}],["dec",{"_index":226,"title":{},"body":{"components/Slides.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":219,"title":{},"body":{"components/Slides.html":{}}}],["dependencies",{"_index":307,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{}}}],["different",{"_index":41,"title":{},"body":{"components/Code.html":{}}}],["directive",{"_index":144,"title":{"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"coverage.html":{}}}],["directives",{"_index":54,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":14,"title":{},"body":{"components/Code.html":{}}}],["display",{"_index":8,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["displayed",{"_index":19,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["documentation",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":264,"title":{},"body":{"components/Slides.html":{}}}],["el",{"_index":220,"title":{},"body":{"components/Slides.html":{}}}],["element",{"_index":249,"title":{},"body":{"components/Slides.html":{}}}],["empty",{"_index":45,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["emptystate",{"_index":57,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":155,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"coverage.html":{}}}],["enabled",{"_index":257,"title":{},"body":{"components/Slides.html":{}}}],["encapsulation",{"_index":200,"title":{},"body":{"components/Slides.html":{}}}],["error",{"_index":44,"title":{},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["error(error_both",{"_index":94,"title":{},"body":{"components/Code.html":{}}}],["error(error_none",{"_index":93,"title":{},"body":{"components/Code.html":{}}}],["error_both",{"_index":283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_none",{"_index":285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorstate",{"_index":56,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":159,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/ErrorStateHarness.html":{},"coverage.html":{}}}],["example",{"_index":47,"title":{},"body":{"components/Code.html":{}}}],["examples",{"_index":49,"title":{},"body":{"components/Code.html":{}}}],["exportas",{"_index":153,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["express",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":139,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["false",{"_index":192,"title":{},"body":{"components/Slide.html":{}}}],["fetch",{"_index":15,"title":{},"body":{"components/Code.html":{}}}],["fetching",{"_index":60,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["file",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["first",{"_index":227,"title":{},"body":{"components/Slides.html":{}}}],["fullscreen",{"_index":250,"title":{},"body":{"components/Slides.html":{}}}],["function",{"_index":34,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":98,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":182,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":183,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getslideatindex",{"_index":272,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslideatindex(index",{"_index":275,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslidecount",{"_index":273,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getting",{"_index":317,"title":{"index.html":{}},"body":{}}],["harness",{"_index":136,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts",{"_index":135,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["height",{"_index":208,"title":{},"body":{"components/Slides.html":{}}}],["hide",{"_index":190,"title":{},"body":{"components/Slide.html":{}}}],["highlighter",{"_index":32,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["highlightercore",{"_index":37,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":11,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["holds",{"_index":259,"title":{},"body":{"components/Slides.html":{}}}],["host",{"_index":64,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["hostselector",{"_index":142,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["httpresource.text",{"_index":108,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":107,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":113,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["idx",{"_index":221,"title":{},"body":{"components/Slides.html":{}}}],["ignored",{"_index":86,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/Code.html":{}}}],["importing",{"_index":50,"title":{},"body":{"components/Code.html":{}}}],["inc",{"_index":228,"title":{},"body":{"components/Slides.html":{}}}],["increase",{"_index":260,"title":{},"body":{"components/Slides.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["inject(domsanitizer",{"_index":109,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(elementref",{"_index":248,"title":{},"body":{"components/Slides.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["input(\"github",{"_index":178,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":106,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":112,"title":{},"body":{"components/Code.html":{}}}],["input>(0",{"_index":252,"title":{},"body":{"components/Slides.html":{}}}],["input>(5000",{"_index":254,"title":{},"body":{"components/Slides.html":{}}}],["input>(false",{"_index":235,"title":{},"body":{"components/Slides.html":{}}}],["inputs",{"_index":17,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{}}}],["instance",{"_index":35,"title":{},"body":{"components/Code.html":{}}}],["interacting",{"_index":137,"title":{},"body":{"classes/CodeHarness.html":{}}}],["interval",{"_index":222,"title":{},"body":{"components/Slides.html":{}}}],["lang",{"_index":23,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":25,"title":{},"body":{"components/Code.html":{}}}],["last",{"_index":229,"title":{},"body":{"components/Slides.html":{}}}],["left",{"_index":213,"title":{},"body":{"components/Slides.html":{}}}],["libraries",{"_index":337,"title":{},"body":{"index.html":{}}}],["light",{"_index":179,"title":{},"body":{"components/Markdown.html":{}}}],["linkedsignal",{"_index":240,"title":{},"body":{"components/Slides.html":{}}}],["list",{"_index":268,"title":{},"body":{"components/Slides.html":{}}}],["loaded",{"_index":185,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["loading",{"_index":43,"title":{},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["loadingstate",{"_index":55,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":161,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":71,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["loop",{"_index":243,"title":{},"body":{"components/Slides.html":{}}}],["made",{"_index":343,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":176,"title":{},"body":{"components/Markdown.html":{}}}],["manipulations",{"_index":265,"title":{},"body":{"components/Slides.html":{}}}],["markdown",{"_index":118,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdown'},{'name",{"_index":119,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["markdownharness",{"_index":180,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":359,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["markedoptions",{"_index":361,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":130,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":63,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["methods",{"_index":168,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["micro",{"_index":321,"title":{},"body":{"index.html":{}}}],["milliseconds",{"_index":255,"title":{},"body":{"components/Slides.html":{}}}],["min",{"_index":205,"title":{},"body":{"components/Slides.html":{}}}],["miscellaneous",{"_index":351,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":187,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modules",{"_index":345,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":116,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["nested",{"_index":38,"title":{},"body":{"components/Code.html":{}}}],["new",{"_index":92,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["next",{"_index":230,"title":{},"body":{"components/Slides.html":{}}}],["ng)angular",{"_index":320,"title":{},"body":{"index.html":{}}}],["null",{"_index":357,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["number",{"_index":269,"title":{},"body":{"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["numberattribute",{"_index":253,"title":{},"body":{"components/Slides.html":{}}}],["ok",{"_index":127,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["okstate",{"_index":126,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["one",{"_index":246,"title":{},"body":{"components/Slides.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["options",{"_index":167,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":346,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":306,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":322,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":170,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["parse",{"_index":95,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(code",{"_index":103,"title":{},"body":{"components/Code.html":{}}}],["parse(text",{"_index":169,"title":{},"body":{"components/Markdown.html":{}}}],["parse(this.res.value",{"_index":105,"title":{},"body":{"components/Code.html":{}}}],["parser",{"_index":177,"title":{},"body":{"components/Markdown.html":{}}}],["parsing",{"_index":360,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["party",{"_index":336,"title":{},"body":{"index.html":{}}}],["performance",{"_index":261,"title":{},"body":{"components/Slides.html":{}}}],["position",{"_index":202,"title":{},"body":{"components/Slides.html":{}}}],["prev",{"_index":223,"title":{},"body":{"components/Slides.html":{}}}],["previous",{"_index":231,"title":{},"body":{"components/Slides.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["programming",{"_index":24,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":186,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["promise",{"_index":276,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["properties",{"_index":75,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"properties.html":{}}}],["protected",{"_index":77,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["provide",{"_index":83,"title":{},"body":{"components/Code.html":{}}}],["provided",{"_index":151,"title":{},"body":{"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":147,"title":{},"body":{"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["providing",{"_index":59,"title":{},"body":{"components/Code.html":{}}}],["reaching",{"_index":245,"title":{},"body":{"components/Slides.html":{}}}],["readonly",{"_index":76,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["reference",{"_index":242,"title":{},"body":{"components/Slides.html":{}}}],["relative",{"_index":203,"title":{},"body":{"components/Slides.html":{}}}],["remote",{"_index":16,"title":{},"body":{"components/Code.html":{}}}],["requests",{"_index":251,"title":{},"body":{"components/Slides.html":{}}}],["res",{"_index":79,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":166,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":163,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":165,"title":{},"body":{"components/Markdown.html":{}}}],["res.value",{"_index":164,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":72,"title":{},"body":{"components/Code.html":{}}}],["resource",{"_index":148,"title":{},"body":{"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["results",{"_index":129,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":102,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":171,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["right",{"_index":215,"title":{},"body":{"components/Slides.html":{}}}],["sanitize",{"_index":80,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":46,"title":{},"body":{"components/Code.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["server",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":84,"title":{},"body":{"components/Code.html":{},"miscellaneous/variables.html":{}}}],["shiki",{"_index":29,"title":{},"body":{"components/Code.html":{}}}],["shiki's",{"_index":36,"title":{},"body":{"components/Code.html":{}}}],["shouldplay",{"_index":224,"title":{},"body":{"components/Slides.html":{}}}],["show",{"_index":191,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["simple",{"_index":324,"title":{},"body":{"index.html":{}}}],["slide",{"_index":120,"title":{"components/Slide.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"coverage.html":{}}}],["slide'},{'name",{"_index":121,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["slideharness",{"_index":194,"title":{"classes/SlideHarness.html":{}},"body":{"classes/SlideHarness.html":{},"coverage.html":{}}}],["slides",{"_index":122,"title":{"components/Slides.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"index.html":{}}}],["slidesharness",{"_index":270,"title":{"classes/SlidesHarness.html":{}},"body":{"classes/SlidesHarness.html":{},"coverage.html":{}}}],["slideshow",{"_index":239,"title":{},"body":{"components/Slides.html":{}}}],["smart",{"_index":325,"title":{},"body":{"index.html":{}}}],["source",{"_index":9,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["specified",{"_index":149,"title":{},"body":{"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["specifies",{"_index":150,"title":{},"body":{"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["src",{"_index":21,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["src.ts",{"_index":146,"title":{},"body":{"directives/ContentSrc.html":{},"coverage.html":{}}}],["started",{"_index":318,"title":{"index.html":{}},"body":{}}],["state",{"_index":69,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{}}}],["state,[xpr",{"_index":124,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["state]'},{'name",{"_index":125,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["statements",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["static",{"_index":141,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["string",{"_index":13,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":198,"title":{},"body":{"components/Slides.html":{}}}],["supported",{"_index":28,"title":{},"body":{"components/Code.html":{}}}],["supports",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":68,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":10,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["t",{"_index":356,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":12,"title":{},"body":{"components/Code.html":{}}}],["template",{"_index":67,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["tests",{"_index":138,"title":{},"body":{"classes/CodeHarness.html":{}}}],["text",{"_index":96,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":30,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.autoplay",{"_index":266,"title":{},"body":{"components/Slides.html":{}}}],["this.code",{"_index":89,"title":{},"body":{"components/Code.html":{}}}],["this.content",{"_index":172,"title":{},"body":{"components/Markdown.html":{}}}],["this.idx",{"_index":241,"title":{},"body":{"components/Slides.html":{}}}],["this.interval",{"_index":247,"title":{},"body":{"components/Slides.html":{}}}],["this.lang",{"_index":99,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforall(slideharness",{"_index":274,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["this.locatorforoptional",{"_index":197,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":184,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["this.parse(this.content",{"_index":173,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":174,"title":{},"body":{"components/Markdown.html":{}}}],["this.res.hasvalue",{"_index":104,"title":{},"body":{"components/Code.html":{}}}],["this.res.status",{"_index":111,"title":{},"body":{"components/Code.html":{}}}],["this.res.value",{"_index":175,"title":{},"body":{"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":97,"title":{},"body":{"components/Code.html":{}}}],["this.src",{"_index":90,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["this.theme",{"_index":100,"title":{},"body":{"components/Code.html":{}}}],["throw",{"_index":91,"title":{},"body":{"components/Code.html":{}}}],["timer",{"_index":225,"title":{},"body":{"components/Slides.html":{}}}],["toggleautoplay",{"_index":232,"title":{},"body":{"components/Slides.html":{}}}],["togglefullscreen",{"_index":233,"title":{},"body":{"components/Slides.html":{}}}],["top",{"_index":211,"title":{},"body":{"components/Slides.html":{}}}],["tostring",{"_index":101,"title":{},"body":{"components/Code.html":{}}}],["transform",{"_index":236,"title":{},"body":{"components/Slides.html":{}}}],["tslib",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":143,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":352,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unable",{"_index":20,"title":{},"body":{"components/Code.html":{}}}],["undefined",{"_index":358,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unnecessary",{"_index":263,"title":{},"body":{"components/Slides.html":{}}}],["url",{"_index":22,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["use",{"_index":31,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["used",{"_index":7,"title":{},"body":{"components/Code.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["valid",{"_index":26,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":81,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":114,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["variable",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":362,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":334,"title":{},"body":{"index.html":{}}}],["version",{"_index":330,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":323,"title":{},"body":{"index.html":{}}}],["viewencapsulation.none",{"_index":201,"title":{},"body":{"components/Slides.html":{}}}],["viewer",{"_index":342,"title":{},"body":{"index.html":{}}}],["void",{"_index":193,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["whether",{"_index":238,"title":{},"body":{"components/Slides.html":{}}}],["width",{"_index":206,"title":{},"body":{"components/Slides.html":{}}}],["xpr",{"_index":66,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["xpr)experimental",{"_index":319,"title":{},"body":{"index.html":{}}}],["xpremptystate",{"_index":154,"title":{},"body":{"directives/EmptyState.html":{}}}],["xprerrorstate",{"_index":158,"title":{},"body":{"directives/ErrorState.html":{}}}],["xprloadingstate",{"_index":160,"title":{},"body":{"directives/LoadingState.html":{}}}],["xprng/.../code.ts",{"_index":363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xprng/.../markdown.ts",{"_index":355,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/.../slides.ts",{"_index":354,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code",{"_index":340,"title":{},"body":{"index.html":{}}}],["xprng/code\";importing",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts",{"_index":5,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["xprng/code/testing/code",{"_index":134,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":331,"title":{},"body":{"index.html":{}}}],["xprng/common\";directly",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["xprng/common/src/content",{"_index":145,"title":{},"body":{"directives/ContentSrc.html":{},"coverage.html":{}}}],["xprng/common/src/states.ts",{"_index":152,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":156,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/markdown",{"_index":339,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":162,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/testing/markdown",{"_index":181,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/slides",{"_index":341,"title":{},"body":{"index.html":{}}}],["xprng/slides/src/slide.ts",{"_index":189,"title":{},"body":{"components/Slide.html":{},"coverage.html":{}}}],["xprng/slides/src/slides.ts",{"_index":199,"title":{},"body":{"components/Slides.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/slides/testing/public",{"_index":195,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["xprng/vendor",{"_index":333,"title":{},"body":{"index.html":{}}}],["xprokstate",{"_index":188,"title":{},"body":{"directives/OkState.html":{}}}],["zoneless",{"_index":327,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n    \n        Description\n    \n    \n        Code\nThis component is used to display source code with syntax highlighting.\nIt can either take a string of code directly or fetch it from a remote source.\nInputs\n\ncode: A string containing the source code to be displayed. Unable to be used with src.\nsrc: A URL from which to fetch the source code. Unable to be used with code.\nlang: The programming language of the source code. This should be a valid language identifier supported by Shiki.\ntheme: The theme to use for syntax highlighting. This can be any theme supported by Shiki.\nhighlighter: A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\nNested Content\nThe component supports nested content for different states, loading, error, and empty states.\nSee the example below for how to use these states.\nExamples\nImporting the component\nExample :import { Code } from \"@xprng/code\";Importing states directives\nExample :import { LoadingState, ErrorState, EmptyState } from \"@xprng/common\";Directly providing code content\nExample :Fetching code from a remote source\nExample :Using nested content for different states\nExample :\n  Loading...\n  Error loading code.\n  No code available.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @switch (state()) {\n  @case (\"local\") {\n    \n  }\n  @case (\"error\") {\n    \n  }\n  @case (\"loading\") {\n    \n  }\n  @case (\"resolved\") {\n    \n  }\n  @default {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Private\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Protected\n                                state\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Source code content as a string\nThis can be used to directly provide source code content.\nIf this is set, the src attribute will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const code = this.code() as string;\n    const src = this.src() as string;\n\n    if (!code && !src) {\n      throw new Error(ERROR_NONE);\n    }\n    if (code && src) {\n      throw new Error(ERROR_BOTH);\n    }\n\n    const parse = (text: string) =>\n      this.sanitize.bypassSecurityTrustHtml(\n        getHighlighter().codeToHtml(text, {\n          lang: this.lang(),\n          theme: this.theme(),\n        }).toString(),\n      );\n\n    if (code) return parse(code as string);\n\n    if (this.res.hasValue()) {\n      return parse(this.res.value());\n    }\n\n    return parse(\"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n\n            \n                \n                    The programming language of the source code.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the source code content.\nThis is optional and can be used to fetch source code content from a URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.code()) return \"local\";\n    if (this.src()) return this.res.status();\n    return \"empty\";\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch (state()) {  @case (\"local\") {      }  @case (\"error\") {      }  @case (\"loading\") {      }  @case (\"resolved\") {      }  @default {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n            \n                Description\n            \n            \n                Harness for interacting with Code components in tests.\n\n            \n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-code\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentSrc.html":{"url":"directives/ContentSrc.html","title":"directive - ContentSrc","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ContentSrc\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/content-src.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Provides code to be displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n            \n                \n                    Resource for fetching the code from the specified source URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Specifies the source URL for the code.\nIf code is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    ContentSrc\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (content()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                markdown\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        markdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.content()\n      ? this.parse(this.content()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Provides code to be displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n            \n                \n                    Resource for fetching the code from the specified source URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Specifies the source URL for the code.\nIf code is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (content()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n\n            \n                \n                    The code projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n\n            \n                \n                    The code projected in case of \"code\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slide.html":{"url":"components/Slide.html","title":"component - Slide","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slide\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slide.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                xpr-slide\n            \n\n\n\n\n\n            \n                template\n                @if (display()) {\n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (display()) {  }'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slide'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlideHarness.html":{"url":"classes/SlideHarness.html","title":"class - SlideHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlideHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slide\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slides.html":{"url":"components/Slides.html","title":"component - Slides","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slides\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slides.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-slides\n            \n\n\n\n\n            \n                styles\n                \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                autoplay\n                            \n                            \n                                    Private\n                                    Readonly\n                                current\n                            \n                            \n                                    Readonly\n                                cyclic\n                            \n                            \n                                    Private\n                                    Readonly\n                                delay\n                            \n                            \n                                    Private\n                                    Readonly\n                                el\n                            \n                            \n                                    Readonly\n                                idx\n                            \n                            \n                                    Readonly\n                                interval\n                            \n                            \n                                    Private\n                                prev\n                            \n                            \n                                    Private\n                                    Readonly\n                                shouldPlay\n                            \n                            \n                                    Private\n                                    Readonly\n                                slides\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dec\n                            \n                            \n                                    Protected\n                                first\n                            \n                            \n                                    Protected\n                                inc\n                            \n                            \n                                    Protected\n                                last\n                            \n                            \n                                    Protected\n                                next\n                            \n                            \n                                    Protected\n                                previous\n                            \n                            \n                                    Protected\n                                toggleAutoPlay\n                            \n                            \n                                    Protected\n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dec\n                        \n                    \n                \n            \n            \n                \n                        \n                    dec()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        first\n                        \n                    \n                \n            \n            \n                \n                        \n                    first()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        inc\n                        \n                    \n                \n            \n            \n                \n                        \n                    inc()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        last\n                        \n                    \n                \n            \n            \n                \n                        \n                    last()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleAutoPlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleAutoPlay()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleFullScreen\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFullScreen()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        autoplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n            \n                \n                    Whether the slideshow should autoplay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.idx())\n                    \n                \n\n            \n                \n                    Current slide index reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        cyclic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n            \n                \n                    Whether the slideshow should loop back to the first slide after reaching the last one.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.interval())\n                    \n                \n\n            \n                \n                    Interval reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n\n            \n                \n                    Reference to the host element for fullscreen requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        idx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(0, { transform: numberAttribute })\n                    \n                \n\n            \n                \n                    The index of the slide to show.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(5000, {\n    transform: numberAttribute,\n  })\n                    \n                \n\n            \n                \n                    The interval in milliseconds between slides when autoplay is enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prev\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n\n            \n                \n                    holds the previous slide index to increase performance\nand avoid unnecessary DOM manipulations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        shouldPlay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.autoplay())\n                    \n                \n\n            \n                \n                    Autoplay reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : contentChildren(Slide)\n                    \n                \n\n            \n                \n                    Slides list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n            \n                \n                    autoplay timer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n    \n            \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slides'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlidesHarness.html":{"url":"classes/SlidesHarness.html","title":"class - SlidesHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlidesHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                            \n                                    Readonly\n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSlideAtIndex\n                            \n                            \n                                    Async\n                                getSlideCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slides\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForAll(SlideHarness)\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideAtIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideAtIndex(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideCount()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_BOTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_NONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                xprng/common/src/content-src.ts\n            \n            directive\n            ContentSrc\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                xprng/slides/src/slide.ts\n            \n            component\n            Slide\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                xprng/slides/src/slides.ts\n            \n            component\n            Slides\n            \n                52 %\n                (11/21)\n            \n        \n        \n            \n                \n                        xprng/slides/src/slides.ts\n            \n            type alias\n            Attr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlideHarness\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlidesHarness\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/platform-server : ^20.1.0\n        \n            @angular/ssr : ^20.1.5\n        \n            express : ^5.1.0\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XPR)Experimental (NG)Angular Components\nMicro packages of very simple, yet, smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nPackage\nComponent\nVersion\nContent\n\n\n\n\n@xprng/common\nCommon\n\nState directives\n\n\n@xprng/vendor\nVendor\n\n3rd party libraries bindings\n\n\n@xprng/markdown\nMarkdown\n\nMarkdown component\n\n\n@xprng/code\nCode\n\nCode highlighter component\n\n\n@xprng/slides\nSlides\n\nSlides viewer component\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Attr   (xprng/.../slides.ts)\n                        \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/slides/src/slides.ts\n    \n    \n        \n            \n                \n                    \n                    Attr\n                \n            \n            \n                \n                        T | string | null | undefined\n\n                \n            \n        \n    \n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ERROR_BOTH   (xprng/.../code.ts)\n                        \n                        \n                            ERROR_NONE   (xprng/.../code.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/code/src/code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_BOTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input should be provided, not both.\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input must be provided. Neither is set.\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
