var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,0.958,1,0.855]],["body/components/Code.html",[0,0.92,1,1.373,2,0.745,3,0.141,4,0.118,5,0.848,6,0.848,7,1.04,8,0.722,9,2.749,10,1.932,11,1.898,12,1.898,13,1.04,14,0.821,15,1.04,16,1.777,17,1.777,18,0.848,19,1.04,20,1.234,21,1.405,22,1.04,23,1.662,24,1.911,25,1.616,26,1.234,27,2.752,28,1.777,29,2.752,30,1.777,31,1.45,32,2.752,33,2.752,34,3.094,35,1.898,36,2.522,37,1.777,38,1.777,39,1.777,40,1.777,41,1.777,42,2.327,43,1.04,44,1.777,45,3.092,46,1.695,47,1.587,48,1.297,49,2.327,50,3.368,51,1.04,52,1.04,53,1.04,54,1.777,55,0.043,56,1.04,57,0.472,58,0.745,59,0.745,60,0.745,61,1.04,62,1.04,63,1.234,64,1.04,65,1.04,66,0.348,67,0.745,68,0.389,69,0.722,70,1.536,71,0.624,72,0.628,73,1.777,74,0.727,75,3.094,76,1.898,77,1.777,78,0.995,79,0.189,80,0.323,81,2.034,82,1.899,83,1.234,84,1.45,85,1.234,86,0.932,87,1.45,88,1.04,89,1.45,90,0.848,91,1.04,92,1.04,93,1.04,94,1.04,95,1.04,96,1.45,97,2.748,98,1.04,99,1.04,100,1.04,101,1.04,102,1.04,103,0.848,104,1.234,105,1.04,106,1.04,107,1.04,108,0.722,109,0.722,110,0.722,111,0.722,112,0.722,113,1.662,114,0.628,115,1.462,116,0.628,117,0.348,118,0.628,119,0.436,120,0.628,121,0.665,122,1.03,123,1.405,124,0.436,125,0.944,126,0.628,127,0.013,128,0.013]],["title/classes/CodeHarness.html",[129,1.073,130,1.99]],["body/classes/CodeHarness.html",[1,1.075,2,1.513,3,0.487,4,0.411,6,2.941,10,1.513,14,1.075,55,0.039,66,1.205,71,0.569,78,0.848,79,0.655,80,0.824,86,0.848,127,0.034,128,0.034,130,2.504,131,1.35,132,2.941,133,1.699,134,3.606,135,3.606,136,3.606,137,2.177,138,1.901,139,1.901,140,0.957]],["title/directives/ContentSrc.html",[67,1.203,141,1.35]],["body/directives/ContentSrc.html",[0,1.034,1,1.463,3,0.418,4,0.352,9,2.851,10,1.722,20,2.149,21,1.868,23,2.479,24,2.851,25,2.851,26,2.149,55,0.04,57,0.821,63,2.149,67,1.298,78,1.084,79,0.562,80,0.746,81,2.479,82,2.202,85,2.851,86,1.084,104,2.149,108,2.149,109,2.149,110,2.149,111,2.149,112,2.149,127,0.031,128,0.031,142,2.524,143,2.524]],["title/directives/EmptyState.html",[60,1.203,141,1.35]],["body/directives/EmptyState.html",[3,0.541,4,0.456,48,2.277,55,0.037,57,1.062,60,1.679,68,1.499,70,1.499,71,0.631,74,0.942,122,1.499,127,0.037,128,0.037,144,2.127,145,2.417,146,4.003]],["title/classes/EmptyStateHarness.html",[129,1.073,147,1.99]],["body/classes/EmptyStateHarness.html",[3,0.504,4,0.425,14,1.112,48,1.757,55,0.04,66,1.247,71,0.588,74,0.877,78,0.877,79,0.678,80,0.841,86,0.877,127,0.035,128,0.035,131,1.396,133,1.757,138,1.942,139,1.942,140,0.99,147,2.59,148,2.252,149,2.59]],["title/directives/ErrorState.html",[59,1.203,141,1.35]],["body/directives/ErrorState.html",[3,0.541,4,0.456,47,2.277,55,0.037,57,1.062,59,1.679,68,1.499,70,1.499,71,0.631,74,0.942,122,1.499,127,0.037,128,0.037,144,2.127,145,2.417,150,4.003]],["title/classes/ErrorStateHarness.html",[129,1.073,151,1.99]],["body/classes/ErrorStateHarness.html",[3,0.504,4,0.425,14,1.112,47,1.757,55,0.04,66,1.247,71,0.588,74,0.877,78,0.877,79,0.678,80,0.841,86,0.877,127,0.035,128,0.035,131,1.396,133,1.757,138,1.942,139,1.942,140,0.99,148,2.252,149,2.59,151,2.59]],["title/directives/LoadingState.html",[58,1.203,141,1.35]],["body/directives/LoadingState.html",[3,0.541,4,0.456,46,2.277,55,0.037,57,1.062,58,1.679,68,1.499,70,1.499,71,0.631,74,0.942,122,1.499,127,0.037,128,0.037,144,2.127,145,2.417,152,4.003]],["title/classes/LoadingStateHarness.html",[129,1.073,153,1.99]],["body/classes/LoadingStateHarness.html",[3,0.504,4,0.425,14,1.112,46,1.757,55,0.04,66,1.247,71,0.588,74,0.877,78,0.877,79,0.678,80,0.841,86,0.877,127,0.035,128,0.035,131,1.396,133,1.757,138,1.942,139,1.942,140,0.99,148,2.252,149,2.59,153,2.59]],["title/components/Markdown.html",[0,0.958,117,0.958]],["body/components/Markdown.html",[0,0.512,1,1.139,2,1.027,3,0.207,4,0.174,9,1.699,10,1.465,11,1.249,12,1.249,14,0.73,20,1.063,21,0.924,23,2.109,24,2.123,25,1.699,26,1.063,34,2.494,35,1.249,46,1.153,47,1.153,48,1.153,55,0.044,57,0.406,58,0.642,59,0.642,60,0.642,63,1.063,66,0.512,67,1.027,68,0.573,69,1.063,70,1.759,71,0.722,72,0.924,74,0.36,78,1.006,79,0.278,80,0.445,81,2.109,82,2.049,83,2.425,84,1.996,85,1.699,86,1.006,87,1.249,89,1.996,90,1.249,96,1.249,97,1.249,103,1.249,104,1.063,108,1.063,109,1.063,110,1.063,111,1.063,112,1.063,113,2.109,114,0.924,115,2.029,116,0.924,117,1.361,118,0.924,119,0.642,120,0.924,121,0.916,122,1.308,123,1.846,124,0.642,125,1.3,126,0.924,127,0.019,128,0.019,140,0.406,154,1.063,155,2.447,156,2.447,157,2.447,158,2.447,159,2.494,160,1.477,161,1.531,162,1.249,163,1.249,164,0.924,165,1.531,166,1.531,167,1.531,168,1.531,169,1.531,170,1.531,171,1.531]],["title/classes/MarkdownHarness.html",[129,1.073,172,1.99]],["body/classes/MarkdownHarness.html",[1,1.393,3,0.43,4,0.363,14,0.95,21,2.526,23,1.923,55,0.04,66,1.064,71,0.502,75,3.414,76,2.598,78,1.1,79,0.579,80,0.761,86,1.1,117,1.064,127,0.032,128,0.032,131,1.192,133,1.5,137,1.923,138,1.755,139,1.755,140,0.845,172,2.211,173,2.598,174,4.184,175,4.184,176,4.184,177,3.185,178,4.184,179,4.184]],["title/directives/OkState.html",[124,1.203,141,1.35]],["body/directives/OkState.html",[3,0.541,4,0.456,55,0.037,57,1.062,68,1.499,70,1.499,71,0.631,74,0.942,122,1.499,124,1.679,125,2.569,127,0.037,128,0.037,144,2.127,145,2.417,180,4.003]],["title/components/Slide.html",[0,0.958,119,1.203]],["body/components/Slide.html",[1,0.694,2,1.414,3,0.315,4,0.265,8,3.335,18,2.749,46,1.588,47,1.588,48,1.588,55,0.042,57,0.618,58,0.977,59,0.977,60,0.977,67,0.977,68,0.871,70,1.965,71,0.815,72,1.405,74,0.548,78,0.793,79,0.423,80,0.612,82,1.414,86,0.793,113,2.621,114,1.405,115,2.307,116,1.405,117,0.778,118,1.405,119,1.821,120,1.405,121,1.262,122,1.625,123,2.391,124,0.977,125,1.791,126,1.405,127,0.026,128,0.026,160,2.034,164,2.034,181,1.899,182,3.961,183,3.231,184,3.37,185,2.749]],["title/classes/SlideHarness.html",[129,1.073,186,1.99]],["body/classes/SlideHarness.html",[3,0.481,4,0.405,10,1.886,14,1.061,55,0.041,66,1.19,71,0.561,78,1.058,79,0.647,80,0.817,82,1.886,86,1.058,119,1.493,127,0.034,128,0.034,131,1.332,137,2.149,138,1.886,139,1.886,140,0.944,186,2.471,187,2.471,188,2.471,189,2.903]],["title/components/Slides.html",[0,0.958,121,1.073]],["body/components/Slides.html",[1,0.322,2,0.771,3,0.146,4,0.123,8,1.961,46,0.865,47,0.865,48,0.865,55,0.042,57,0.287,58,0.454,59,0.454,60,0.454,67,0.454,68,0.405,69,1.276,70,1.56,71,0.709,72,0.653,74,0.254,78,1.009,79,0.513,80,0.334,81,2.855,82,2.034,83,3.181,86,1.009,113,1.705,114,0.653,115,1.5,116,0.653,117,0.361,118,0.653,119,1.539,120,0.653,121,1.606,122,1.057,123,1.446,124,0.454,125,0.976,126,0.653,127,0.014,128,0.014,140,0.287,160,1.109,164,2.331,183,0.882,185,3.149,190,1.837,191,0.751,192,1.081,193,1.081,194,2.823,195,1.837,196,2.823,197,2.823,198,1.837,199,1.837,200,1.837,201,1.837,202,1.837,203,1.837,204,3.283,205,1.837,206,1.837,207,1.837,208,3.439,209,2.395,210,1.837,211,1.837,212,1.837,213,1.837,214,2.823,215,1.837,216,1.837,217,2.395,218,2.395,219,2.823,220,2.395,221,2.823,222,2.395,223,2.823,224,2.395,225,2.395,226,1.837,227,1.837,228,2.823,229,1.837,230,1.837,231,1.837,232,2.395,233,1.081,234,2.823,235,1.081,236,1.081,237,1.081,238,1.081,239,1.081,240,1.081,241,1.081,242,1.081,243,1.081,244,1.081,245,1.837,246,1.081,247,1.081,248,1.081,249,1.081,250,1.081,251,1.081,252,1.081,253,1.081,254,1.081,255,1.081,256,1.081,257,1.081,258,1.081,259,1.081,260,1.081,261,0.882]],["title/classes/SlidesHarness.html",[129,1.073,262,1.99]],["body/classes/SlidesHarness.html",[3,0.394,4,0.332,10,1.654,14,0.868,55,0.041,66,0.973,71,0.459,78,1.052,79,0.717,80,0.717,82,2.009,86,1.052,115,1.548,121,1.673,127,0.03,128,0.03,131,1.09,137,1.758,138,1.654,139,1.654,140,1.046,160,2.38,162,2.376,163,2.376,164,2.38,187,2.022,188,2.022,189,2.376,261,3.216,262,2.022,263,4.789,264,3.942,265,4.469,266,2.912,267,2.912,268,3.942]],["title/coverage.html",[269,3.182]],["body/coverage.html",[0,1.409,1,0.652,4,0.249,5,1.785,31,1.785,55,0.043,58,0.918,59,0.918,60,0.918,67,0.918,117,0.731,119,0.918,121,0.819,124,0.918,127,0.024,128,0.024,129,1.819,130,1.519,132,1.785,133,2.117,140,1.014,141,2.117,142,1.785,143,1.785,144,2.24,147,1.519,148,2.307,151,1.519,153,1.519,154,2.236,172,1.519,173,1.785,181,1.785,186,1.519,187,2.236,188,2.236,191,2.236,204,4.28,262,1.519,269,1.785,270,1.785,271,2.188,272,2.188,273,2.188,274,3.22,275,2.188,276,2.188,277,2.188,278,4.493,279,3.822,280,2.188,281,2.188,282,3.22,283,1.785,284,2.188,285,2.188,286,2.188,287,2.188,288,2.188,289,2.188,290,1.785,291,2.188,292,2.188,293,2.188,294,2.188,295,2.188]],["title/dependencies.html",[296,1.666,297,2.81]],["body/dependencies.html",[55,0.043,127,0.037,128,0.037,297,3.265,298,4.003,299,4.003,300,4.003,301,4.003,302,4.003,303,4.003,304,4.003,305,4.003,306,4.003]],["title/index.html",[79,0.436,307,2.4,308,2.4]],["body/index.html",[0,1.659,1,1.248,2,1.755,10,1.336,36,2.598,55,0.035,57,0.845,74,0.749,117,1.399,121,1.567,127,0.032,128,0.032,270,2.598,296,2.211,309,3.185,310,3.185,311,3.185,312,3.185,313,3.185,314,3.185,315,3.185,316,3.185,317,3.185,318,4.184,319,3.185,320,2.598,321,3.185,322,3.185,323,3.185,324,3.185,325,3.185,326,3.185,327,3.185,328,3.185,329,3.185,330,3.185,331,3.185,332,3.185,333,3.185,334,3.185,335,3.185,336,3.185,337,3.185]],["title/modules.html",[338,3.182]],["body/modules.html",[55,0.039,127,0.039,128,0.039,338,3.61]],["title/overview.html",[339,3.182]],["body/overview.html",[2,1.77,55,0.038,57,1.12,127,0.038,128,0.038,131,1.58,339,3.442,340,4.22,341,4.22,342,4.22]],["title/properties.html",[80,0.626,296,1.666]],["body/properties.html",[55,0.041,80,0.785,127,0.038,128,0.038,320,3.524,343,4.32]],["title/miscellaneous/typealiases.html",[344,1.957,345,3.444]],["body/miscellaneous/typealiases.html",[14,1.112,55,0.041,79,0.678,117,1.247,127,0.035,128,0.035,140,0.99,154,2.59,159,3.042,191,2.59,283,3.776,290,3.776,344,3.042,346,3.729,347,3.729,348,3.729,349,3.729,350,3.729,351,3.729,352,3.729,353,3.729,354,3.729]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":204,"title":{},"body":{"components/Slides.html":{},"coverage.html":{}}}],["0.0.0",{"_index":343,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":250,"title":{},"body":{"components/Slides.html":{}}}],["1/1",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["11/21",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":319,"title":{},"body":{"index.html":{}}}],["20.1.0",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["2em",{"_index":201,"title":{},"body":{"components/Slides.html":{}}}],["3/4",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":199,"title":{},"body":{"components/Slides.html":{}}}],["3rd",{"_index":325,"title":{},"body":{"index.html":{}}}],["4",{"_index":340,"title":{},"body":{"overview.html":{}}}],["5",{"_index":341,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["5/9",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":342,"title":{},"body":{"overview.html":{}}}],["7/10",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":202,"title":{},"body":{"components/Slides.html":{}}}],["actual_component",{"_index":126,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["alias",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":346,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":318,"title":{},"body":{"index.html":{}}}],["angular/platform",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["api.ts",{"_index":188,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["async",{"_index":263,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["attr",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["autoplay",{"_index":208,"title":{},"body":{"components/Slides.html":{}}}],["available",{"_index":65,"title":{},"body":{"components/Code.html":{}}}],["avoid",{"_index":254,"title":{},"body":{"components/Slides.html":{}}}],["back",{"_index":236,"title":{},"body":{"components/Slides.html":{}}}],["below",{"_index":51,"title":{},"body":{"components/Code.html":{}}}],["between",{"_index":248,"title":{},"body":{"components/Slides.html":{}}}],["bindings",{"_index":328,"title":{},"body":{"index.html":{}}}],["block",{"_index":196,"title":{},"body":{"components/Slides.html":{}}}],["booleanattribute",{"_index":229,"title":{},"body":{"components/Slides.html":{}}}],["bottom",{"_index":206,"title":{},"body":{"components/Slides.html":{}}}],["case",{"_index":75,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["class",{"_index":129,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}},"body":{"coverage.html":{}}}],["classes",{"_index":131,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{}}}],["code'},{'name",{"_index":116,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["codeharness",{"_index":130,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":322,"title":{},"body":{"index.html":{}}}],["community",{"_index":337,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":316,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":114,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["componentharness",{"_index":149,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":87,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["const",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["constructor",{"_index":226,"title":{},"body":{"components/Slides.html":{}}}],["containing",{"_index":19,"title":{},"body":{"components/Code.html":{}}}],["content",{"_index":10,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"index.html":{}}}],["contentchildren(slide",{"_index":259,"title":{},"body":{"components/Slides.html":{}}}],["contentcontainercomponentharness",{"_index":137,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["contentsrc",{"_index":67,"title":{"directives/ContentSrc.html":{}},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["coverage",{"_index":269,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":209,"title":{},"body":{"components/Slides.html":{}}}],["custom",{"_index":37,"title":{},"body":{"components/Code.html":{}}}],["cyclic",{"_index":210,"title":{},"body":{"components/Slides.html":{}}}],["dec",{"_index":218,"title":{},"body":{"components/Slides.html":{}}}],["default",{"_index":78,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["delay",{"_index":211,"title":{},"body":{"components/Slides.html":{}}}],["dependencies",{"_index":297,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{}}}],["different",{"_index":44,"title":{},"body":{"components/Code.html":{}}}],["directive",{"_index":141,"title":{"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"coverage.html":{}}}],["directives",{"_index":57,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":15,"title":{},"body":{"components/Code.html":{}}}],["display",{"_index":8,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["displayed",{"_index":20,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["docs",{"_index":334,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":270,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":256,"title":{},"body":{"components/Slides.html":{}}}],["el",{"_index":212,"title":{},"body":{"components/Slides.html":{}}}],["element",{"_index":241,"title":{},"body":{"components/Slides.html":{}}}],["empty",{"_index":48,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["emptystate",{"_index":60,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":147,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"coverage.html":{}}}],["enabled",{"_index":249,"title":{},"body":{"components/Slides.html":{}}}],["encapsulation",{"_index":192,"title":{},"body":{"components/Slides.html":{}}}],["error",{"_index":47,"title":{},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["errorstate",{"_index":59,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":151,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/ErrorStateHarness.html":{},"coverage.html":{}}}],["example",{"_index":50,"title":{},"body":{"components/Code.html":{}}}],["examples",{"_index":52,"title":{},"body":{"components/Code.html":{}}}],["exportas",{"_index":145,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["express",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":66,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["false",{"_index":184,"title":{},"body":{"components/Slide.html":{}}}],["fetch",{"_index":16,"title":{},"body":{"components/Code.html":{}}}],["fetching",{"_index":63,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["file",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["first",{"_index":219,"title":{},"body":{"components/Slides.html":{}}}],["fullscreen",{"_index":242,"title":{},"body":{"components/Slides.html":{}}}],["function",{"_index":38,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":92,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":174,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":175,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getslideatindex",{"_index":264,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslideatindex(index",{"_index":267,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslidecount",{"_index":265,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getting",{"_index":307,"title":{"index.html":{}},"body":{}}],["harness",{"_index":134,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts",{"_index":133,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["height",{"_index":200,"title":{},"body":{"components/Slides.html":{}}}],["hide",{"_index":182,"title":{},"body":{"components/Slide.html":{}}}],["highlighter",{"_index":36,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["highlightercore",{"_index":41,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":12,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["holds",{"_index":251,"title":{},"body":{"components/Slides.html":{}}}],["host",{"_index":69,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["hostselector",{"_index":139,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["httpresource.text",{"_index":109,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":102,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":107,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":31,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["idx",{"_index":213,"title":{},"body":{"components/Slides.html":{}}}],["ignored",{"_index":26,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["import",{"_index":54,"title":{},"body":{"components/Code.html":{}}}],["importing",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["inc",{"_index":220,"title":{},"body":{"components/Slides.html":{}}}],["increase",{"_index":252,"title":{},"body":{"components/Slides.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["inject(domsanitizer",{"_index":103,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(elementref",{"_index":240,"title":{},"body":{"components/Slides.html":{}}}],["input",{"_index":24,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["input(\"github",{"_index":170,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":101,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":106,"title":{},"body":{"components/Code.html":{}}}],["input>(0",{"_index":244,"title":{},"body":{"components/Slides.html":{}}}],["input>(5000",{"_index":246,"title":{},"body":{"components/Slides.html":{}}}],["input>(false",{"_index":227,"title":{},"body":{"components/Slides.html":{}}}],["inputs",{"_index":18,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{}}}],["instance",{"_index":39,"title":{},"body":{"components/Code.html":{}}}],["interacting",{"_index":135,"title":{},"body":{"classes/CodeHarness.html":{}}}],["interval",{"_index":214,"title":{},"body":{"components/Slides.html":{}}}],["lang",{"_index":27,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":29,"title":{},"body":{"components/Code.html":{}}}],["last",{"_index":221,"title":{},"body":{"components/Slides.html":{}}}],["left",{"_index":205,"title":{},"body":{"components/Slides.html":{}}}],["libraries",{"_index":327,"title":{},"body":{"index.html":{}}}],["light",{"_index":171,"title":{},"body":{"components/Markdown.html":{}}}],["linkedsignal",{"_index":232,"title":{},"body":{"components/Slides.html":{}}}],["list",{"_index":260,"title":{},"body":{"components/Slides.html":{}}}],["loaded",{"_index":177,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["loading",{"_index":46,"title":{},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["loadingstate",{"_index":58,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":153,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":76,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["loop",{"_index":235,"title":{},"body":{"components/Slides.html":{}}}],["made",{"_index":336,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":168,"title":{},"body":{"components/Markdown.html":{}}}],["manipulations",{"_index":257,"title":{},"body":{"components/Slides.html":{}}}],["markdown",{"_index":117,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdown'},{'name",{"_index":118,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["markdownharness",{"_index":172,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":283,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":352,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["markedoptions",{"_index":354,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":128,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":68,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["methods",{"_index":160,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["micro",{"_index":311,"title":{},"body":{"index.html":{}}}],["milliseconds",{"_index":247,"title":{},"body":{"components/Slides.html":{}}}],["min",{"_index":197,"title":{},"body":{"components/Slides.html":{}}}],["miscellaneous",{"_index":344,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mode",{"_index":179,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modules",{"_index":338,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":115,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["nested",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["new",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["next",{"_index":222,"title":{},"body":{"components/Slides.html":{}}}],["ng)angular",{"_index":310,"title":{},"body":{"index.html":{}}}],["null",{"_index":350,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["number",{"_index":261,"title":{},"body":{"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["numberattribute",{"_index":245,"title":{},"body":{"components/Slides.html":{}}}],["ok",{"_index":125,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["okstate",{"_index":124,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["one",{"_index":238,"title":{},"body":{"components/Slides.html":{}}}],["optional",{"_index":163,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["options",{"_index":159,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["overrides",{"_index":22,"title":{},"body":{"components/Code.html":{}}}],["overview",{"_index":339,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":296,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":312,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":162,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["parse",{"_index":89,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(text",{"_index":161,"title":{},"body":{"components/Markdown.html":{}}}],["parse(this.content",{"_index":98,"title":{},"body":{"components/Code.html":{}}}],["parse(this.res.value",{"_index":100,"title":{},"body":{"components/Code.html":{}}}],["parser",{"_index":169,"title":{},"body":{"components/Markdown.html":{}}}],["parsing",{"_index":353,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["party",{"_index":326,"title":{},"body":{"index.html":{}}}],["performance",{"_index":253,"title":{},"body":{"components/Slides.html":{}}}],["position",{"_index":194,"title":{},"body":{"components/Slides.html":{}}}],["prev",{"_index":215,"title":{},"body":{"components/Slides.html":{}}}],["previous",{"_index":223,"title":{},"body":{"components/Slides.html":{}}}],["private",{"_index":83,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["programming",{"_index":28,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":178,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["promise",{"_index":268,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["properties",{"_index":80,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"properties.html":{}}}],["protected",{"_index":81,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["provided",{"_index":21,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["provides",{"_index":108,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["providing",{"_index":62,"title":{},"body":{"components/Code.html":{}}}],["reaching",{"_index":237,"title":{},"body":{"components/Slides.html":{}}}],["readonly",{"_index":82,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["reference",{"_index":234,"title":{},"body":{"components/Slides.html":{}}}],["relative",{"_index":195,"title":{},"body":{"components/Slides.html":{}}}],["remote",{"_index":17,"title":{},"body":{"components/Code.html":{}}}],["requests",{"_index":243,"title":{},"body":{"components/Slides.html":{}}}],["res",{"_index":85,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":158,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":155,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":157,"title":{},"body":{"components/Markdown.html":{}}}],["res.value",{"_index":156,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":77,"title":{},"body":{"components/Code.html":{}}}],["resource",{"_index":110,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["results",{"_index":127,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":97,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":164,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["right",{"_index":207,"title":{},"body":{"components/Slides.html":{}}}],["sanitize",{"_index":84,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":49,"title":{},"body":{"components/Code.html":{}}}],["selector",{"_index":70,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["server",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["shiki",{"_index":33,"title":{},"body":{"components/Code.html":{}}}],["shiki's",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["shouldplay",{"_index":216,"title":{},"body":{"components/Slides.html":{}}}],["show",{"_index":183,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["simple",{"_index":314,"title":{},"body":{"index.html":{}}}],["slide",{"_index":119,"title":{"components/Slide.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"coverage.html":{}}}],["slide'},{'name",{"_index":120,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["slideharness",{"_index":186,"title":{"classes/SlideHarness.html":{}},"body":{"classes/SlideHarness.html":{},"coverage.html":{}}}],["slides",{"_index":121,"title":{"components/Slides.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"index.html":{}}}],["slidesharness",{"_index":262,"title":{"classes/SlidesHarness.html":{}},"body":{"classes/SlidesHarness.html":{},"coverage.html":{}}}],["slideshow",{"_index":231,"title":{},"body":{"components/Slides.html":{}}}],["smart",{"_index":315,"title":{},"body":{"index.html":{}}}],["source",{"_index":9,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["specified",{"_index":111,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["specifies",{"_index":112,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["src",{"_index":23,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["src.ts",{"_index":143,"title":{},"body":{"directives/ContentSrc.html":{},"coverage.html":{}}}],["started",{"_index":308,"title":{"index.html":{}},"body":{}}],["state",{"_index":74,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{}}}],["state,[xpr",{"_index":122,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["state]'},{'name",{"_index":123,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["statements",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":45,"title":{},"body":{"components/Code.html":{}}}],["static",{"_index":138,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["string",{"_index":14,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":190,"title":{},"body":{"components/Slides.html":{}}}],["supported",{"_index":32,"title":{},"body":{"components/Code.html":{}}}],["supports",{"_index":43,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":73,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":11,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["t",{"_index":349,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":13,"title":{},"body":{"components/Code.html":{}}}],["template",{"_index":72,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["tests",{"_index":136,"title":{},"body":{"classes/CodeHarness.html":{}}}],["text",{"_index":90,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":34,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.autoplay",{"_index":258,"title":{},"body":{"components/Slides.html":{}}}],["this.content",{"_index":96,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.idx",{"_index":233,"title":{},"body":{"components/Slides.html":{}}}],["this.interval",{"_index":239,"title":{},"body":{"components/Slides.html":{}}}],["this.lang",{"_index":93,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforall(slideharness",{"_index":266,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["this.locatorforoptional",{"_index":189,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":176,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["this.parse(this.content",{"_index":165,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":166,"title":{},"body":{"components/Markdown.html":{}}}],["this.res.hasvalue",{"_index":99,"title":{},"body":{"components/Code.html":{}}}],["this.res.status",{"_index":105,"title":{},"body":{"components/Code.html":{}}}],["this.res.value",{"_index":167,"title":{},"body":{"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":91,"title":{},"body":{"components/Code.html":{}}}],["this.src",{"_index":104,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["this.theme",{"_index":94,"title":{},"body":{"components/Code.html":{}}}],["timer",{"_index":217,"title":{},"body":{"components/Slides.html":{}}}],["toggleautoplay",{"_index":224,"title":{},"body":{"components/Slides.html":{}}}],["togglefullscreen",{"_index":225,"title":{},"body":{"components/Slides.html":{}}}],["top",{"_index":203,"title":{},"body":{"components/Slides.html":{}}}],["tostring",{"_index":95,"title":{},"body":{"components/Code.html":{}}}],["transform",{"_index":228,"title":{},"body":{"components/Slides.html":{}}}],["tslib",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":140,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":345,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":351,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unnecessary",{"_index":255,"title":{},"body":{"components/Slides.html":{}}}],["url",{"_index":25,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["use",{"_index":35,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["used",{"_index":7,"title":{},"body":{"components/Code.html":{}}}],["using",{"_index":64,"title":{},"body":{"components/Code.html":{}}}],["utilities",{"_index":335,"title":{},"body":{"index.html":{}}}],["valid",{"_index":30,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":86,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["var",{"_index":113,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["vendor",{"_index":324,"title":{},"body":{"index.html":{}}}],["version",{"_index":320,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":313,"title":{},"body":{"index.html":{}}}],["viewencapsulation.none",{"_index":193,"title":{},"body":{"components/Slides.html":{}}}],["viewer",{"_index":332,"title":{},"body":{"index.html":{}}}],["void",{"_index":185,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["whether",{"_index":230,"title":{},"body":{"components/Slides.html":{}}}],["width",{"_index":198,"title":{},"body":{"components/Slides.html":{}}}],["xpr",{"_index":71,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["xpr)experimental",{"_index":309,"title":{},"body":{"index.html":{}}}],["xpremptystate",{"_index":146,"title":{},"body":{"directives/EmptyState.html":{}}}],["xprerrorstate",{"_index":150,"title":{},"body":{"directives/ErrorState.html":{}}}],["xprloadingstate",{"_index":152,"title":{},"body":{"directives/LoadingState.html":{}}}],["xprng/.../markdown.ts",{"_index":348,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/.../slides.ts",{"_index":347,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code",{"_index":330,"title":{},"body":{"index.html":{}}}],["xprng/code/src/code.ts",{"_index":5,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["xprng/code/testing/code",{"_index":132,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":321,"title":{},"body":{"index.html":{}}}],["xprng/common\";directly",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["xprng/common/src/content",{"_index":142,"title":{},"body":{"directives/ContentSrc.html":{},"coverage.html":{}}}],["xprng/common/src/states.ts",{"_index":144,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":148,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/content\";importing",{"_index":56,"title":{},"body":{"components/Code.html":{}}}],["xprng/docs",{"_index":333,"title":{},"body":{"index.html":{}}}],["xprng/markdown",{"_index":329,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":154,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/testing/markdown",{"_index":173,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/slides",{"_index":331,"title":{},"body":{"index.html":{}}}],["xprng/slides/src/slide.ts",{"_index":181,"title":{},"body":{"components/Slide.html":{},"coverage.html":{}}}],["xprng/slides/src/slides.ts",{"_index":191,"title":{},"body":{"components/Slides.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/slides/testing/public",{"_index":187,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["xprng/vendor",{"_index":323,"title":{},"body":{"index.html":{}}}],["xprokstate",{"_index":180,"title":{},"body":{"directives/OkState.html":{}}}],["zoneless",{"_index":317,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n    \n        Description\n    \n    \n        Code\nThis component is used to display source content with syntax highlighting.\nIt can either take a string of content directly or fetch it from a remote source.\nInputs\n\ncontent: A string containing the source content to be displayed. When provided, it overrides the src input.\nsrc: A URL from which to fetch the source content. Ignored if content is provided.\nlang: The programming language of the source content. This should be a valid language identifier supported by Shiki.\ntheme: The theme to use for syntax highlighting. This can be any theme supported by Shiki.\nhighlighter: A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\nNested Content\nThe component supports nested code for different states, loading, error, and empty states.\nSee the example below for how to use these states.\nExamples\nImporting the component\nExample :import { Code } from \"@xprng/content\";Importing states directives\nExample :import { LoadingState, ErrorState, EmptyState } from \"@xprng/common\";Directly providing content code\nExample :Fetching content from a remote source\nExample :Using nested code for different states\nExample :\n  Loading...\n  Error loading content.\n  No content available.\n\n    \n\n    \n        Extends\n    \n    \n                    ContentSrc\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @switch (state()) {\n  @case (\"local\") {\n    \n  }\n  @case (\"error\") {\n    \n  }\n  @case (\"loading\") {\n    \n  }\n  @case (\"resolved\") {\n    \n  }\n  @default {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                code\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Protected\n                                state\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const parse = (text: string) =>\n      this.sanitize.bypassSecurityTrustHtml(\n        getHighlighter().codeToHtml(text, {\n          lang: this.lang(),\n          theme: this.theme(),\n        }).toString(),\n      );\n\n    if (this.content()) return parse(this.content() as string);\n\n    if (this.res.hasValue()) return parse(this.res.value());\n\n    return parse(\"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n\n            \n                \n                    The programming language of the source content.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.content()) return \"local\";\n    if (this.src()) return this.res.status();\n    return \"empty\";\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Provides code to be displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n            \n                \n                    Resource for fetching the code from the specified source URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Specifies the source URL for the code.\nIf code is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch (state()) {  @case (\"local\") {      }  @case (\"error\") {      }  @case (\"loading\") {      }  @case (\"resolved\") {      }  @default {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n            \n                Description\n            \n            \n                Harness for interacting with Code components in tests.\n\n            \n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-content\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentSrc.html":{"url":"directives/ContentSrc.html","title":"directive - ContentSrc","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ContentSrc\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/content-src.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Provides code to be displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n            \n                \n                    Resource for fetching the code from the specified source URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Specifies the source URL for the code.\nIf code is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    ContentSrc\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (content()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                markdown\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        markdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.content()\n      ? this.parse(this.content()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Provides code to be displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n            \n                \n                    Resource for fetching the code from the specified source URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Specifies the source URL for the code.\nIf code is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (content()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n\n            \n                \n                    The code projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n\n            \n                \n                    The code projected in case of \"code\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slide.html":{"url":"components/Slide.html","title":"component - Slide","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slide\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slide.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                xpr-slide\n            \n\n\n\n\n\n            \n                template\n                @if (display()) {\n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (display()) {  }'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slide'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlideHarness.html":{"url":"classes/SlideHarness.html","title":"class - SlideHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlideHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slide\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slides.html":{"url":"components/Slides.html","title":"component - Slides","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slides\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slides.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-slides\n            \n\n\n\n\n            \n                styles\n                \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                autoplay\n                            \n                            \n                                    Private\n                                    Readonly\n                                current\n                            \n                            \n                                    Readonly\n                                cyclic\n                            \n                            \n                                    Private\n                                    Readonly\n                                delay\n                            \n                            \n                                    Private\n                                    Readonly\n                                el\n                            \n                            \n                                    Readonly\n                                idx\n                            \n                            \n                                    Readonly\n                                interval\n                            \n                            \n                                    Private\n                                prev\n                            \n                            \n                                    Private\n                                    Readonly\n                                shouldPlay\n                            \n                            \n                                    Private\n                                    Readonly\n                                slides\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dec\n                            \n                            \n                                    Protected\n                                first\n                            \n                            \n                                    Protected\n                                inc\n                            \n                            \n                                    Protected\n                                last\n                            \n                            \n                                    Protected\n                                next\n                            \n                            \n                                    Protected\n                                previous\n                            \n                            \n                                    Protected\n                                toggleAutoPlay\n                            \n                            \n                                    Protected\n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dec\n                        \n                    \n                \n            \n            \n                \n                        \n                    dec()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        first\n                        \n                    \n                \n            \n            \n                \n                        \n                    first()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        inc\n                        \n                    \n                \n            \n            \n                \n                        \n                    inc()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        last\n                        \n                    \n                \n            \n            \n                \n                        \n                    last()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleAutoPlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleAutoPlay()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleFullScreen\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFullScreen()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        autoplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n            \n                \n                    Whether the slideshow should autoplay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.idx())\n                    \n                \n\n            \n                \n                    Current slide index reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        cyclic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n            \n                \n                    Whether the slideshow should loop back to the first slide after reaching the last one.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.interval())\n                    \n                \n\n            \n                \n                    Interval reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n\n            \n                \n                    Reference to the host element for fullscreen requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        idx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(0, { transform: numberAttribute })\n                    \n                \n\n            \n                \n                    The index of the slide to show.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(5000, {\n    transform: numberAttribute,\n  })\n                    \n                \n\n            \n                \n                    The interval in milliseconds between slides when autoplay is enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prev\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n\n            \n                \n                    holds the previous slide index to increase performance\nand avoid unnecessary DOM manipulations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        shouldPlay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.autoplay())\n                    \n                \n\n            \n                \n                    Autoplay reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : contentChildren(Slide)\n                    \n                \n\n            \n                \n                    Slides list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n            \n                \n                    autoplay timer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n    \n            \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slides'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlidesHarness.html":{"url":"classes/SlidesHarness.html","title":"class - SlidesHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlidesHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                            \n                                    Readonly\n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSlideAtIndex\n                            \n                            \n                                    Async\n                                getSlideCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slides\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForAll(SlideHarness)\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideAtIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideAtIndex(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideCount()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                xprng/common/src/content-src.ts\n            \n            directive\n            ContentSrc\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                xprng/slides/src/slide.ts\n            \n            component\n            Slide\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                xprng/slides/src/slides.ts\n            \n            component\n            Slides\n            \n                52 %\n                (11/21)\n            \n        \n        \n            \n                \n                        xprng/slides/src/slides.ts\n            \n            type alias\n            Attr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlideHarness\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlidesHarness\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/platform-server : ^20.1.0\n        \n            @angular/ssr : ^20.1.5\n        \n            express : ^5.1.0\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XPR)Experimental (NG)Angular Components\nMicro packages of very simple, yet, smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nPackage\nComponent\nVersion\nContent\n\n\n\n\n@xprng/common\nCommon\n\nState directives\n\n\n@xprng/vendor\nVendor\n\n3rd party libraries bindings\n\n\n@xprng/markdown\nMarkdown\n\nMarkdown component\n\n\n@xprng/code\nCode\n\nCode highlighter component\n\n\n@xprng/slides\nSlides\n\nSlides viewer component\n\n\n@xprng/docs\nDocs\n\nDocumentation utilities\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Attr   (xprng/.../slides.ts)\n                        \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/slides/src/slides.ts\n    \n    \n        \n            \n                \n                    \n                    Attr\n                \n            \n            \n                \n                        T | string | null | undefined\n\n                \n            \n        \n    \n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
