var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,1.006,1,0.902]],["body/components/Code.html",[0,0.928,1,1.482,2,0.738,3,0.148,4,0.127,5,0.7,6,0.82,7,2.271,8,0.7,9,2.746,10,1.793,11,1.859,12,1.859,13,1.002,14,0.917,15,1.002,16,1.725,17,1.725,18,0.82,19,1.002,20,1.206,21,1.725,22,1.915,23,1.587,24,2.698,25,1.725,26,2.698,27,1.725,28,1.412,29,2.698,30,2.698,31,3.076,32,1.859,33,2.489,34,1.725,35,1.725,36,1.725,37,1.725,38,1.725,39,2.271,40,1.002,41,1.725,42,3.041,43,1.704,44,1.591,45,1.292,46,2.271,47,3.323,48,1.002,49,1.002,50,1.002,51,1.725,52,0.041,53,1.002,54,0.476,55,0.738,56,0.738,57,0.738,58,1.002,59,1.002,60,1.206,61,1.002,62,1.002,63,0.345,64,0.738,65,0.384,66,0.7,67,1.564,68,0.668,69,0.611,70,1.725,71,0.749,72,3.076,73,1.859,74,1.725,75,0.922,76,0.17,77,0.334,78,2.025,79,1.934,80,1.206,81,1.412,82,1.206,83,0.861,84,1.412,85,2.271,86,1.412,87,1.587,88,1.725,89,1.412,90,1.002,91,1.002,92,1.412,93,0.82,94,1.002,95,1.002,96,1.002,97,1.002,98,1.002,99,2.72,100,1.002,101,1.002,102,1.002,103,1.384,104,1.002,105,1.002,106,0.82,107,1.002,108,1.002,109,1.002,110,0.7,111,0.7,112,0.7,113,0.7,114,0.7,115,0.539,116,0.7,117,1.645,118,0.611,119,1.452,120,0.611,121,0.345,122,0.611,123,0.429,124,0.611,125,0.661,126,1.035,127,1.384,128,0.429,129,0.928,130,0.611,131,0.012,132,0.012]],["title/classes/CodeHarness.html",[133,1.122,134,2.045]],["body/classes/CodeHarness.html",[1,1.128,2,1.565,3,0.54,4,0.464,6,2.993,10,1.402,14,1.009,52,0.038,63,1.258,68,0.621,75,0.801,76,0.621,77,0.89,83,0.801,131,0.033,132,0.033,134,2.556,135,1.402,136,2.993,137,1.751,138,3.657,139,3.657,140,3.657,141,2.229,142,1.968,143,1.968,144,0.901]],["title/directives/ContentSrc.html",[64,1.252,145,1.401]],["body/directives/ContentSrc.html",[0,1.079,1,1.535,3,0.463,4,0.398,9,2.91,10,1.597,20,2.193,22,2.241,23,2.91,52,0.038,54,0.866,60,2.193,64,1.343,75,1.024,76,0.533,77,0.806,78,2.538,79,2.279,82,2.91,83,1.024,87,2.193,103,2.538,110,2.193,111,2.193,112,2.193,113,2.193,114,2.193,115,1.689,116,2.193,131,0.03,132,0.03,146,2.568,147,2.568]],["title/directives/EmptyState.html",[57,1.252,145,1.401]],["body/directives/EmptyState.html",[3,0.6,4,0.515,45,2.348,52,0.035,54,1.121,57,1.738,65,1.557,67,1.557,68,0.69,71,1,126,1.557,131,0.035,132,0.035,148,2.185,149,2.475,150,4.061]],["title/classes/EmptyStateHarness.html",[133,1.122,151,2.045]],["body/classes/EmptyStateHarness.html",[3,0.559,4,0.48,14,1.044,45,1.811,52,0.038,63,1.301,68,0.643,71,0.932,75,0.828,76,0.643,77,0.909,83,0.828,131,0.034,132,0.034,135,1.45,137,1.811,142,2.009,143,2.009,144,0.932,151,2.643,152,2.306,153,2.643]],["title/directives/ErrorState.html",[56,1.252,145,1.401]],["body/directives/ErrorState.html",[3,0.6,4,0.515,44,2.348,52,0.035,54,1.121,56,1.738,65,1.557,67,1.557,68,0.69,71,1,126,1.557,131,0.035,132,0.035,148,2.185,149,2.475,154,4.061]],["title/classes/ErrorStateHarness.html",[133,1.122,155,2.045]],["body/classes/ErrorStateHarness.html",[3,0.559,4,0.48,14,1.044,44,1.811,52,0.038,63,1.301,68,0.643,71,0.932,75,0.828,76,0.643,77,0.909,83,0.828,131,0.034,132,0.034,135,1.45,137,1.811,142,2.009,143,2.009,144,0.932,152,2.306,153,2.643,155,2.643]],["title/directives/LoadingState.html",[55,1.252,145,1.401]],["body/directives/LoadingState.html",[3,0.6,4,0.515,43,2.348,52,0.035,54,1.121,55,1.738,65,1.557,67,1.557,68,0.69,71,1,126,1.557,131,0.035,132,0.035,148,2.185,149,2.475,156,4.061]],["title/classes/LoadingStateHarness.html",[133,1.122,157,2.045]],["body/classes/LoadingStateHarness.html",[3,0.559,4,0.48,14,1.044,43,1.811,52,0.038,63,1.301,68,0.643,71,0.932,75,0.828,76,0.643,77,0.909,83,0.828,131,0.034,132,0.034,135,1.45,137,1.811,142,2.009,143,2.009,144,0.932,152,2.306,153,2.643,157,2.643]],["title/components/Markdown.html",[0,1.006,121,1.006]],["body/components/Markdown.html",[0,0.533,1,1.194,2,1.062,3,0.229,4,0.197,9,1.734,10,1.358,11,1.27,12,1.27,14,0.685,20,1.084,22,1.906,23,1.734,31,2.537,32,1.27,43,1.188,44,1.188,45,1.188,52,0.042,54,0.428,55,0.664,56,0.664,57,0.664,60,1.084,63,0.533,64,1.062,65,0.595,66,1.084,67,1.827,68,0.789,69,0.945,71,0.382,75,0.95,76,0.264,77,0.48,78,2.159,79,2.12,80,2.475,81,2.03,82,1.734,83,0.95,84,1.27,86,1.27,87,1.084,92,2.03,93,1.27,99,1.27,103,1.889,106,1.27,110,1.084,111,1.084,112,1.084,113,1.084,114,1.084,115,0.835,116,1.084,117,2.159,118,0.945,119,2.084,120,0.945,121,1.421,122,0.945,123,0.664,124,0.945,125,0.951,126,1.358,127,1.889,128,0.664,129,1.335,130,0.945,131,0.018,132,0.018,144,0.382,158,1.084,159,2.481,160,2.481,161,2.481,162,2.481,163,2.537,164,1.512,165,1.551,166,1.27,167,1.27,168,0.945,169,1.551,170,1.551,171,1.551,172,1.551,173,1.551,174,1.551,175,1.551]],["title/classes/MarkdownHarness.html",[133,1.122,176,2.045]],["body/classes/MarkdownHarness.html",[1,1.462,3,0.477,4,0.409,14,0.891,22,1.738,52,0.039,63,1.111,68,0.549,72,3.474,73,2.643,75,1.038,76,0.549,77,0.822,83,1.038,115,2.284,121,1.111,131,0.03,132,0.03,135,1.238,137,1.546,141,1.968,142,1.816,143,1.816,144,0.796,176,2.257,177,2.643,178,4.244,179,4.244,180,4.244,181,3.23,182,4.244,183,4.244]],["title/directives/OkState.html",[128,1.252,145,1.401]],["body/directives/OkState.html",[3,0.6,4,0.515,52,0.035,54,1.121,65,1.557,67,1.557,68,0.69,71,1,126,1.557,128,1.738,129,2.639,131,0.035,132,0.035,148,2.185,149,2.475,184,4.061]],["title/components/Slide.html",[0,1.006,123,1.252]],["body/components/Slide.html",[1,0.728,2,1.462,3,0.349,4,0.299,8,3.405,18,2.797,43,1.636,44,1.636,45,1.636,52,0.04,54,0.651,55,1.01,56,1.01,57,1.01,64,1.01,65,0.905,67,2.042,68,0.891,69,1.438,71,0.581,75,0.748,76,0.401,77,0.662,79,1.462,83,0.748,117,2.684,118,1.438,119,2.37,120,1.438,121,0.812,122,1.438,123,1.884,124,1.438,125,1.31,126,1.688,127,2.448,128,1.01,129,1.839,130,1.438,131,0.025,132,0.025,164,2.083,168,2.083,185,1.931,186,4.017,187,3.288,188,3.417,189,2.797]],["title/classes/SlideHarness.html",[133,1.122,190,2.045]],["body/classes/SlideHarness.html",[3,0.533,4,0.458,10,1.749,14,0.996,52,0.039,63,1.241,68,0.613,75,0.999,76,0.613,77,0.883,79,1.951,83,0.999,123,1.545,131,0.033,132,0.033,135,1.384,141,2.2,142,1.951,143,1.951,144,0.889,190,2.523,191,2.523,192,2.523,193,2.954]],["title/components/Slides.html",[0,1.006,125,1.122]],["body/components/Slides.html",[1,0.338,2,0.797,3,0.162,4,0.139,8,2,43,0.891,44,0.891,45,0.891,52,0.04,54,0.302,55,0.469,56,0.469,57,0.469,64,0.469,65,0.42,66,1.301,67,1.62,68,0.775,69,0.668,71,0.27,75,0.953,76,0.486,77,0.36,78,2.923,79,2.105,80,3.247,83,0.953,117,1.745,118,0.668,119,1.541,120,0.668,121,0.377,122,0.668,123,1.592,124,0.668,125,1.668,126,1.098,127,1.48,128,0.469,129,1.002,130,0.668,131,0.013,132,0.013,144,0.27,164,1.135,168,2.386,187,0.897,189,3.204,194,1.862,195,0.766,196,1.096,197,1.096,198,2.862,199,1.862,200,2.862,201,2.862,202,1.862,203,1.862,204,1.862,205,1.862,206,1.862,207,1.862,208,3.34,209,1.862,210,1.862,211,1.862,212,3.487,213,2.428,214,1.862,215,1.862,216,1.862,217,1.862,218,2.862,219,1.862,220,1.862,221,2.428,222,2.428,223,2.862,224,2.428,225,2.862,226,2.428,227,2.862,228,2.428,229,2.428,230,1.862,231,1.862,232,2.862,233,1.862,234,1.862,235,1.862,236,2.428,237,1.096,238,2.862,239,1.096,240,1.096,241,1.096,242,1.096,243,1.096,244,1.096,245,1.096,246,1.096,247,1.096,248,1.096,249,1.862,250,1.096,251,1.096,252,1.096,253,1.096,254,1.096,255,1.096,256,1.096,257,1.096,258,1.096,259,1.096,260,1.096,261,1.096,262,1.096,263,1.096,264,1.096,265,0.897]],["title/classes/SlidesHarness.html",[133,1.122,266,2.045]],["body/classes/SlidesHarness.html",[3,0.436,4,0.374,10,1.533,14,0.815,52,0.04,63,1.016,68,0.502,75,0.993,76,0.679,77,0.774,79,2.079,83,0.993,119,1.589,125,1.738,131,0.029,132,0.029,135,1.132,141,1.8,142,1.711,143,1.711,144,0.985,164,2.437,166,2.417,167,2.417,168,2.437,191,2.064,192,2.064,193,2.417,265,3.273,266,2.064,267,4.858,268,3.999,269,4.533,270,2.953,271,2.953,272,3.999]],["title/coverage.html",[273,3.252]],["body/coverage.html",[0,1.437,1,0.652,4,0.268,5,2.635,28,1.732,52,0.041,55,0.905,56,0.905,57,0.905,64,0.905,89,1.732,121,0.728,123,0.905,125,0.811,128,0.905,131,0.023,132,0.023,133,1.861,134,1.479,136,1.732,137,2.14,144,0.929,145,2.14,146,1.732,147,1.732,148,2.249,151,1.479,152,2.298,155,1.479,157,1.479,158,2.204,176,1.479,177,1.732,185,1.732,190,1.479,191,2.204,192,2.204,195,2.204,208,4.412,266,1.479,273,1.732,274,1.732,275,2.116,276,2.116,277,2.116,278,3.154,279,1.732,280,4.854,281,1.732,282,3.154,283,2.116,284,2.116,285,2.116,286,3.77,287,2.116,288,2.116,289,3.154,290,1.732,291,2.116,292,2.116,293,2.116,294,2.116,295,2.116,296,2.116,297,1.732,298,2.116,299,2.116,300,2.116,301,2.116]],["title/dependencies.html",[302,1.715,303,2.876]],["body/dependencies.html",[52,0.041,131,0.035,132,0.035,303,3.324,304,4.061,305,4.061,306,4.061,307,4.061,308,4.061,309,4.061,310,4.061,311,4.061,312,4.061]],["title/index.html",[76,0.417,313,2.454,314,2.454]],["body/index.html",[0,1.732,1,1.309,2,1.816,10,1.238,33,2.643,52,0.034,54,0.891,71,0.796,121,1.46,125,1.628,131,0.03,132,0.03,274,2.643,302,2.257,315,3.23,316,3.23,317,3.23,318,3.23,319,3.23,320,3.23,321,3.23,322,3.23,323,3.23,324,4.244,325,3.23,326,2.643,327,3.23,328,3.23,329,3.23,330,3.23,331,3.23,332,3.23,333,3.23,334,3.23,335,3.23,336,3.23,337,3.23,338,3.23,339,3.23,340,3.23,341,3.23,342,3.23,343,3.23]],["title/modules.html",[344,3.252]],["body/modules.html",[52,0.037,131,0.037,132,0.037,344,3.675]],["title/overview.html",[345,3.252]],["body/overview.html",[2,1.832,52,0.036,54,1.182,131,0.036,132,0.036,135,1.642,345,3.504,346,4.281,347,4.281,348,4.281]],["title/properties.html",[77,0.68,302,1.715]],["body/properties.html",[52,0.039,77,0.849,131,0.037,132,0.037,326,3.587,349,4.383]],["title/miscellaneous/typealiases.html",[350,1.495,351,3.514]],["body/miscellaneous/typealiases.html",[14,1.044,52,0.039,76,0.643,121,1.301,131,0.034,132,0.034,144,0.932,158,2.643,163,3.096,195,2.643,290,3.843,297,3.843,350,2.306,352,3.783,353,3.783,354,3.783,355,3.783,356,3.783,357,3.783,358,3.783,359,3.783,360,3.783]],["title/miscellaneous/variables.html",[350,1.495,361,2.876]],["body/miscellaneous/variables.html",[5,2.506,10,1.741,14,1.253,22,2.444,52,0.04,75,0.995,76,0.609,83,0.995,103,2.768,115,2.444,131,0.033,132,0.033,144,1.119,279,3.717,281,3.717,350,2.186,361,2.935,362,4.541,363,3.586,364,3.586]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":208,"title":{},"body":{"components/Slides.html":{},"coverage.html":{}}}],["0.0.0",{"_index":349,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":254,"title":{},"body":{"components/Slides.html":{}}}],["1/1",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["11/21",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":325,"title":{},"body":{"index.html":{}}}],["20.1.0",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["2em",{"_index":205,"title":{},"body":{"components/Slides.html":{}}}],["3/4",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":203,"title":{},"body":{"components/Slides.html":{}}}],["3rd",{"_index":331,"title":{},"body":{"index.html":{}}}],["4",{"_index":346,"title":{},"body":{"overview.html":{}}}],["5",{"_index":347,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["5/9",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":348,"title":{},"body":{"overview.html":{}}}],["7/10",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":206,"title":{},"body":{"components/Slides.html":{}}}],["actual_component",{"_index":130,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["alias",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":352,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":324,"title":{},"body":{"index.html":{}}}],["angular/platform",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["api.ts",{"_index":192,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["async",{"_index":267,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["attr",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["autoplay",{"_index":212,"title":{},"body":{"components/Slides.html":{}}}],["available",{"_index":62,"title":{},"body":{"components/Code.html":{}}}],["avoid",{"_index":258,"title":{},"body":{"components/Slides.html":{}}}],["back",{"_index":240,"title":{},"body":{"components/Slides.html":{}}}],["below",{"_index":48,"title":{},"body":{"components/Code.html":{}}}],["between",{"_index":252,"title":{},"body":{"components/Slides.html":{}}}],["bindings",{"_index":334,"title":{},"body":{"index.html":{}}}],["block",{"_index":200,"title":{},"body":{"components/Slides.html":{}}}],["booleanattribute",{"_index":233,"title":{},"body":{"components/Slides.html":{}}}],["both",{"_index":363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":210,"title":{},"body":{"components/Slides.html":{}}}],["case",{"_index":72,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["class",{"_index":133,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}},"body":{"coverage.html":{}}}],["classes",{"_index":135,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{}}}],["codeharness",{"_index":134,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":328,"title":{},"body":{"index.html":{}}}],["community",{"_index":343,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":322,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":118,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["componentharness",{"_index":153,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":84,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["const",{"_index":85,"title":{},"body":{"components/Code.html":{}}}],["constructor",{"_index":230,"title":{},"body":{"components/Slides.html":{}}}],["containing",{"_index":19,"title":{},"body":{"components/Code.html":{}}}],["content",{"_index":10,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["content'},{'name",{"_index":120,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["contentchildren(slide",{"_index":263,"title":{},"body":{"components/Slides.html":{}}}],["contentcontainercomponentharness",{"_index":141,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["contentsrc",{"_index":64,"title":{"directives/ContentSrc.html":{}},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["coverage",{"_index":273,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":213,"title":{},"body":{"components/Slides.html":{}}}],["custom",{"_index":34,"title":{},"body":{"components/Code.html":{}}}],["cyclic",{"_index":214,"title":{},"body":{"components/Slides.html":{}}}],["dec",{"_index":222,"title":{},"body":{"components/Slides.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":215,"title":{},"body":{"components/Slides.html":{}}}],["dependencies",{"_index":303,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{}}}],["different",{"_index":41,"title":{},"body":{"components/Code.html":{}}}],["directive",{"_index":145,"title":{"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"coverage.html":{}}}],["directives",{"_index":54,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":15,"title":{},"body":{"components/Code.html":{}}}],["display",{"_index":8,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["displayed",{"_index":20,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["docs",{"_index":340,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":274,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":260,"title":{},"body":{"components/Slides.html":{}}}],["el",{"_index":216,"title":{},"body":{"components/Slides.html":{}}}],["element",{"_index":245,"title":{},"body":{"components/Slides.html":{}}}],["empty",{"_index":45,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["emptystate",{"_index":57,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":151,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"coverage.html":{}}}],["enabled",{"_index":253,"title":{},"body":{"components/Slides.html":{}}}],["encapsulation",{"_index":196,"title":{},"body":{"components/Slides.html":{}}}],["error",{"_index":44,"title":{},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["error(error_both",{"_index":91,"title":{},"body":{"components/Code.html":{}}}],["error(error_none",{"_index":90,"title":{},"body":{"components/Code.html":{}}}],["error_both",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_none",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorstate",{"_index":56,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":155,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/ErrorStateHarness.html":{},"coverage.html":{}}}],["example",{"_index":47,"title":{},"body":{"components/Code.html":{}}}],["examples",{"_index":49,"title":{},"body":{"components/Code.html":{}}}],["exportas",{"_index":149,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["express",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":63,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["false",{"_index":188,"title":{},"body":{"components/Slide.html":{}}}],["fetch",{"_index":16,"title":{},"body":{"components/Code.html":{}}}],["fetching",{"_index":60,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["file",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["first",{"_index":223,"title":{},"body":{"components/Slides.html":{}}}],["fullscreen",{"_index":246,"title":{},"body":{"components/Slides.html":{}}}],["function",{"_index":35,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":95,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":178,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":179,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getslideatindex",{"_index":268,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslideatindex(index",{"_index":271,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslidecount",{"_index":269,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getting",{"_index":313,"title":{"index.html":{}},"body":{}}],["harness",{"_index":138,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts",{"_index":137,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["height",{"_index":204,"title":{},"body":{"components/Slides.html":{}}}],["hide",{"_index":186,"title":{},"body":{"components/Slide.html":{}}}],["highlighter",{"_index":33,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["highlightercore",{"_index":38,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":12,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["holds",{"_index":255,"title":{},"body":{"components/Slides.html":{}}}],["host",{"_index":66,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["hostselector",{"_index":143,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["httpresource.text",{"_index":111,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":105,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":109,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":28,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["idx",{"_index":217,"title":{},"body":{"components/Slides.html":{}}}],["ignored",{"_index":116,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/Code.html":{}}}],["importing",{"_index":50,"title":{},"body":{"components/Code.html":{}}}],["inc",{"_index":224,"title":{},"body":{"components/Slides.html":{}}}],["increase",{"_index":256,"title":{},"body":{"components/Slides.html":{}}}],["index",{"_index":76,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["inject(domsanitizer",{"_index":106,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(elementref",{"_index":244,"title":{},"body":{"components/Slides.html":{}}}],["input",{"_index":103,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["input(\"github",{"_index":174,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":104,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":108,"title":{},"body":{"components/Code.html":{}}}],["input>(0",{"_index":248,"title":{},"body":{"components/Slides.html":{}}}],["input>(5000",{"_index":250,"title":{},"body":{"components/Slides.html":{}}}],["input>(false",{"_index":231,"title":{},"body":{"components/Slides.html":{}}}],["inputs",{"_index":18,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{}}}],["instance",{"_index":36,"title":{},"body":{"components/Code.html":{}}}],["interacting",{"_index":139,"title":{},"body":{"classes/CodeHarness.html":{}}}],["interval",{"_index":218,"title":{},"body":{"components/Slides.html":{}}}],["lang",{"_index":24,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":26,"title":{},"body":{"components/Code.html":{}}}],["last",{"_index":225,"title":{},"body":{"components/Slides.html":{}}}],["left",{"_index":209,"title":{},"body":{"components/Slides.html":{}}}],["libraries",{"_index":333,"title":{},"body":{"index.html":{}}}],["light",{"_index":175,"title":{},"body":{"components/Markdown.html":{}}}],["linkedsignal",{"_index":236,"title":{},"body":{"components/Slides.html":{}}}],["list",{"_index":264,"title":{},"body":{"components/Slides.html":{}}}],["loaded",{"_index":181,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["loading",{"_index":43,"title":{},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["loadingstate",{"_index":55,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":157,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":73,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["loop",{"_index":239,"title":{},"body":{"components/Slides.html":{}}}],["made",{"_index":342,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":172,"title":{},"body":{"components/Markdown.html":{}}}],["manipulations",{"_index":261,"title":{},"body":{"components/Slides.html":{}}}],["markdown",{"_index":121,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdown'},{'name",{"_index":122,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["markdownharness",{"_index":176,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":358,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["markedoptions",{"_index":360,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":132,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":65,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["methods",{"_index":164,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["micro",{"_index":317,"title":{},"body":{"index.html":{}}}],["milliseconds",{"_index":251,"title":{},"body":{"components/Slides.html":{}}}],["min",{"_index":201,"title":{},"body":{"components/Slides.html":{}}}],["miscellaneous",{"_index":350,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":183,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modules",{"_index":344,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":119,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["nested",{"_index":39,"title":{},"body":{"components/Code.html":{}}}],["new",{"_index":89,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["next",{"_index":226,"title":{},"body":{"components/Slides.html":{}}}],["ng)angular",{"_index":316,"title":{},"body":{"index.html":{}}}],["null",{"_index":356,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["number",{"_index":265,"title":{},"body":{"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["numberattribute",{"_index":249,"title":{},"body":{"components/Slides.html":{}}}],["ok",{"_index":129,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["okstate",{"_index":128,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["one",{"_index":242,"title":{},"body":{"components/Slides.html":{}}}],["optional",{"_index":167,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["options",{"_index":163,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":345,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":302,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":318,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":166,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["parse",{"_index":92,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(code",{"_index":100,"title":{},"body":{"components/Code.html":{}}}],["parse(text",{"_index":165,"title":{},"body":{"components/Markdown.html":{}}}],["parse(this.res.value",{"_index":102,"title":{},"body":{"components/Code.html":{}}}],["parser",{"_index":173,"title":{},"body":{"components/Markdown.html":{}}}],["parsing",{"_index":359,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["party",{"_index":332,"title":{},"body":{"index.html":{}}}],["performance",{"_index":257,"title":{},"body":{"components/Slides.html":{}}}],["position",{"_index":198,"title":{},"body":{"components/Slides.html":{}}}],["prev",{"_index":219,"title":{},"body":{"components/Slides.html":{}}}],["previous",{"_index":227,"title":{},"body":{"components/Slides.html":{}}}],["private",{"_index":80,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["programming",{"_index":25,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":182,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["promise",{"_index":272,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["properties",{"_index":77,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"properties.html":{}}}],["protected",{"_index":78,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["provided",{"_index":115,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":110,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["providing",{"_index":59,"title":{},"body":{"components/Code.html":{}}}],["reaching",{"_index":241,"title":{},"body":{"components/Slides.html":{}}}],["readonly",{"_index":79,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["reference",{"_index":238,"title":{},"body":{"components/Slides.html":{}}}],["relative",{"_index":199,"title":{},"body":{"components/Slides.html":{}}}],["remote",{"_index":17,"title":{},"body":{"components/Code.html":{}}}],["requests",{"_index":247,"title":{},"body":{"components/Slides.html":{}}}],["res",{"_index":82,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":162,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":159,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":161,"title":{},"body":{"components/Markdown.html":{}}}],["res.value",{"_index":160,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":74,"title":{},"body":{"components/Code.html":{}}}],["resource",{"_index":112,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["results",{"_index":131,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":99,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":168,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["right",{"_index":211,"title":{},"body":{"components/Slides.html":{}}}],["sanitize",{"_index":81,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":46,"title":{},"body":{"components/Code.html":{}}}],["selector",{"_index":67,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["server",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shiki",{"_index":30,"title":{},"body":{"components/Code.html":{}}}],["shiki's",{"_index":37,"title":{},"body":{"components/Code.html":{}}}],["shouldplay",{"_index":220,"title":{},"body":{"components/Slides.html":{}}}],["show",{"_index":187,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["simple",{"_index":320,"title":{},"body":{"index.html":{}}}],["slide",{"_index":123,"title":{"components/Slide.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"coverage.html":{}}}],["slide'},{'name",{"_index":124,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["slideharness",{"_index":190,"title":{"classes/SlideHarness.html":{}},"body":{"classes/SlideHarness.html":{},"coverage.html":{}}}],["slides",{"_index":125,"title":{"components/Slides.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"index.html":{}}}],["slidesharness",{"_index":266,"title":{"classes/SlidesHarness.html":{}},"body":{"classes/SlidesHarness.html":{},"coverage.html":{}}}],["slideshow",{"_index":235,"title":{},"body":{"components/Slides.html":{}}}],["smart",{"_index":321,"title":{},"body":{"index.html":{}}}],["source",{"_index":9,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["specified",{"_index":113,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["specifies",{"_index":114,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["src",{"_index":22,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["src.ts",{"_index":147,"title":{},"body":{"directives/ContentSrc.html":{},"coverage.html":{}}}],["started",{"_index":314,"title":{"index.html":{}},"body":{}}],["state",{"_index":71,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{}}}],["state,[xpr",{"_index":126,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["state]'},{'name",{"_index":127,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["statements",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["static",{"_index":142,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["string",{"_index":14,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":194,"title":{},"body":{"components/Slides.html":{}}}],["supported",{"_index":29,"title":{},"body":{"components/Code.html":{}}}],["supports",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":70,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":11,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["t",{"_index":355,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":13,"title":{},"body":{"components/Code.html":{}}}],["template",{"_index":69,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["tests",{"_index":140,"title":{},"body":{"classes/CodeHarness.html":{}}}],["text",{"_index":93,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":31,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.autoplay",{"_index":262,"title":{},"body":{"components/Slides.html":{}}}],["this.content",{"_index":86,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.idx",{"_index":237,"title":{},"body":{"components/Slides.html":{}}}],["this.interval",{"_index":243,"title":{},"body":{"components/Slides.html":{}}}],["this.lang",{"_index":96,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforall(slideharness",{"_index":270,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["this.locatorforoptional",{"_index":193,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":180,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["this.parse(this.content",{"_index":169,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":170,"title":{},"body":{"components/Markdown.html":{}}}],["this.res.hasvalue",{"_index":101,"title":{},"body":{"components/Code.html":{}}}],["this.res.status",{"_index":107,"title":{},"body":{"components/Code.html":{}}}],["this.res.value",{"_index":171,"title":{},"body":{"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":94,"title":{},"body":{"components/Code.html":{}}}],["this.src",{"_index":87,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["this.theme",{"_index":97,"title":{},"body":{"components/Code.html":{}}}],["throw",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["timer",{"_index":221,"title":{},"body":{"components/Slides.html":{}}}],["toggleautoplay",{"_index":228,"title":{},"body":{"components/Slides.html":{}}}],["togglefullscreen",{"_index":229,"title":{},"body":{"components/Slides.html":{}}}],["top",{"_index":207,"title":{},"body":{"components/Slides.html":{}}}],["tostring",{"_index":98,"title":{},"body":{"components/Code.html":{}}}],["transform",{"_index":232,"title":{},"body":{"components/Slides.html":{}}}],["tslib",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":144,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":351,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unable",{"_index":21,"title":{},"body":{"components/Code.html":{}}}],["undefined",{"_index":357,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unnecessary",{"_index":259,"title":{},"body":{"components/Slides.html":{}}}],["url",{"_index":23,"title":{},"body":{"components/Code.html":{},"directives/ContentSrc.html":{},"components/Markdown.html":{}}}],["use",{"_index":32,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["used",{"_index":7,"title":{},"body":{"components/Code.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["utilities",{"_index":341,"title":{},"body":{"index.html":{}}}],["valid",{"_index":27,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":83,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/ContentSrc.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["variable",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":361,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":330,"title":{},"body":{"index.html":{}}}],["version",{"_index":326,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":319,"title":{},"body":{"index.html":{}}}],["viewencapsulation.none",{"_index":197,"title":{},"body":{"components/Slides.html":{}}}],["viewer",{"_index":338,"title":{},"body":{"index.html":{}}}],["void",{"_index":189,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["whether",{"_index":234,"title":{},"body":{"components/Slides.html":{}}}],["width",{"_index":202,"title":{},"body":{"components/Slides.html":{}}}],["xpr",{"_index":68,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["xpr)experimental",{"_index":315,"title":{},"body":{"index.html":{}}}],["xpremptystate",{"_index":150,"title":{},"body":{"directives/EmptyState.html":{}}}],["xprerrorstate",{"_index":154,"title":{},"body":{"directives/ErrorState.html":{}}}],["xprloadingstate",{"_index":156,"title":{},"body":{"directives/LoadingState.html":{}}}],["xprng/.../code.ts",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xprng/.../markdown.ts",{"_index":354,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/.../slides.ts",{"_index":353,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code/src/code.ts",{"_index":5,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["xprng/code/testing/code",{"_index":136,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":327,"title":{},"body":{"index.html":{}}}],["xprng/common\";directly",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["xprng/common/src/content",{"_index":146,"title":{},"body":{"directives/ContentSrc.html":{},"coverage.html":{}}}],["xprng/common/src/states.ts",{"_index":148,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":152,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/content",{"_index":336,"title":{},"body":{"index.html":{}}}],["xprng/content\";importing",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["xprng/docs",{"_index":339,"title":{},"body":{"index.html":{}}}],["xprng/markdown",{"_index":335,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":158,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/testing/markdown",{"_index":177,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/slides",{"_index":337,"title":{},"body":{"index.html":{}}}],["xprng/slides/src/slide.ts",{"_index":185,"title":{},"body":{"components/Slide.html":{},"coverage.html":{}}}],["xprng/slides/src/slides.ts",{"_index":195,"title":{},"body":{"components/Slides.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/slides/testing/public",{"_index":191,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["xprng/vendor",{"_index":329,"title":{},"body":{"index.html":{}}}],["xprokstate",{"_index":184,"title":{},"body":{"directives/OkState.html":{}}}],["zoneless",{"_index":323,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n    \n        Description\n    \n    \n        Code\nThis component is used to display source content with syntax highlighting.\nIt can either take a string of content directly or fetch it from a remote source.\nInputs\n\ncontent: A string containing the source content to be displayed. Unable to be used with src.\nsrc: A URL from which to fetch the source content. Unable to be used with content.\nlang: The programming language of the source content. This should be a valid language identifier supported by Shiki.\ntheme: The theme to use for syntax highlighting. This can be any theme supported by Shiki.\nhighlighter: A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\nNested Content\nThe component supports nested code for different states, loading, error, and empty states.\nSee the example below for how to use these states.\nExamples\nImporting the component\nExample :import { Code } from \"@xprng/content\";Importing states directives\nExample :import { LoadingState, ErrorState, EmptyState } from \"@xprng/common\";Directly providing content code\nExample :Fetching content from a remote source\nExample :Using nested code for different states\nExample :\n  Loading...\n  Error loading content.\n  No content available.\n\n    \n\n    \n        Extends\n    \n    \n                    ContentSrc\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-content\n            \n\n\n\n\n\n            \n                template\n                @switch (state()) {\n  @case (\"local\") {\n    \n  }\n  @case (\"error\") {\n    \n  }\n  @case (\"loading\") {\n    \n  }\n  @case (\"resolved\") {\n    \n  }\n  @default {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                code\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Protected\n                                state\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const code = this.content() as string;\n    const src = this.src() as string;\n\n    if (!code && !src) {\n      throw new Error(ERROR_NONE);\n    }\n    if (code && src) {\n      throw new Error(ERROR_BOTH);\n    }\n\n    const parse = (text: string) =>\n      this.sanitize.bypassSecurityTrustHtml(\n        getHighlighter().codeToHtml(text, {\n          lang: this.lang(),\n          theme: this.theme(),\n        }).toString(),\n      );\n\n    if (code) return parse(code as string);\n\n    if (this.res.hasValue()) {\n      return parse(this.res.value());\n    }\n\n    return parse(\"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n\n            \n                \n                    The programming language of the source content.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.content()) return \"local\";\n    if (this.src()) return this.res.status();\n    return \"empty\";\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Provides code to be displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n            \n                \n                    Resource for fetching the code from the specified source URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Specifies the source URL for the code.\nIf code is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch (state()) {  @case (\"local\") {      }  @case (\"error\") {      }  @case (\"loading\") {      }  @case (\"resolved\") {      }  @default {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-content'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n            \n                Description\n            \n            \n                Harness for interacting with Code components in tests.\n\n            \n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-content\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ContentSrc.html":{"url":"directives/ContentSrc.html","title":"directive - ContentSrc","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ContentSrc\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/content-src.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Provides code to be displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n            \n                \n                    Resource for fetching the code from the specified source URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Specifies the source URL for the code.\nIf code is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    ContentSrc\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (content()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                markdown\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        markdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.content()\n      ? this.parse(this.content()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Provides code to be displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n            \n                \n                    Resource for fetching the code from the specified source URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Specifies the source URL for the code.\nIf code is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (content()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-content'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n\n            \n                \n                    The code projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n\n            \n                \n                    The code projected in case of \"code\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slide.html":{"url":"components/Slide.html","title":"component - Slide","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slide\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slide.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                xpr-slide\n            \n\n\n\n\n\n            \n                template\n                @if (display()) {\n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (display()) {  }'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-content'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slide'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlideHarness.html":{"url":"classes/SlideHarness.html","title":"class - SlideHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlideHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slide\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slides.html":{"url":"components/Slides.html","title":"component - Slides","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slides\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slides.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-slides\n            \n\n\n\n\n            \n                styles\n                \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                autoplay\n                            \n                            \n                                    Private\n                                    Readonly\n                                current\n                            \n                            \n                                    Readonly\n                                cyclic\n                            \n                            \n                                    Private\n                                    Readonly\n                                delay\n                            \n                            \n                                    Private\n                                    Readonly\n                                el\n                            \n                            \n                                    Readonly\n                                idx\n                            \n                            \n                                    Readonly\n                                interval\n                            \n                            \n                                    Private\n                                prev\n                            \n                            \n                                    Private\n                                    Readonly\n                                shouldPlay\n                            \n                            \n                                    Private\n                                    Readonly\n                                slides\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dec\n                            \n                            \n                                    Protected\n                                first\n                            \n                            \n                                    Protected\n                                inc\n                            \n                            \n                                    Protected\n                                last\n                            \n                            \n                                    Protected\n                                next\n                            \n                            \n                                    Protected\n                                previous\n                            \n                            \n                                    Protected\n                                toggleAutoPlay\n                            \n                            \n                                    Protected\n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dec\n                        \n                    \n                \n            \n            \n                \n                        \n                    dec()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        first\n                        \n                    \n                \n            \n            \n                \n                        \n                    first()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        inc\n                        \n                    \n                \n            \n            \n                \n                        \n                    inc()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        last\n                        \n                    \n                \n            \n            \n                \n                        \n                    last()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleAutoPlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleAutoPlay()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleFullScreen\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFullScreen()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        autoplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n            \n                \n                    Whether the slideshow should autoplay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.idx())\n                    \n                \n\n            \n                \n                    Current slide index reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        cyclic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n            \n                \n                    Whether the slideshow should loop back to the first slide after reaching the last one.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.interval())\n                    \n                \n\n            \n                \n                    Interval reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n\n            \n                \n                    Reference to the host element for fullscreen requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        idx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(0, { transform: numberAttribute })\n                    \n                \n\n            \n                \n                    The index of the slide to show.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(5000, {\n    transform: numberAttribute,\n  })\n                    \n                \n\n            \n                \n                    The interval in milliseconds between slides when autoplay is enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prev\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n\n            \n                \n                    holds the previous slide index to increase performance\nand avoid unnecessary DOM manipulations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        shouldPlay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.autoplay())\n                    \n                \n\n            \n                \n                    Autoplay reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : contentChildren(Slide)\n                    \n                \n\n            \n                \n                    Slides list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n            \n                \n                    autoplay timer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n    \n            \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-content'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'ContentSrc', 'selector': ''},{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slides'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlidesHarness.html":{"url":"classes/SlidesHarness.html","title":"class - SlidesHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlidesHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                            \n                                    Readonly\n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSlideAtIndex\n                            \n                            \n                                    Async\n                                getSlideCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slides\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForAll(SlideHarness)\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideAtIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideAtIndex(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideCount()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_BOTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_NONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                xprng/common/src/content-src.ts\n            \n            directive\n            ContentSrc\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                xprng/slides/src/slide.ts\n            \n            component\n            Slide\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                xprng/slides/src/slides.ts\n            \n            component\n            Slides\n            \n                52 %\n                (11/21)\n            \n        \n        \n            \n                \n                        xprng/slides/src/slides.ts\n            \n            type alias\n            Attr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlideHarness\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlidesHarness\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/platform-server : ^20.1.0\n        \n            @angular/ssr : ^20.1.5\n        \n            express : ^5.1.0\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XPR)Experimental (NG)Angular Components\nMicro packages of very simple, yet, smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nPackage\nComponent\nVersion\nContent\n\n\n\n\n@xprng/common\nCommon\n\nState directives\n\n\n@xprng/vendor\nVendor\n\n3rd party libraries bindings\n\n\n@xprng/markdown\nMarkdown\n\nMarkdown component\n\n\n@xprng/content\nCode\n\nCode highlighter component\n\n\n@xprng/slides\nSlides\n\nSlides viewer component\n\n\n@xprng/docs\nDocs\n\nDocumentation utilities\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Attr   (xprng/.../slides.ts)\n                        \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/slides/src/slides.ts\n    \n    \n        \n            \n                \n                    \n                    Attr\n                \n            \n            \n                \n                        T | string | null | undefined\n\n                \n            \n        \n    \n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ERROR_BOTH   (xprng/.../code.ts)\n                        \n                        \n                            ERROR_NONE   (xprng/.../code.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/code/src/code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_BOTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'content' or 'src' input should be provided, not both.\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'content' or 'src' input must be provided. Neither is set.\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
