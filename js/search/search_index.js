var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,1.212,1,0.965]],["body/components/Code.html",[0,0.932,1,1.718,2,0.708,3,0.154,4,0.132,5,0.68,6,0.798,7,2.98,8,0.68,9,3.465,10,1.813,11,1.813,12,0.979,13,0.926,14,1.687,15,2.223,16,1.687,17,0.798,18,0.979,19,0.979,20,1.687,21,2.226,22,1.813,23,2.642,24,1.687,25,2.642,26,1.687,27,1.376,28,2.642,29,2.642,30,3.008,31,1.813,32,2.431,33,1.687,34,1.687,35,1.687,36,1.687,37,1.687,38,2.223,39,1.886,40,0.979,41,1.687,42,2.98,43,1.644,44,1.535,45,1.245,46,2.223,47,3.258,48,0.979,49,0.979,50,0.979,51,1.687,52,0.043,53,0.979,54,0.503,55,0.708,56,0.708,57,0.708,58,0.979,59,0.979,60,0.979,61,0.979,62,0.979,63,0.366,64,0.68,65,1.444,66,0.608,67,0.591,68,1.687,69,0.701,70,3.008,71,1.813,72,1.687,73,0.972,74,0.178,75,0.35,76,2.092,77,1.835,78,1.835,79,1.376,80,1.376,81,0.907,82,1.543,83,0.979,84,0.798,85,0.979,86,0.798,87,1.376,88,2.223,89,1.687,90,1.813,91,1.687,92,1.376,93,0.979,94,0.979,95,1.376,96,0.798,97,0.979,98,0.979,99,0.979,100,0.979,101,0.979,102,2.658,103,0.979,104,0.979,105,0.979,106,0.979,107,0.979,108,0.798,109,0.798,110,0.68,111,0.979,112,0.979,113,0.979,114,1.595,115,0.591,116,1.181,117,0.591,118,0.327,119,0.591,120,0.411,121,0.591,122,0.631,123,0.989,124,1.342,125,0.411,126,0.896,127,0.591,128,0.013,129,0.013]],["title/classes/CodeHarness.html",[130,1.081,131,2.006]],["body/classes/CodeHarness.html",[1,1.514,2,1.511,3,0.568,4,0.487,6,2.939,13,0.956,52,0.039,66,0.568,73,0.848,74,0.655,75,0.94,81,0.848,128,0.034,129,0.034,131,2.501,132,1.349,133,2.939,134,1.697,135,3.602,136,3.602,137,3.602,138,1.511,139,2.175,140,1.9,141,1.9,142,0.848]],["title/directives/EmptyState.html",[57,1.212,143,1.535]],["body/directives/EmptyState.html",[3,0.631,4,0.541,45,2.276,52,0.037,54,1.193,57,1.678,63,1.498,65,1.498,66,0.631,69,0.941,123,1.498,128,0.037,129,0.037,144,2.126,145,2.415,146,4]],["title/classes/EmptyStateHarness.html",[130,1.081,147,2.006]],["body/classes/EmptyStateHarness.html",[3,0.588,4,0.504,13,0.989,45,1.755,52,0.04,66,0.588,69,0.877,73,0.877,74,0.677,75,0.96,81,0.877,128,0.035,129,0.035,132,1.395,134,1.755,138,1.563,140,1.941,141,1.941,142,0.877,147,2.587,148,2.25,149,2.587]],["title/directives/ErrorState.html",[56,1.212,143,1.535]],["body/directives/ErrorState.html",[3,0.631,4,0.541,44,2.276,52,0.037,54,1.193,56,1.678,63,1.498,65,1.498,66,0.631,69,0.941,123,1.498,128,0.037,129,0.037,144,2.126,145,2.415,150,4]],["title/classes/ErrorStateHarness.html",[130,1.081,151,2.006]],["body/classes/ErrorStateHarness.html",[3,0.588,4,0.504,13,0.989,44,1.755,52,0.04,66,0.588,69,0.877,73,0.877,74,0.677,75,0.96,81,0.877,128,0.035,129,0.035,132,1.395,134,1.755,138,1.563,140,1.941,141,1.941,142,0.877,148,2.25,149,2.587,151,2.587]],["title/directives/LoadingState.html",[55,1.212,143,1.535]],["body/directives/LoadingState.html",[3,0.631,4,0.541,43,2.276,52,0.037,54,1.193,55,1.678,63,1.498,65,1.498,66,0.631,69,0.941,123,1.498,128,0.037,129,0.037,144,2.126,145,2.415,152,4]],["title/classes/LoadingStateHarness.html",[130,1.081,153,2.006]],["body/classes/LoadingStateHarness.html",[3,0.588,4,0.504,13,0.989,43,1.755,52,0.04,66,0.588,69,0.877,73,0.877,74,0.677,75,0.96,81,0.877,128,0.035,129,0.035,132,1.395,134,1.755,138,1.563,140,1.941,141,1.941,142,0.877,148,2.25,149,2.587,153,2.587]],["title/components/Markdown.html",[0,1.212,118,0.965]],["body/components/Markdown.html",[1,0.528,2,1.053,3,0.249,4,0.213,9,1.288,10,1.288,11,1.288,13,0.666,21,2.147,22,1.288,30,2.546,31,1.288,39,2.04,43,1.182,44,1.182,45,1.182,52,0.044,54,0.471,55,0.663,56,0.663,57,0.663,63,0.591,64,1.097,65,1.733,66,0.73,67,0.954,69,0.372,73,1.019,74,0.287,75,0.521,76,2.32,77,2.469,78,2.469,79,2.047,80,2.047,81,1.019,82,2.168,86,1.288,87,1.288,90,1.288,95,2.047,96,1.288,102,1.288,108,1.288,109,1.288,110,1.097,114,2.147,115,0.954,116,1.889,117,0.954,118,1.502,119,0.954,120,0.663,121,0.954,122,0.939,123,1.331,124,1.885,125,0.663,126,1.333,127,0.954,128,0.019,129,0.019,142,0.372,154,1.097,155,2.509,156,2.509,157,2.509,158,2.509,159,2.546,160,1.515,161,1.579,162,1.288,163,0.954,164,1.579,165,1.579,166,1.579,167,1.579,168,1.579,169,1.579,170,1.579,171,1.097,172,1.579,173,1.579]],["title/classes/MarkdownHarness.html",[130,1.081,174,2.006]],["body/classes/MarkdownHarness.html",[3,0.501,4,0.43,13,0.844,21,1.92,39,2.2,52,0.04,66,0.501,70,3.41,71,2.594,73,1.099,74,0.578,75,0.868,81,1.099,118,1.063,128,0.032,129,0.032,132,1.191,134,1.498,138,1.334,139,1.92,140,1.754,141,1.754,142,0.748,171,2.903,174,2.208,175,2.594,176,4.181,177,4.181,178,4.181,179,3.18,180,4.181,181,4.181]],["title/directives/OkState.html",[125,1.212,143,1.535]],["body/directives/OkState.html",[3,0.631,4,0.541,52,0.037,54,1.193,63,1.498,65,1.498,66,0.631,69,0.941,123,1.498,125,1.678,126,2.568,128,0.037,129,0.037,144,2.126,145,2.415,182,4]],["title/components/Slide.html",[0,1.212,120,1.212]],["body/components/Slide.html",[1,0.786,2,1.425,3,0.371,4,0.318,8,3.347,17,2.77,43,1.6,44,1.6,45,1.6,52,0.042,54,0.702,55,0.987,56,0.987,57,0.987,63,0.881,65,1.94,66,0.817,67,1.421,69,0.554,73,0.799,74,0.428,75,0.705,76,1.6,81,0.799,114,2.634,115,1.421,116,2.117,117,1.421,118,0.786,119,1.421,120,1.83,121,1.421,122,1.271,123,1.633,124,2.406,125,0.987,126,1.805,127,1.421,128,0.026,129,0.026,160,2.05,163,2.05,183,1.919,184,3.985,185,3.251,186,3.396,187,2.77]],["title/classes/SlideHarness.html",[130,1.081,188,2.006]],["body/classes/SlideHarness.html",[3,0.561,4,0.48,13,0.943,39,2.116,52,0.041,66,0.561,73,1.057,74,0.646,75,0.932,76,2.116,81,1.057,120,1.491,128,0.034,129,0.034,132,1.331,138,1.491,139,2.146,140,1.884,141,1.884,142,0.836,188,2.469,189,2.469,190,2.469,191,2.9]],["title/components/Slides.html",[0,1.212,122,1.081]],["body/components/Slides.html",[1,0.362,2,0.772,3,0.171,4,0.147,8,1.964,43,0.867,44,0.867,45,0.867,52,0.042,54,0.323,55,0.455,56,0.455,57,0.455,63,0.406,64,1.278,65,1.508,66,0.709,67,0.655,69,0.255,73,1.01,74,0.514,75,0.382,76,2.286,77,3.286,78,3.184,81,1.01,114,1.708,115,0.655,116,1.275,117,0.655,118,0.362,119,0.655,120,1.541,121,0.655,122,1.607,123,1.059,124,1.449,125,0.455,126,0.978,127,0.655,128,0.014,129,0.014,142,0.255,160,1.112,163,2.333,185,0.884,187,3.153,192,1.841,193,0.753,194,1.084,195,1.084,196,2.828,197,1.841,198,2.828,199,2.828,200,1.841,201,1.841,202,1.841,203,1.841,204,1.841,205,1.841,206,3.286,207,1.841,208,1.841,209,1.841,210,3.444,211,2.399,212,1.841,213,1.841,214,1.841,215,1.841,216,2.828,217,1.841,218,1.841,219,2.399,220,2.399,221,2.828,222,2.399,223,2.828,224,2.399,225,2.828,226,2.399,227,2.399,228,1.841,229,1.841,230,2.828,231,1.841,232,1.841,233,1.841,234,2.399,235,1.084,236,2.828,237,1.084,238,1.084,239,1.084,240,1.084,241,1.084,242,1.084,243,1.084,244,1.084,245,1.084,246,1.084,247,1.841,248,1.084,249,1.084,250,1.084,251,1.084,252,1.084,253,1.084,254,1.084,255,1.084,256,1.084,257,1.084,258,1.084,259,1.084,260,1.084,261,1.084,262,1.084,263,0.884]],["title/classes/SlidesHarness.html",[130,1.081,264,2.006]],["body/classes/SlidesHarness.html",[3,0.458,4,0.393,13,0.772,39,1.855,52,0.041,66,0.458,73,1.051,74,0.716,75,0.817,76,2.255,81,1.051,110,2.019,116,1.545,122,1.672,128,0.03,129,0.03,132,1.089,138,1.22,139,1.755,140,1.652,141,1.652,142,0.927,160,2.378,162,2.372,163,2.378,189,2.019,190,2.019,191,2.372,263,3.212,264,2.019,265,4.786,266,3.938,267,4.465,268,2.908,269,2.908,270,3.938]],["title/coverage.html",[271,3.198]],["body/coverage.html",[0,1.749,1,0.715,4,0.289,5,2.62,27,1.745,52,0.043,55,0.898,56,0.898,57,0.898,92,1.745,118,0.715,120,0.898,122,0.801,125,0.898,128,0.024,129,0.024,130,1.806,131,1.486,133,1.745,134,2.097,142,0.888,143,2.216,144,2.216,147,1.486,148,2.278,151,1.486,153,1.486,154,2.2,174,1.486,175,1.745,183,1.745,188,1.486,189,2.2,190,2.2,193,2.2,206,4.356,264,1.486,271,1.745,272,2.14,273,2.14,274,2.14,275,2.14,276,3.168,277,1.745,278,4.824,279,1.745,280,3.168,281,2.14,282,3.772,283,2.14,284,2.14,285,3.168,286,1.745,287,2.14,288,2.14,289,2.14,290,2.14,291,2.14,292,2.14,293,1.745,294,2.14,295,2.14,296,2.14,297,2.14]],["title/dependencies.html",[298,1.682,299,2.829]],["body/dependencies.html",[52,0.043,128,0.037,129,0.037,299,3.263,300,4,301,4,302,4,303,4,304,4,305,4,306,4,307,4,308,4]],["title/index.html",[74,0.44,309,2.423,310,2.423]],["body/index.html",[0,2.1,1,1.419,2,1.781,32,2.656,39,1.534,52,0.036,54,0.971,69,0.766,118,1.419,122,1.59,128,0.032,129,0.032,298,2.261,311,3.256,312,3.256,313,3.256,314,3.256,315,3.256,316,3.256,317,3.256,318,3.256,319,3.256,320,4.246,321,3.256,322,2.656,323,3.256,324,3.256,325,3.256,326,3.256,327,3.256,328,3.256,329,3.256,330,3.256,331,3.256,332,3.256,333,3.256,334,3.256,335,3.256,336,3.256]],["title/modules.html",[337,3.198]],["body/modules.html",[52,0.039,128,0.039,129,0.039,337,3.609]],["title/overview.html",[338,3.198]],["body/overview.html",[2,1.77,52,0.038,54,1.258,128,0.038,129,0.038,132,1.579,338,3.441,339,4.987,340,4.218]],["title/properties.html",[75,0.72,298,1.682]],["body/properties.html",[52,0.041,75,0.896,128,0.038,129,0.038,322,3.523,341,4.319]],["title/miscellaneous/typealiases.html",[342,1.463,343,3.468]],["body/miscellaneous/typealiases.html",[13,0.989,52,0.041,74,0.677,118,1.245,128,0.035,129,0.035,142,0.877,154,2.587,159,3.039,193,2.587,286,3.774,293,3.774,342,2.25,344,3.726,345,3.726,346,3.726,347,3.726,348,3.726,349,3.726,350,3.726,351,3.726,352,3.726]],["title/miscellaneous/variables.html",[342,1.463,353,2.829]],["body/miscellaneous/variables.html",[1,1.495,5,2.453,13,1.187,21,2.701,52,0.041,73,1.053,74,0.642,81,1.053,82,3.106,84,2.881,128,0.034,129,0.034,142,1.053,171,3.106,277,3.649,279,3.649,342,2.132,353,2.881,354,4.473,355,3.532]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":206,"title":{},"body":{"components/Slides.html":{},"coverage.html":{}}}],["0.0.0",{"_index":341,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":252,"title":{},"body":{"components/Slides.html":{}}}],["1/1",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["11/21",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":321,"title":{},"body":{"index.html":{}}}],["20.1.0",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["2em",{"_index":203,"title":{},"body":{"components/Slides.html":{}}}],["3em",{"_index":201,"title":{},"body":{"components/Slides.html":{}}}],["3rd",{"_index":327,"title":{},"body":{"index.html":{}}}],["4",{"_index":339,"title":{},"body":{"overview.html":{}}}],["4/9",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["5.1.0",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["6/10",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":340,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":204,"title":{},"body":{"components/Slides.html":{}}}],["actual_component",{"_index":127,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["alias",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":344,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":320,"title":{},"body":{"index.html":{}}}],["angular/platform",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["api.ts",{"_index":190,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["async",{"_index":265,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["attr",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["attribute",{"_index":85,"title":{},"body":{"components/Code.html":{}}}],["autoplay",{"_index":210,"title":{},"body":{"components/Slides.html":{}}}],["available",{"_index":62,"title":{},"body":{"components/Code.html":{}}}],["avoid",{"_index":256,"title":{},"body":{"components/Slides.html":{}}}],["back",{"_index":238,"title":{},"body":{"components/Slides.html":{}}}],["below",{"_index":48,"title":{},"body":{"components/Code.html":{}}}],["between",{"_index":250,"title":{},"body":{"components/Slides.html":{}}}],["bindings",{"_index":330,"title":{},"body":{"index.html":{}}}],["block",{"_index":198,"title":{},"body":{"components/Slides.html":{}}}],["booleanattribute",{"_index":231,"title":{},"body":{"components/Slides.html":{}}}],["both",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":208,"title":{},"body":{"components/Slides.html":{}}}],["case",{"_index":70,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["class",{"_index":130,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}},"body":{"coverage.html":{}}}],["classes",{"_index":132,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code'},{'name",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["codeharness",{"_index":131,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":324,"title":{},"body":{"index.html":{}}}],["community",{"_index":336,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":318,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}},"body":{"components/Code.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":115,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["componentharness",{"_index":149,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":87,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["const",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["constructor",{"_index":228,"title":{},"body":{"components/Slides.html":{}}}],["containing",{"_index":18,"title":{},"body":{"components/Code.html":{}}}],["content",{"_index":39,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"index.html":{}}}],["contentchildren(slide",{"_index":261,"title":{},"body":{"components/Slides.html":{}}}],["contentcontainercomponentharness",{"_index":139,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["coverage",{"_index":271,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":211,"title":{},"body":{"components/Slides.html":{}}}],["custom",{"_index":33,"title":{},"body":{"components/Code.html":{}}}],["cyclic",{"_index":212,"title":{},"body":{"components/Slides.html":{}}}],["dec",{"_index":220,"title":{},"body":{"components/Slides.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":213,"title":{},"body":{"components/Slides.html":{}}}],["dependencies",{"_index":299,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{}}}],["different",{"_index":41,"title":{},"body":{"components/Code.html":{}}}],["directive",{"_index":143,"title":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"coverage.html":{}}}],["directives",{"_index":54,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":14,"title":{},"body":{"components/Code.html":{}}}],["display",{"_index":8,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["displayed",{"_index":19,"title":{},"body":{"components/Code.html":{}}}],["documentation",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":258,"title":{},"body":{"components/Slides.html":{}}}],["el",{"_index":214,"title":{},"body":{"components/Slides.html":{}}}],["element",{"_index":243,"title":{},"body":{"components/Slides.html":{}}}],["empty",{"_index":45,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["emptystate",{"_index":57,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":147,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"coverage.html":{}}}],["enabled",{"_index":251,"title":{},"body":{"components/Slides.html":{}}}],["encapsulation",{"_index":194,"title":{},"body":{"components/Slides.html":{}}}],["error",{"_index":44,"title":{},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["error(error_both",{"_index":94,"title":{},"body":{"components/Code.html":{}}}],["error(error_none",{"_index":93,"title":{},"body":{"components/Code.html":{}}}],["error_both",{"_index":277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_none",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorstate",{"_index":56,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":151,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/ErrorStateHarness.html":{},"coverage.html":{}}}],["example",{"_index":47,"title":{},"body":{"components/Code.html":{}}}],["examples",{"_index":49,"title":{},"body":{"components/Code.html":{}}}],["exportas",{"_index":145,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["express",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":138,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["false",{"_index":186,"title":{},"body":{"components/Slide.html":{}}}],["fetch",{"_index":15,"title":{},"body":{"components/Code.html":{}}}],["fetching",{"_index":60,"title":{},"body":{"components/Code.html":{}}}],["file",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["first",{"_index":221,"title":{},"body":{"components/Slides.html":{}}}],["fullscreen",{"_index":244,"title":{},"body":{"components/Slides.html":{}}}],["function",{"_index":34,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":98,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":176,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":177,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getslideatindex",{"_index":266,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslideatindex(index",{"_index":269,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslidecount",{"_index":267,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getting",{"_index":309,"title":{"index.html":{}},"body":{}}],["harness",{"_index":135,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts",{"_index":134,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["height",{"_index":202,"title":{},"body":{"components/Slides.html":{}}}],["hide",{"_index":184,"title":{},"body":{"components/Slide.html":{}}}],["highlighter",{"_index":32,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["highlightercore",{"_index":37,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":11,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["holds",{"_index":253,"title":{},"body":{"components/Slides.html":{}}}],["host",{"_index":64,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["hostselector",{"_index":141,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["httpresource.text",{"_index":108,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":107,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":113,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["idx",{"_index":215,"title":{},"body":{"components/Slides.html":{}}}],["ignored",{"_index":86,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/Code.html":{}}}],["importing",{"_index":50,"title":{},"body":{"components/Code.html":{}}}],["inc",{"_index":222,"title":{},"body":{"components/Slides.html":{}}}],["increase",{"_index":254,"title":{},"body":{"components/Slides.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["inject(domsanitizer",{"_index":109,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(elementref",{"_index":242,"title":{},"body":{"components/Slides.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["input(\"github",{"_index":172,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":106,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":112,"title":{},"body":{"components/Code.html":{}}}],["input>(0",{"_index":246,"title":{},"body":{"components/Slides.html":{}}}],["input>(5000",{"_index":248,"title":{},"body":{"components/Slides.html":{}}}],["input>(false",{"_index":229,"title":{},"body":{"components/Slides.html":{}}}],["inputs",{"_index":17,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{}}}],["instance",{"_index":35,"title":{},"body":{"components/Code.html":{}}}],["interacting",{"_index":136,"title":{},"body":{"classes/CodeHarness.html":{}}}],["interval",{"_index":216,"title":{},"body":{"components/Slides.html":{}}}],["lang",{"_index":23,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":25,"title":{},"body":{"components/Code.html":{}}}],["last",{"_index":223,"title":{},"body":{"components/Slides.html":{}}}],["left",{"_index":207,"title":{},"body":{"components/Slides.html":{}}}],["libraries",{"_index":329,"title":{},"body":{"index.html":{}}}],["light",{"_index":173,"title":{},"body":{"components/Markdown.html":{}}}],["linkedsignal",{"_index":234,"title":{},"body":{"components/Slides.html":{}}}],["list",{"_index":262,"title":{},"body":{"components/Slides.html":{}}}],["loaded",{"_index":179,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["loading",{"_index":43,"title":{},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["loadingstate",{"_index":55,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":153,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":71,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["loop",{"_index":237,"title":{},"body":{"components/Slides.html":{}}}],["made",{"_index":335,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":169,"title":{},"body":{"components/Markdown.html":{}}}],["manipulations",{"_index":259,"title":{},"body":{"components/Slides.html":{}}}],["markdown",{"_index":118,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdown'},{'name",{"_index":119,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["markdownharness",{"_index":174,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":350,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["markedoptions",{"_index":352,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":129,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":63,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["methods",{"_index":160,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["micro",{"_index":313,"title":{},"body":{"index.html":{}}}],["milliseconds",{"_index":249,"title":{},"body":{"components/Slides.html":{}}}],["min",{"_index":199,"title":{},"body":{"components/Slides.html":{}}}],["miscellaneous",{"_index":342,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":181,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modules",{"_index":337,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":116,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["nested",{"_index":38,"title":{},"body":{"components/Code.html":{}}}],["new",{"_index":92,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["next",{"_index":224,"title":{},"body":{"components/Slides.html":{}}}],["ng)angular",{"_index":312,"title":{},"body":{"index.html":{}}}],["null",{"_index":348,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["number",{"_index":263,"title":{},"body":{"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["numberattribute",{"_index":247,"title":{},"body":{"components/Slides.html":{}}}],["ok",{"_index":126,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["okstate",{"_index":125,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["one",{"_index":240,"title":{},"body":{"components/Slides.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["options",{"_index":159,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":338,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":298,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":314,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":162,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["parse",{"_index":95,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(code",{"_index":103,"title":{},"body":{"components/Code.html":{}}}],["parse(text",{"_index":161,"title":{},"body":{"components/Markdown.html":{}}}],["parse(this.res.value",{"_index":105,"title":{},"body":{"components/Code.html":{}}}],["parser",{"_index":170,"title":{},"body":{"components/Markdown.html":{}}}],["parsing",{"_index":351,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["party",{"_index":328,"title":{},"body":{"index.html":{}}}],["performance",{"_index":255,"title":{},"body":{"components/Slides.html":{}}}],["position",{"_index":196,"title":{},"body":{"components/Slides.html":{}}}],["prev",{"_index":217,"title":{},"body":{"components/Slides.html":{}}}],["previous",{"_index":225,"title":{},"body":{"components/Slides.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["programming",{"_index":24,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":180,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["promise",{"_index":270,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["properties",{"_index":75,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"properties.html":{}}}],["protected",{"_index":77,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["provide",{"_index":83,"title":{},"body":{"components/Code.html":{}}}],["provided",{"_index":171,"title":{},"body":{"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":59,"title":{},"body":{"components/Code.html":{}}}],["reaching",{"_index":239,"title":{},"body":{"components/Slides.html":{}}}],["readonly",{"_index":76,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["reference",{"_index":236,"title":{},"body":{"components/Slides.html":{}}}],["relative",{"_index":197,"title":{},"body":{"components/Slides.html":{}}}],["remote",{"_index":16,"title":{},"body":{"components/Code.html":{}}}],["rendered",{"_index":164,"title":{},"body":{"components/Markdown.html":{}}}],["requests",{"_index":245,"title":{},"body":{"components/Slides.html":{}}}],["res",{"_index":79,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":158,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":155,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":157,"title":{},"body":{"components/Markdown.html":{}}}],["res.value",{"_index":156,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":72,"title":{},"body":{"components/Code.html":{}}}],["results",{"_index":128,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":102,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":163,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["right",{"_index":209,"title":{},"body":{"components/Slides.html":{}}}],["sanitize",{"_index":80,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":46,"title":{},"body":{"components/Code.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["server",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":84,"title":{},"body":{"components/Code.html":{},"miscellaneous/variables.html":{}}}],["shiki",{"_index":29,"title":{},"body":{"components/Code.html":{}}}],["shiki's",{"_index":36,"title":{},"body":{"components/Code.html":{}}}],["shouldplay",{"_index":218,"title":{},"body":{"components/Slides.html":{}}}],["show",{"_index":185,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["simple",{"_index":316,"title":{},"body":{"index.html":{}}}],["slide",{"_index":120,"title":{"components/Slide.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"coverage.html":{}}}],["slide'},{'name",{"_index":121,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["slideharness",{"_index":188,"title":{"classes/SlideHarness.html":{}},"body":{"classes/SlideHarness.html":{},"coverage.html":{}}}],["slides",{"_index":122,"title":{"components/Slides.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"index.html":{}}}],["slidesharness",{"_index":264,"title":{"classes/SlidesHarness.html":{}},"body":{"classes/SlidesHarness.html":{},"coverage.html":{}}}],["slideshow",{"_index":233,"title":{},"body":{"components/Slides.html":{}}}],["smart",{"_index":317,"title":{},"body":{"index.html":{}}}],["source",{"_index":9,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["src",{"_index":21,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":310,"title":{"index.html":{}},"body":{}}],["state",{"_index":69,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{}}}],["state,[xpr",{"_index":123,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["state]'},{'name",{"_index":124,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["statements",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["static",{"_index":140,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["string",{"_index":13,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":192,"title":{},"body":{"components/Slides.html":{}}}],["supported",{"_index":28,"title":{},"body":{"components/Code.html":{}}}],["supports",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":68,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":10,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["t",{"_index":347,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":12,"title":{},"body":{"components/Code.html":{}}}],["template",{"_index":67,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["tests",{"_index":137,"title":{},"body":{"classes/CodeHarness.html":{}}}],["text",{"_index":96,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":30,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.autoplay",{"_index":260,"title":{},"body":{"components/Slides.html":{}}}],["this.code",{"_index":89,"title":{},"body":{"components/Code.html":{}}}],["this.content",{"_index":165,"title":{},"body":{"components/Markdown.html":{}}}],["this.idx",{"_index":235,"title":{},"body":{"components/Slides.html":{}}}],["this.interval",{"_index":241,"title":{},"body":{"components/Slides.html":{}}}],["this.lang",{"_index":99,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforall(slideharness",{"_index":268,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["this.locatorforoptional",{"_index":191,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":178,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["this.parse(this.content",{"_index":166,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":167,"title":{},"body":{"components/Markdown.html":{}}}],["this.res.hasvalue",{"_index":104,"title":{},"body":{"components/Code.html":{}}}],["this.res.status",{"_index":111,"title":{},"body":{"components/Code.html":{}}}],["this.res.value",{"_index":168,"title":{},"body":{"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":97,"title":{},"body":{"components/Code.html":{}}}],["this.src",{"_index":90,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.theme",{"_index":100,"title":{},"body":{"components/Code.html":{}}}],["throw",{"_index":91,"title":{},"body":{"components/Code.html":{}}}],["timer",{"_index":219,"title":{},"body":{"components/Slides.html":{}}}],["toggleautoplay",{"_index":226,"title":{},"body":{"components/Slides.html":{}}}],["togglefullscreen",{"_index":227,"title":{},"body":{"components/Slides.html":{}}}],["top",{"_index":205,"title":{},"body":{"components/Slides.html":{}}}],["tostring",{"_index":101,"title":{},"body":{"components/Code.html":{}}}],["transform",{"_index":230,"title":{},"body":{"components/Slides.html":{}}}],["tslib",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":142,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":343,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unable",{"_index":20,"title":{},"body":{"components/Code.html":{}}}],["undefined",{"_index":349,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unnecessary",{"_index":257,"title":{},"body":{"components/Slides.html":{}}}],["url",{"_index":22,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["use",{"_index":31,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["used",{"_index":7,"title":{},"body":{"components/Code.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["valid",{"_index":26,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":81,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":114,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["variable",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":353,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":326,"title":{},"body":{"index.html":{}}}],["version",{"_index":322,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":315,"title":{},"body":{"index.html":{}}}],["viewencapsulation.none",{"_index":195,"title":{},"body":{"components/Slides.html":{}}}],["viewer",{"_index":334,"title":{},"body":{"index.html":{}}}],["void",{"_index":187,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["whether",{"_index":232,"title":{},"body":{"components/Slides.html":{}}}],["width",{"_index":200,"title":{},"body":{"components/Slides.html":{}}}],["xpr",{"_index":66,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["xpr)experimental",{"_index":311,"title":{},"body":{"index.html":{}}}],["xpremptystate",{"_index":146,"title":{},"body":{"directives/EmptyState.html":{}}}],["xprerrorstate",{"_index":150,"title":{},"body":{"directives/ErrorState.html":{}}}],["xprloadingstate",{"_index":152,"title":{},"body":{"directives/LoadingState.html":{}}}],["xprng/.../code.ts",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xprng/.../markdown.ts",{"_index":346,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/.../slides.ts",{"_index":345,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code",{"_index":332,"title":{},"body":{"index.html":{}}}],["xprng/code\";importing",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts",{"_index":5,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["xprng/code/testing/code",{"_index":133,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":323,"title":{},"body":{"index.html":{}}}],["xprng/common\";directly",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["xprng/common/src/states.ts",{"_index":144,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":148,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/markdown",{"_index":331,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":154,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/testing/markdown",{"_index":175,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/slides",{"_index":333,"title":{},"body":{"index.html":{}}}],["xprng/slides/src/slide.ts",{"_index":183,"title":{},"body":{"components/Slide.html":{},"coverage.html":{}}}],["xprng/slides/src/slides.ts",{"_index":193,"title":{},"body":{"components/Slides.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/slides/testing/public",{"_index":189,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["xprng/vendor",{"_index":325,"title":{},"body":{"index.html":{}}}],["xprokstate",{"_index":182,"title":{},"body":{"directives/OkState.html":{}}}],["zoneless",{"_index":319,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n    \n        Description\n    \n    \n        Code\nThis component is used to display source code with syntax highlighting.\nIt can either take a string of code directly or fetch it from a remote source.\nInputs\n\ncode: A string containing the source code to be displayed. Unable to be used with src.\nsrc: A URL from which to fetch the source code. Unable to be used with code.\nlang: The programming language of the source code. This should be a valid language identifier supported by Shiki.\ntheme: The theme to use for syntax highlighting. This can be any theme supported by Shiki.\nhighlighter: A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\nNested Content\nThe component supports nested content for different states, loading, error, and empty states.\nSee the example below for how to use these states.\nExamples\nImporting the component\nExample :import { Code } from \"@xprng/code\";Importing states directives\nExample :import { LoadingState, ErrorState, EmptyState } from \"@xprng/common\";Directly providing code content\nExample :Fetching code from a remote source\nExample :Using nested content for different states\nExample :\n  Loading...\n  Error loading code.\n  No code available.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @switch (state()) {\n  @case (\"local\") {\n    \n  }\n  @case (\"error\") {\n    \n  }\n  @case (\"loading\") {\n    \n  }\n  @case (\"resolved\") {\n    \n  }\n  @default {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Private\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Protected\n                                state\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Source code content as a string\nThis can be used to directly provide source code content.\nIf this is set, the src attribute will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const code = this.code() as string;\n    const src = this.src() as string;\n\n    if (!code && !src) {\n      throw new Error(ERROR_NONE);\n    }\n    if (code && src) {\n      throw new Error(ERROR_BOTH);\n    }\n\n    const parse = (text: string) =>\n      this.sanitize.bypassSecurityTrustHtml(\n        getHighlighter().codeToHtml(text, {\n          lang: this.lang(),\n          theme: this.theme(),\n        }).toString(),\n      );\n\n    if (code) return parse(code as string);\n\n    if (this.res.hasValue()) {\n      return parse(this.res.value());\n    }\n\n    return parse(\"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n\n            \n                \n                    The programming language of the source code.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the source code content.\nThis is optional and can be used to fetch source code content from a URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.code()) return \"local\";\n    if (this.src()) return this.res.status();\n    return \"empty\";\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch (state()) {  @case (\"local\") {      }  @case (\"error\") {      }  @case (\"loading\") {      }  @case (\"resolved\") {      }  @default {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n            \n                Description\n            \n            \n                Harness for interacting with Code components in tests.\n\n            \n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-code\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (content()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Protected\n                                markdown\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The markdown content to be rendered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        markdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.content()\n      ? this.parse(this.content()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the markdown content.\nIf content is provided, this will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (content()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n\n            \n                \n                    The content projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n\n            \n                \n                    The content projected in case of \"content\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slide.html":{"url":"components/Slide.html","title":"component - Slide","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slide\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slide.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                xpr-slide\n            \n\n\n\n\n\n            \n                template\n                @if (display()) {\n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (display()) {  }'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slide'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlideHarness.html":{"url":"classes/SlideHarness.html","title":"class - SlideHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlideHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slide\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slides.html":{"url":"components/Slides.html","title":"component - Slides","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slides\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slides.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-slides\n            \n\n\n\n\n            \n                styles\n                \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                autoplay\n                            \n                            \n                                    Private\n                                    Readonly\n                                current\n                            \n                            \n                                    Readonly\n                                cyclic\n                            \n                            \n                                    Private\n                                    Readonly\n                                delay\n                            \n                            \n                                    Private\n                                    Readonly\n                                el\n                            \n                            \n                                    Readonly\n                                idx\n                            \n                            \n                                    Readonly\n                                interval\n                            \n                            \n                                    Private\n                                prev\n                            \n                            \n                                    Private\n                                    Readonly\n                                shouldPlay\n                            \n                            \n                                    Private\n                                    Readonly\n                                slides\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dec\n                            \n                            \n                                    Protected\n                                first\n                            \n                            \n                                    Protected\n                                inc\n                            \n                            \n                                    Protected\n                                last\n                            \n                            \n                                    Protected\n                                next\n                            \n                            \n                                    Protected\n                                previous\n                            \n                            \n                                    Protected\n                                toggleAutoPlay\n                            \n                            \n                                    Protected\n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dec\n                        \n                    \n                \n            \n            \n                \n                        \n                    dec()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        first\n                        \n                    \n                \n            \n            \n                \n                        \n                    first()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        inc\n                        \n                    \n                \n            \n            \n                \n                        \n                    inc()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        last\n                        \n                    \n                \n            \n            \n                \n                        \n                    last()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleAutoPlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleAutoPlay()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleFullScreen\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFullScreen()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        autoplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n            \n                \n                    Whether the slideshow should autoplay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.idx())\n                    \n                \n\n            \n                \n                    Current slide index reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        cyclic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n            \n                \n                    Whether the slideshow should loop back to the first slide after reaching the last one.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.interval())\n                    \n                \n\n            \n                \n                    Interval reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n\n            \n                \n                    Reference to the host element for fullscreen requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        idx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(0, { transform: numberAttribute })\n                    \n                \n\n            \n                \n                    The index of the slide to show.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(5000, {\n    transform: numberAttribute,\n  })\n                    \n                \n\n            \n                \n                    The interval in milliseconds between slides when autoplay is enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prev\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n\n            \n                \n                    holds the previous slide index to increase performance\nand avoid unnecessary DOM manipulations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        shouldPlay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.autoplay())\n                    \n                \n\n            \n                \n                    Autoplay reference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : contentChildren(Slide)\n                    \n                \n\n            \n                \n                    Slides list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n            \n                \n                    autoplay timer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n    \n            \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slides'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlidesHarness.html":{"url":"classes/SlidesHarness.html","title":"class - SlidesHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlidesHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                            \n                                    Readonly\n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSlideAtIndex\n                            \n                            \n                                    Async\n                                getSlideCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slides\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForAll(SlideHarness)\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideAtIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideAtIndex(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideCount()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_BOTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_NONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                xprng/slides/src/slide.ts\n            \n            component\n            Slide\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                xprng/slides/src/slides.ts\n            \n            component\n            Slides\n            \n                52 %\n                (11/21)\n            \n        \n        \n            \n                \n                        xprng/slides/src/slides.ts\n            \n            type alias\n            Attr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlideHarness\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlidesHarness\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/platform-server : ^20.1.0\n        \n            @angular/ssr : ^20.1.5\n        \n            express : ^5.1.0\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XPR)Experimental (NG)Angular Components\nMicro packages of very simple, yet, smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nPackage\nComponent\nVersion\nContent\n\n\n\n\n@xprng/common\nCommon\n\nState directives\n\n\n@xprng/vendor\nVendor\n\n3rd party libraries bindings\n\n\n@xprng/markdown\nMarkdown\n\nMarkdown component\n\n\n@xprng/code\nCode\n\nCode highlighter component\n\n\n@xprng/slides\nSlides\n\nSlides viewer component\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Attr   (xprng/.../slides.ts)\n                        \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/slides/src/slides.ts\n    \n    \n        \n            \n                \n                    \n                    Attr\n                \n            \n            \n                \n                        T | string | null | undefined\n\n                \n            \n        \n    \n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ERROR_BOTH   (xprng/.../code.ts)\n                        \n                        \n                            ERROR_NONE   (xprng/.../code.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/code/src/code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_BOTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input should be provided, not both.\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input must be provided. Neither is set.\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
