var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,1.212,1,0.965]],["body/components/Code.html",[0,0.927,1,1.715,2,0.703,3,0.153,4,0.131,5,0.674,6,0.792,7,2.966,8,0.674,9,3.455,10,1.534,11,1.802,12,0.971,13,0.922,14,1.675,15,2.209,16,1.675,17,0.792,18,0.971,19,0.971,20,1.675,21,2.218,22,1.802,23,2.629,24,1.675,25,2.629,26,1.675,27,1.367,28,2.629,29,2.144,30,2.997,31,1.802,32,2.42,33,1.675,34,1.675,35,1.675,36,1.675,37,1.675,38,2.209,39,1.88,40,0.971,41,1.675,42,2.966,43,1.638,44,1.528,45,1.238,46,2.209,47,3.244,48,0.971,49,0.971,50,0.971,51,1.675,52,0.043,53,0.971,54,0.499,55,0.703,56,0.703,57,0.703,58,0.971,59,0.971,60,0.971,61,0.971,62,0.971,63,0.364,64,0.674,65,1.439,66,0.606,67,0.586,68,1.675,69,0.698,70,2.997,71,1.802,72,1.675,73,0.97,74,0.176,75,0.348,76,2.087,77,1.825,78,1.825,79,1.367,80,1.367,81,0.904,82,1.534,83,0.971,84,0.792,85,0.971,86,0.792,87,1.367,88,2.209,89,1.675,90,1.802,91,1.675,92,1.367,93,0.971,94,0.971,95,1.367,96,0.792,97,0.971,98,0.971,99,0.971,100,0.971,101,0.971,102,2.646,103,0.971,104,0.971,105,0.971,106,0.971,107,0.971,108,0.792,109,0.792,110,0.674,111,0.971,112,0.971,113,0.971,114,1.587,115,0.586,116,1.174,117,0.586,118,0.325,119,0.586,120,0.407,121,0.586,122,0.627,123,0.984,124,1.334,125,0.407,126,0.89,127,0.586,128,0.013,129,0.013]],["title/classes/CodeHarness.html",[130,1.081,131,2.006]],["body/classes/CodeHarness.html",[1,1.512,2,1.508,3,0.567,4,0.486,6,2.932,13,0.954,52,0.039,66,0.567,73,0.846,74,0.653,75,0.939,81,0.846,128,0.034,129,0.034,131,2.496,132,1.345,133,2.932,134,1.693,135,3.594,136,3.594,137,3.594,138,1.508,139,2.17,140,1.897,141,1.897,142,0.846]],["title/directives/EmptyState.html",[57,1.212,143,1.535]],["body/directives/EmptyState.html",[3,0.63,4,0.54,45,2.274,52,0.037,54,1.191,57,1.676,63,1.495,65,1.495,66,0.63,69,0.94,123,1.495,128,0.037,129,0.037,144,2.123,145,2.412,146,3.995]],["title/classes/EmptyStateHarness.html",[130,1.081,147,2.006]],["body/classes/EmptyStateHarness.html",[3,0.586,4,0.502,13,0.987,45,1.752,52,0.04,66,0.586,69,0.875,73,0.875,74,0.676,75,0.959,81,0.875,128,0.035,129,0.035,132,1.392,134,1.752,138,1.56,140,1.938,141,1.938,142,0.875,147,2.582,148,2.245,149,2.582]],["title/directives/ErrorState.html",[56,1.212,143,1.535]],["body/directives/ErrorState.html",[3,0.63,4,0.54,44,2.274,52,0.037,54,1.191,56,1.676,63,1.495,65,1.495,66,0.63,69,0.94,123,1.495,128,0.037,129,0.037,144,2.123,145,2.412,150,3.995]],["title/classes/ErrorStateHarness.html",[130,1.081,151,2.006]],["body/classes/ErrorStateHarness.html",[3,0.586,4,0.502,13,0.987,44,1.752,52,0.04,66,0.586,69,0.875,73,0.875,74,0.676,75,0.959,81,0.875,128,0.035,129,0.035,132,1.392,134,1.752,138,1.56,140,1.938,141,1.938,142,0.875,148,2.245,149,2.582,151,2.582]],["title/directives/LoadingState.html",[55,1.212,143,1.535]],["body/directives/LoadingState.html",[3,0.63,4,0.54,43,2.274,52,0.037,54,1.191,55,1.676,63,1.495,65,1.495,66,0.63,69,0.94,123,1.495,128,0.037,129,0.037,144,2.123,145,2.412,152,3.995]],["title/classes/LoadingStateHarness.html",[130,1.081,153,2.006]],["body/classes/LoadingStateHarness.html",[3,0.586,4,0.502,13,0.987,43,1.752,52,0.04,66,0.586,69,0.875,73,0.875,74,0.676,75,0.959,81,0.875,128,0.035,129,0.035,132,1.392,134,1.752,138,1.56,140,1.938,141,1.938,142,0.875,148,2.245,149,2.582,153,2.582]],["title/components/Markdown.html",[0,1.212,118,0.965]],["body/components/Markdown.html",[1,0.511,2,1.026,3,0.241,4,0.207,9,1.247,10,1.062,11,1.247,13,0.649,21,2.108,22,1.247,30,2.492,31,1.247,39,1.645,43,1.152,44,1.152,45,1.152,52,0.044,54,0.456,55,0.641,56,0.641,57,0.641,63,0.572,64,1.062,65,1.714,66,0.722,67,0.923,69,0.36,73,1.006,74,0.278,75,0.507,76,2.301,77,2.424,78,2.424,79,1.994,80,1.994,81,1.006,82,2.121,86,1.247,87,1.247,90,1.247,95,1.994,96,1.247,102,1.247,108,1.247,109,1.247,110,1.062,114,2.108,115,0.923,116,1.855,117,0.923,118,1.361,119,0.923,120,0.641,121,0.923,122,0.915,123,1.307,124,1.845,125,0.641,126,1.299,127,0.923,128,0.019,129,0.019,142,0.36,154,1.062,155,1.529,156,1.529,157,3.114,158,2.445,159,2.445,160,2.445,161,2.445,162,2.492,163,1.476,164,1.994,165,3.055,166,1.476,167,1.529,168,1.247,169,1.529,170,1.529,171,1.529,172,1.529,173,1.529,174,1.529,175,1.529,176,1.062,177,1.529,178,1.529]],["title/classes/MarkdownHarness.html",[130,1.081,179,2.006]],["body/classes/MarkdownHarness.html",[3,0.5,4,0.428,13,0.841,21,1.914,39,1.966,52,0.04,66,0.5,70,3.403,71,2.586,73,1.097,74,0.576,75,0.866,81,1.097,118,1.06,128,0.032,129,0.032,132,1.187,134,1.493,138,1.33,139,1.914,140,1.75,141,1.75,142,0.746,157,2.586,176,2.897,179,2.201,180,2.586,181,4.172,182,4.172,183,4.172,184,3.17,185,4.172,186,4.172]],["title/directives/OkState.html",[125,1.212,143,1.535]],["body/directives/OkState.html",[3,0.63,4,0.54,52,0.037,54,1.191,63,1.495,65,1.495,66,0.63,69,0.94,123,1.495,125,1.676,126,2.565,128,0.037,129,0.037,144,2.123,145,2.412,187,3.995]],["title/components/Slide.html",[0,1.212,120,1.212]],["body/components/Slide.html",[1,0.783,2,1.42,3,0.369,4,0.316,8,3.342,17,2.76,43,1.594,44,1.594,45,1.594,52,0.042,54,0.698,55,0.982,56,0.982,57,0.982,63,0.877,65,1.938,66,0.816,67,1.414,69,0.551,73,0.796,74,0.426,75,0.702,76,1.594,81,0.796,114,2.628,115,1.414,116,2.112,117,1.414,118,0.783,119,1.414,120,1.826,121,1.414,122,1.267,123,1.63,124,2.399,125,0.982,126,1.798,127,1.414,128,0.026,129,0.026,163,2.043,166,2.043,188,1.91,189,3.974,190,3.974,191,3.384,192,2.76]],["title/classes/SlideHarness.html",[130,1.081,193,2.006]],["body/classes/SlideHarness.html",[3,0.559,4,0.479,13,0.941,39,2.113,52,0.04,66,0.559,73,1.055,74,0.645,75,0.931,76,2.113,81,1.055,120,1.488,128,0.034,129,0.034,132,1.328,138,1.488,139,2.141,140,1.882,141,1.882,142,0.834,193,2.463,194,2.463,195,2.463,196,2.893]],["title/components/Slides.html",[0,1.212,122,1.081]],["body/components/Slides.html",[1,0.378,2,0.8,3,0.178,4,0.153,8,2.018,43,0.898,44,0.898,45,0.898,52,0.043,54,0.337,55,0.474,56,0.474,57,0.474,63,0.423,64,0.785,65,1.534,66,0.732,67,0.682,69,0.266,73,1.072,74,0.205,75,0.396,76,2.395,77,3.472,78,3.223,81,1.072,114,1.754,115,0.682,116,1.315,117,0.682,118,0.378,119,0.682,120,1.038,121,0.682,122,1.586,123,1.088,124,1.494,125,0.474,126,1.013,127,0.682,128,0.014,129,0.014,142,0.266,163,1.151,166,2.377,192,3.211,197,1.907,198,0.785,199,1.13,200,1.13,201,2.906,202,1.907,203,2.906,204,2.906,205,1.907,206,1.907,207,1.907,208,1.907,209,1.907,210,1.907,211,3.343,212,1.907,213,1.907,214,1.907,215,1.907,216,1.907,217,1.907,218,1.907,219,1.907,220,1.907,221,1.907,222,2.474,223,1.907,224,1.907,225,1.907,226,1.907,227,2.474,228,2.474,229,2.474,230,2.474,231,2.474,232,2.474,233,2.474,234,2.474,235,1.907,236,1.907,237,2.906,238,1.907,239,2.474,240,1.13,241,1.13,242,1.13,243,1.13,244,1.907,245,1.13,246,1.907,247,1.13,248,1.13,249,1.13,250,0.922]],["title/classes/SlidesHarness.html",[130,1.081,251,2.006]],["body/classes/SlidesHarness.html",[3,0.457,4,0.391,13,0.769,39,1.851,52,0.041,66,0.457,73,1.049,74,0.714,75,0.815,76,2.251,81,1.049,110,2.011,116,1.539,122,1.669,128,0.03,129,0.03,132,1.084,138,1.215,139,1.749,140,1.648,141,1.648,142,0.924,163,2.372,164,3.898,166,2.372,168,2.363,194,2.011,195,2.011,196,2.363,250,3.204,251,2.011,252,3.928,253,4.457,254,2.897,255,2.897,256,3.928]],["title/coverage.html",[257,3.198]],["body/coverage.html",[0,1.745,1,0.711,4,0.288,5,2.611,27,1.736,52,0.043,55,0.893,56,0.893,57,0.893,92,1.736,118,0.711,120,0.893,122,0.797,125,0.893,128,0.024,129,0.024,130,1.803,131,1.478,133,1.736,134,2.093,142,0.885,143,2.21,144,2.21,147,1.478,148,2.27,151,1.478,153,1.478,154,2.191,179,1.478,180,1.736,188,1.736,193,1.478,194,2.191,195,2.191,198,2.191,211,4.391,251,1.478,257,1.736,258,1.736,259,2.128,260,2.128,261,2.128,262,3.155,263,1.736,264,4.816,265,1.736,266,3.155,267,2.128,268,3.761,269,2.128,270,2.128,271,3.155,272,1.736,273,2.128,274,2.128,275,2.128,276,2.128,277,2.128,278,1.736,279,2.128,280,2.128,281,2.128,282,2.128]],["title/dependencies.html",[283,1.682,284,2.829]],["body/dependencies.html",[52,0.041,128,0.038,129,0.038,284,3.52,285,4.315,286,4.315]],["title/index.html",[74,0.44,287,2.423,288,2.423]],["body/index.html",[0,1.939,1,1.545,2,1.73,10,2.163,29,2.541,32,3.364,39,1.468,52,0.035,54,0.929,69,0.733,118,1.545,122,1.166,128,0.031,129,0.031,258,4.291,283,2.163,289,3.115,290,3.115,291,3.115,292,3.115,293,3.115,294,3.115,295,3.115,296,3.115,297,3.115,298,4.124,299,3.115,300,2.541,301,4.124,302,3.115,303,4.124,304,3.115,305,3.115,306,3.115,307,3.115,308,3.115,309,3.115,310,3.115]],["title/modules.html",[311,3.198]],["body/modules.html",[52,0.039,128,0.039,129,0.039,311,3.607]],["title/overview.html",[312,3.198]],["body/overview.html",[2,1.768,52,0.038,54,1.256,128,0.038,129,0.038,132,1.578,312,3.437,313,4.984,314,4.214]],["title/properties.html",[75,0.72,283,1.682]],["body/properties.html",[52,0.041,75,0.896,128,0.038,129,0.038,300,3.52,315,4.315]],["title/miscellaneous/typealiases.html",[316,1.463,317,3.468]],["body/miscellaneous/typealiases.html",[13,0.987,52,0.041,74,0.676,118,1.243,128,0.035,129,0.035,142,0.875,154,2.582,162,3.033,198,2.582,272,3.769,278,3.769,316,2.245,318,3.718,319,3.718,320,3.718,321,3.718,322,3.718,323,3.718,324,3.718,325,3.718,326,3.718]],["title/miscellaneous/variables.html",[316,1.463,327,2.829]],["body/miscellaneous/variables.html",[1,1.493,5,2.447,13,1.185,21,2.697,52,0.041,73,1.051,74,0.64,81,1.051,82,3.102,84,2.874,128,0.034,129,0.034,142,1.051,176,3.102,263,3.644,265,3.644,316,2.127,327,2.874,328,4.467,329,3.523]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":211,"title":{},"body":{"components/Slides.html":{},"coverage.html":{}}}],["0.0.0",{"_index":315,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":247,"title":{},"body":{"components/Slides.html":{}}}],["1/1",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":299,"title":{},"body":{"index.html":{}}}],["2em",{"_index":208,"title":{},"body":{"components/Slides.html":{}}}],["3em",{"_index":206,"title":{},"body":{"components/Slides.html":{}}}],["4",{"_index":313,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["6/10",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":314,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":209,"title":{},"body":{"components/Slides.html":{}}}],["actual_component",{"_index":127,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["alias",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":318,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":298,"title":{},"body":{"index.html":{}}}],["api.ts",{"_index":195,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["async",{"_index":164,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["attr",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["attribute",{"_index":85,"title":{},"body":{"components/Code.html":{}}}],["autoplay",{"_index":215,"title":{},"body":{"components/Slides.html":{}}}],["available",{"_index":62,"title":{},"body":{"components/Code.html":{}}}],["below",{"_index":48,"title":{},"body":{"components/Code.html":{}}}],["block",{"_index":203,"title":{},"body":{"components/Slides.html":{}}}],["booleanattribute",{"_index":238,"title":{},"body":{"components/Slides.html":{}}}],["both",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":213,"title":{},"body":{"components/Slides.html":{}}}],["case",{"_index":70,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["class",{"_index":130,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}},"body":{"coverage.html":{}}}],["classes",{"_index":132,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code'},{'name",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["codeharness",{"_index":131,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":301,"title":{},"body":{"index.html":{}}}],["community",{"_index":310,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":296,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}},"body":{"components/Code.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":115,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["componentharness",{"_index":149,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":87,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["const",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["constructor",{"_index":235,"title":{},"body":{"components/Slides.html":{}}}],["containing",{"_index":18,"title":{},"body":{"components/Code.html":{}}}],["content",{"_index":39,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"index.html":{}}}],["contentchildren(slide",{"_index":249,"title":{},"body":{"components/Slides.html":{}}}],["contentcontainercomponentharness",{"_index":139,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["coverage",{"_index":257,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":216,"title":{},"body":{"components/Slides.html":{}}}],["custom",{"_index":33,"title":{},"body":{"components/Code.html":{}}}],["cyclic",{"_index":217,"title":{},"body":{"components/Slides.html":{}}}],["dec",{"_index":227,"title":{},"body":{"components/Slides.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":218,"title":{},"body":{"components/Slides.html":{}}}],["dependencies",{"_index":284,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{}}}],["different",{"_index":41,"title":{},"body":{"components/Code.html":{}}}],["directive",{"_index":143,"title":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"coverage.html":{}}}],["directives",{"_index":54,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":14,"title":{},"body":{"components/Code.html":{}}}],["display",{"_index":8,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["displayed",{"_index":19,"title":{},"body":{"components/Code.html":{}}}],["documentation",{"_index":258,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["el",{"_index":219,"title":{},"body":{"components/Slides.html":{}}}],["empty",{"_index":45,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["emptystate",{"_index":57,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":147,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"coverage.html":{}}}],["encapsulation",{"_index":199,"title":{},"body":{"components/Slides.html":{}}}],["error",{"_index":44,"title":{},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["error(error_both",{"_index":94,"title":{},"body":{"components/Code.html":{}}}],["error(error_none",{"_index":93,"title":{},"body":{"components/Code.html":{}}}],["error_both",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_none",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorstate",{"_index":56,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":151,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/ErrorStateHarness.html":{},"coverage.html":{}}}],["example",{"_index":47,"title":{},"body":{"components/Code.html":{}}}],["examples",{"_index":49,"title":{},"body":{"components/Code.html":{}}}],["exportas",{"_index":145,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["extends",{"_index":138,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["false",{"_index":191,"title":{},"body":{"components/Slide.html":{}}}],["fetch",{"_index":15,"title":{},"body":{"components/Code.html":{}}}],["fetching",{"_index":60,"title":{},"body":{"components/Code.html":{}}}],["file",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["first",{"_index":228,"title":{},"body":{"components/Slides.html":{}}}],["function",{"_index":34,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":98,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":181,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":182,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getslideatindex",{"_index":252,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslideatindex(index",{"_index":255,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslidecount",{"_index":253,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getting",{"_index":287,"title":{"index.html":{}},"body":{}}],["harness",{"_index":135,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts",{"_index":134,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["height",{"_index":207,"title":{},"body":{"components/Slides.html":{}}}],["hide",{"_index":189,"title":{},"body":{"components/Slide.html":{}}}],["highlighter",{"_index":32,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["highlightercore",{"_index":37,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":11,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["host",{"_index":64,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["hostselector",{"_index":141,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["httpresource.text",{"_index":108,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":107,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":113,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["idx",{"_index":220,"title":{},"body":{"components/Slides.html":{}}}],["ignored",{"_index":86,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["implements",{"_index":155,"title":{},"body":{"components/Markdown.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/Code.html":{}}}],["importing",{"_index":50,"title":{},"body":{"components/Code.html":{}}}],["inc",{"_index":229,"title":{},"body":{"components/Slides.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["inject(domsanitizer",{"_index":109,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(elementref",{"_index":242,"title":{},"body":{"components/Slides.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["input(\"github",{"_index":177,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":106,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":112,"title":{},"body":{"components/Code.html":{}}}],["input>(0",{"_index":243,"title":{},"body":{"components/Slides.html":{}}}],["input>(5000",{"_index":245,"title":{},"body":{"components/Slides.html":{}}}],["input>(false",{"_index":236,"title":{},"body":{"components/Slides.html":{}}}],["inputs",{"_index":17,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{}}}],["instance",{"_index":35,"title":{},"body":{"components/Code.html":{}}}],["interacting",{"_index":136,"title":{},"body":{"classes/CodeHarness.html":{}}}],["interval",{"_index":221,"title":{},"body":{"components/Slides.html":{}}}],["lang",{"_index":23,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":25,"title":{},"body":{"components/Code.html":{}}}],["last",{"_index":230,"title":{},"body":{"components/Slides.html":{}}}],["left",{"_index":212,"title":{},"body":{"components/Slides.html":{}}}],["light",{"_index":178,"title":{},"body":{"components/Markdown.html":{}}}],["linkedsignal",{"_index":239,"title":{},"body":{"components/Slides.html":{}}}],["loaded",{"_index":184,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["loading",{"_index":43,"title":{},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["loadingstate",{"_index":55,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":153,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":71,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["made",{"_index":309,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":174,"title":{},"body":{"components/Markdown.html":{}}}],["markdown",{"_index":118,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdown'},{'name",{"_index":119,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["markdownharness",{"_index":179,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":272,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":324,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["markedoptions",{"_index":326,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":129,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":157,"title":{},"body":{"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["metadata",{"_index":63,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["methods",{"_index":163,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["micro",{"_index":291,"title":{},"body":{"index.html":{}}}],["min",{"_index":204,"title":{},"body":{"components/Slides.html":{}}}],["miscellaneous",{"_index":316,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":186,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modules",{"_index":311,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":116,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["nested",{"_index":38,"title":{},"body":{"components/Code.html":{}}}],["new",{"_index":92,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["next",{"_index":231,"title":{},"body":{"components/Slides.html":{}}}],["ng)angular",{"_index":290,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":165,"title":{},"body":{"components/Markdown.html":{}}}],["notification",{"_index":222,"title":{},"body":{"components/Slides.html":{}}}],["notificationclass",{"_index":223,"title":{},"body":{"components/Slides.html":{}}}],["null",{"_index":322,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["number",{"_index":250,"title":{},"body":{"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["numberattribute",{"_index":244,"title":{},"body":{"components/Slides.html":{}}}],["ok",{"_index":126,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["okstate",{"_index":125,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["oninit",{"_index":156,"title":{},"body":{"components/Markdown.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["options",{"_index":162,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":312,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":283,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":292,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":168,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["parse",{"_index":95,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(code",{"_index":103,"title":{},"body":{"components/Code.html":{}}}],["parse(text",{"_index":167,"title":{},"body":{"components/Markdown.html":{}}}],["parse(this.res.value",{"_index":105,"title":{},"body":{"components/Code.html":{}}}],["parser",{"_index":175,"title":{},"body":{"components/Markdown.html":{}}}],["parsing",{"_index":325,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["position",{"_index":201,"title":{},"body":{"components/Slides.html":{}}}],["prev",{"_index":224,"title":{},"body":{"components/Slides.html":{}}}],["previous",{"_index":232,"title":{},"body":{"components/Slides.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["programming",{"_index":24,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":185,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["promise",{"_index":256,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["properties",{"_index":75,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"properties.html":{}}}],["protected",{"_index":77,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["provide",{"_index":83,"title":{},"body":{"components/Code.html":{}}}],["provided",{"_index":176,"title":{},"body":{"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":59,"title":{},"body":{"components/Code.html":{}}}],["readonly",{"_index":76,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["registry",{"_index":308,"title":{},"body":{"index.html":{}}}],["relative",{"_index":202,"title":{},"body":{"components/Slides.html":{}}}],["remote",{"_index":16,"title":{},"body":{"components/Code.html":{}}}],["rendered",{"_index":173,"title":{},"body":{"components/Markdown.html":{}}}],["res",{"_index":79,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":161,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":158,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":160,"title":{},"body":{"components/Markdown.html":{}}}],["res.value",{"_index":159,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":72,"title":{},"body":{"components/Code.html":{}}}],["results",{"_index":128,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":102,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":166,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["right",{"_index":214,"title":{},"body":{"components/Slides.html":{}}}],["sanitize",{"_index":80,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":46,"title":{},"body":{"components/Code.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["set",{"_index":84,"title":{},"body":{"components/Code.html":{},"miscellaneous/variables.html":{}}}],["shiki",{"_index":29,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["shiki's",{"_index":36,"title":{},"body":{"components/Code.html":{}}}],["shouldplay",{"_index":225,"title":{},"body":{"components/Slides.html":{}}}],["show",{"_index":190,"title":{},"body":{"components/Slide.html":{}}}],["signal",{"_index":246,"title":{},"body":{"components/Slides.html":{}}}],["simple",{"_index":294,"title":{},"body":{"index.html":{}}}],["slide",{"_index":120,"title":{"components/Slide.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"coverage.html":{}}}],["slide'},{'name",{"_index":121,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["slideharness",{"_index":193,"title":{"classes/SlideHarness.html":{}},"body":{"classes/SlideHarness.html":{},"coverage.html":{}}}],["slides",{"_index":122,"title":{"components/Slides.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"index.html":{}}}],["slidesharness",{"_index":251,"title":{"classes/SlidesHarness.html":{}},"body":{"classes/SlidesHarness.html":{},"coverage.html":{}}}],["smart",{"_index":295,"title":{},"body":{"index.html":{}}}],["source",{"_index":9,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["src",{"_index":21,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":288,"title":{"index.html":{}},"body":{}}],["state",{"_index":69,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{}}}],["state,[xpr",{"_index":123,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["state]'},{'name",{"_index":124,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["statements",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["static",{"_index":140,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["string",{"_index":13,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":197,"title":{},"body":{"components/Slides.html":{}}}],["supported",{"_index":28,"title":{},"body":{"components/Code.html":{}}}],["supports",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":68,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":10,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"index.html":{}}}],["t",{"_index":321,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":12,"title":{},"body":{"components/Code.html":{}}}],["template",{"_index":67,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["tests",{"_index":137,"title":{},"body":{"classes/CodeHarness.html":{}}}],["text",{"_index":96,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":30,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.autoplay",{"_index":248,"title":{},"body":{"components/Slides.html":{}}}],["this.code",{"_index":89,"title":{},"body":{"components/Code.html":{}}}],["this.idx",{"_index":240,"title":{},"body":{"components/Slides.html":{}}}],["this.interval",{"_index":241,"title":{},"body":{"components/Slides.html":{}}}],["this.lang",{"_index":99,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforall(slideharness",{"_index":254,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["this.locatorforoptional",{"_index":196,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":183,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["this.md",{"_index":169,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.md",{"_index":170,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":171,"title":{},"body":{"components/Markdown.html":{}}}],["this.res.hasvalue",{"_index":104,"title":{},"body":{"components/Code.html":{}}}],["this.res.status",{"_index":111,"title":{},"body":{"components/Code.html":{}}}],["this.res.value",{"_index":172,"title":{},"body":{"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":97,"title":{},"body":{"components/Code.html":{}}}],["this.src",{"_index":90,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.theme",{"_index":100,"title":{},"body":{"components/Code.html":{}}}],["throw",{"_index":91,"title":{},"body":{"components/Code.html":{}}}],["timer",{"_index":226,"title":{},"body":{"components/Slides.html":{}}}],["toggleautoplay",{"_index":233,"title":{},"body":{"components/Slides.html":{}}}],["togglefullscreen",{"_index":234,"title":{},"body":{"components/Slides.html":{}}}],["top",{"_index":210,"title":{},"body":{"components/Slides.html":{}}}],["tostring",{"_index":101,"title":{},"body":{"components/Code.html":{}}}],["transform",{"_index":237,"title":{},"body":{"components/Slides.html":{}}}],["tslib",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":142,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":317,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unable",{"_index":20,"title":{},"body":{"components/Code.html":{}}}],["undefined",{"_index":323,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["url",{"_index":22,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["use",{"_index":31,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["used",{"_index":7,"title":{},"body":{"components/Code.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["valid",{"_index":26,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":81,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":114,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["variable",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":327,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":303,"title":{},"body":{"index.html":{}}}],["version",{"_index":300,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":293,"title":{},"body":{"index.html":{}}}],["viewencapsulation.none",{"_index":200,"title":{},"body":{"components/Slides.html":{}}}],["void",{"_index":192,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["width",{"_index":205,"title":{},"body":{"components/Slides.html":{}}}],["xp)experimental",{"_index":289,"title":{},"body":{"index.html":{}}}],["xpr",{"_index":66,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["xpremptystate",{"_index":146,"title":{},"body":{"directives/EmptyState.html":{}}}],["xprerrorstate",{"_index":150,"title":{},"body":{"directives/ErrorState.html":{}}}],["xprloadingstate",{"_index":152,"title":{},"body":{"directives/LoadingState.html":{}}}],["xprng/.../code.ts",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xprng/.../markdown.ts",{"_index":320,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/.../slides.ts",{"_index":319,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code",{"_index":306,"title":{},"body":{"index.html":{}}}],["xprng/code\";importing",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts",{"_index":5,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["xprng/code/testing/code",{"_index":133,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":302,"title":{},"body":{"index.html":{}}}],["xprng/common\";directly",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["xprng/common/src/states.ts",{"_index":144,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":148,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/markdown",{"_index":305,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":154,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/testing/markdown",{"_index":180,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/slides",{"_index":307,"title":{},"body":{"index.html":{}}}],["xprng/slides/src/slide.ts",{"_index":188,"title":{},"body":{"components/Slide.html":{},"coverage.html":{}}}],["xprng/slides/src/slides.ts",{"_index":198,"title":{},"body":{"components/Slides.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/slides/testing/public",{"_index":194,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["xprng/vendor",{"_index":304,"title":{},"body":{"index.html":{}}}],["xprokstate",{"_index":187,"title":{},"body":{"directives/OkState.html":{}}}],["zoneless",{"_index":297,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n    \n        Description\n    \n    \n        Code\nThis component is used to display source code with syntax highlighting.\nIt can either take a string of code directly or fetch it from a remote source.\nInputs\n\ncode: A string containing the source code to be displayed. Unable to be used with src.\nsrc: A URL from which to fetch the source code. Unable to be used with code.\nlang: The programming language of the source code. This should be a valid language identifier supported by Shiki.\ntheme: The theme to use for syntax highlighting. This can be any theme supported by Shiki.\nhighlighter: A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\nNested Content\nThe component supports nested content for different states, loading, error, and empty states.\nSee the example below for how to use these states.\nExamples\nImporting the component\nExample :import { Code } from \"@xprng/code\";Importing states directives\nExample :import { LoadingState, ErrorState, EmptyState } from \"@xprng/common\";Directly providing code content\nExample :Fetching code from a remote source\nExample :Using nested content for different states\nExample :\n  Loading...\n  Error loading code.\n  No code available.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @switch (state()) {\n  @case (\"local\") {\n    \n  }\n  @case (\"error\") {\n    \n  }\n  @case (\"loading\") {\n    \n  }\n  @case (\"resolved\") {\n    \n  }\n  @default {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Private\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Protected\n                                state\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Source code content as a string\nThis can be used to directly provide source code content.\nIf this is set, the src attribute will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const code = this.code() as string;\n    const src = this.src() as string;\n\n    if (!code && !src) {\n      throw new Error(ERROR_NONE);\n    }\n    if (code && src) {\n      throw new Error(ERROR_BOTH);\n    }\n\n    const parse = (text: string) =>\n      this.sanitize.bypassSecurityTrustHtml(\n        getHighlighter().codeToHtml(text, {\n          lang: this.lang(),\n          theme: this.theme(),\n        }).toString(),\n      );\n\n    if (code) return parse(code as string);\n\n    if (this.res.hasValue()) {\n      return parse(this.res.value());\n    }\n\n    return parse(\"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n\n            \n                \n                    The programming language of the source code.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the source code content.\nThis is optional and can be used to fetch source code content from a URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.code()) return \"local\";\n    if (this.src()) return this.res.status();\n    return \"empty\";\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch (state()) {  @case (\"local\") {      }  @case (\"error\") {      }  @case (\"loading\") {      }  @case (\"resolved\") {      }  @default {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n            \n                Description\n            \n            \n                Harness for interacting with Code components in tests.\n\n            \n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-code\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (md()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                md\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.md()\n      ? this.parse(this.md()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The markdown content to be rendered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the markdown content.\nIf md is provided, this will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (md()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n\n            \n                \n                    The content projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n\n            \n                \n                    The content projected in case of \"md\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slide.html":{"url":"components/Slide.html","title":"component - Slide","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slide\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slide.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                xpr-slide\n            \n\n\n\n\n\n            \n                template\n                @if (display()) {\n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (display()) {  }'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slide'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlideHarness.html":{"url":"classes/SlideHarness.html","title":"class - SlideHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlideHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slide\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slides.html":{"url":"components/Slides.html","title":"component - Slides","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slides\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slides.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-slides\n            \n\n\n\n\n            \n                styles\n                \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                autoplay\n                            \n                            \n                                    Private\n                                    Readonly\n                                current\n                            \n                            \n                                    Readonly\n                                cyclic\n                            \n                            \n                                    Private\n                                    Readonly\n                                delay\n                            \n                            \n                                    Private\n                                    Readonly\n                                el\n                            \n                            \n                                    Readonly\n                                idx\n                            \n                            \n                                    Readonly\n                                interval\n                            \n                            \n                                    Protected\n                                    Readonly\n                                notification\n                            \n                            \n                                    Protected\n                                    Readonly\n                                notificationClass\n                            \n                            \n                                    Private\n                                prev\n                            \n                            \n                                    Private\n                                    Readonly\n                                shouldPlay\n                            \n                            \n                                    Private\n                                    Readonly\n                                slides\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dec\n                            \n                            \n                                    Protected\n                                first\n                            \n                            \n                                    Protected\n                                inc\n                            \n                            \n                                    Protected\n                                last\n                            \n                            \n                                    Protected\n                                next\n                            \n                            \n                                    Protected\n                                previous\n                            \n                            \n                                    Protected\n                                toggleAutoPlay\n                            \n                            \n                                    Protected\n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dec\n                        \n                    \n                \n            \n            \n                \n                        \n                    dec()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        first\n                        \n                    \n                \n            \n            \n                \n                        \n                    first()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        inc\n                        \n                    \n                \n            \n            \n                \n                        \n                    inc()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        last\n                        \n                    \n                \n            \n            \n                \n                        \n                    last()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleAutoPlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleAutoPlay()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleFullScreen\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFullScreen()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        autoplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.idx())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        cyclic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.interval())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        idx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(0, { transform: numberAttribute })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(5000, {\n    transform: numberAttribute,\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\"\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        notificationClass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    \"xpr-slides-notification\",\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prev\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        shouldPlay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.autoplay())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : contentChildren(Slide)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n            \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slides'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlidesHarness.html":{"url":"classes/SlidesHarness.html","title":"class - SlidesHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlidesHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                            \n                                    Readonly\n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSlideAtIndex\n                            \n                            \n                                    Async\n                                getSlideCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slides\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForAll(SlideHarness)\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideAtIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideAtIndex(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideCount()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_BOTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_NONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                xprng/slides/src/slide.ts\n            \n            component\n            Slide\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                xprng/slides/src/slides.ts\n            \n            component\n            Slides\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                        xprng/slides/src/slides.ts\n            \n            type alias\n            Attr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlideHarness\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlidesHarness\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XP)Experimental (NG)Angular Components\nMicro packages of very simple, yet, smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nComponent\nPackage\nDocumentation\nVersion\n\n\n\n\nCommon\n@xprng/common\nDocumentation\n\n\n\nVendor\n@xprng/vendor\nDocumentation\n\n\n\nMarkdown\n@xprng/markdown\nDocumentation\n\n\n\nCode\n@xprng/code\nDocumentation\n\n\n\nSlides\n@xprng/slides\nDocumentation\n\n\n\n\nContent\n\nCommon\nState directives\n\n\nVendor\nShiki syntax highlighter registry\n\n\nMarkdown\nMarkdown component\n\n\nCode\nCode highlighter component\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Attr   (xprng/.../slides.ts)\n                        \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/slides/src/slides.ts\n    \n    \n        \n            \n                \n                    \n                    Attr\n                \n            \n            \n                \n                        T | string | null | undefined\n\n                \n            \n        \n    \n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ERROR_BOTH   (xprng/.../code.ts)\n                        \n                        \n                            ERROR_NONE   (xprng/.../code.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/code/src/code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_BOTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input should be provided, not both.\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input must be provided. Neither is set.\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
