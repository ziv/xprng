var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,1.212,1,0.965]],["body/components/Code.html",[0,0.928,1,1.716,2,0.704,3,0.153,4,0.131,5,0.675,6,0.793,7,2.969,8,0.675,9,3.457,10,1.536,11,1.805,12,0.973,13,0.923,14,1.678,15,2.212,16,1.678,17,0.793,18,0.973,19,0.973,20,1.678,21,2.22,22,1.805,23,2.632,24,1.678,25,2.632,26,1.678,27,1.369,28,2.632,29,2.147,30,3,31,1.805,32,2.422,33,1.678,34,1.678,35,1.678,36,1.678,37,1.678,38,2.212,39,1.882,40,0.973,41,1.678,42,2.969,43,1.639,44,1.53,45,1.24,46,2.212,47,3.247,48,0.973,49,0.973,50,0.973,51,1.678,52,0.043,53,0.973,54,0.5,55,0.704,56,0.704,57,0.704,58,0.973,59,0.973,60,0.973,61,0.973,62,0.973,63,0.364,64,0.675,65,1.44,66,0.607,67,0.587,68,1.678,69,0.699,70,3,71,1.805,72,1.678,73,0.97,74,0.177,75,0.348,76,2.088,77,1.827,78,1.827,79,1.369,80,1.369,81,0.905,82,1.536,83,0.973,84,0.793,85,0.973,86,0.793,87,1.369,88,2.212,89,1.678,90,1.805,91,1.678,92,1.369,93,0.973,94,0.973,95,1.369,96,0.793,97,0.973,98,0.973,99,0.973,100,0.973,101,0.973,102,2.649,103,0.973,104,0.973,105,0.973,106,0.973,107,0.973,108,0.793,109,0.793,110,0.675,111,0.973,112,0.973,113,0.973,114,1.589,115,0.587,116,1.176,117,0.587,118,0.325,119,0.587,120,0.408,121,0.587,122,0.628,123,0.985,124,1.336,125,0.408,126,0.892,127,0.587,128,0.013,129,0.013]],["title/classes/CodeHarness.html",[130,1.081,131,2.006]],["body/classes/CodeHarness.html",[1,1.512,2,1.509,3,0.567,4,0.486,6,2.933,13,0.954,52,0.039,66,0.567,73,0.846,74,0.654,75,0.939,81,0.846,128,0.034,129,0.034,131,2.497,132,1.346,133,2.933,134,1.694,135,3.596,136,3.596,137,3.596,138,1.509,139,2.171,140,1.898,141,1.898,142,0.846]],["title/directives/EmptyState.html",[57,1.212,143,1.535]],["body/directives/EmptyState.html",[3,0.63,4,0.54,45,2.275,52,0.037,54,1.191,57,1.676,63,1.496,65,1.496,66,0.63,69,0.94,123,1.496,128,0.037,129,0.037,144,2.123,145,2.413,146,3.996]],["title/classes/EmptyStateHarness.html",[130,1.081,147,2.006]],["body/classes/EmptyStateHarness.html",[3,0.587,4,0.503,13,0.987,45,1.753,52,0.04,66,0.587,69,0.875,73,0.875,74,0.676,75,0.959,81,0.875,128,0.035,129,0.035,132,1.393,134,1.753,138,1.561,140,1.939,141,1.939,142,0.875,147,2.583,148,2.246,149,2.583]],["title/directives/ErrorState.html",[56,1.212,143,1.535]],["body/directives/ErrorState.html",[3,0.63,4,0.54,44,2.275,52,0.037,54,1.191,56,1.676,63,1.496,65,1.496,66,0.63,69,0.94,123,1.496,128,0.037,129,0.037,144,2.123,145,2.413,150,3.996]],["title/classes/ErrorStateHarness.html",[130,1.081,151,2.006]],["body/classes/ErrorStateHarness.html",[3,0.587,4,0.503,13,0.987,44,1.753,52,0.04,66,0.587,69,0.875,73,0.875,74,0.676,75,0.959,81,0.875,128,0.035,129,0.035,132,1.393,134,1.753,138,1.561,140,1.939,141,1.939,142,0.875,148,2.246,149,2.583,151,2.583]],["title/directives/LoadingState.html",[55,1.212,143,1.535]],["body/directives/LoadingState.html",[3,0.63,4,0.54,43,2.275,52,0.037,54,1.191,55,1.676,63,1.496,65,1.496,66,0.63,69,0.94,123,1.496,128,0.037,129,0.037,144,2.123,145,2.413,152,3.996]],["title/classes/LoadingStateHarness.html",[130,1.081,153,2.006]],["body/classes/LoadingStateHarness.html",[3,0.587,4,0.503,13,0.987,43,1.753,52,0.04,66,0.587,69,0.875,73,0.875,74,0.676,75,0.959,81,0.875,128,0.035,129,0.035,132,1.393,134,1.753,138,1.561,140,1.939,141,1.939,142,0.875,148,2.246,149,2.583,153,2.583]],["title/components/Markdown.html",[0,1.212,118,0.965]],["body/components/Markdown.html",[1,0.512,2,1.027,3,0.241,4,0.207,9,1.249,10,1.063,11,1.249,13,0.65,21,2.109,22,1.249,30,2.495,31,1.249,39,1.646,43,1.153,44,1.153,45,1.153,52,0.044,54,0.457,55,0.642,56,0.642,57,0.642,63,0.573,64,1.063,65,1.715,66,0.722,67,0.924,69,0.36,73,1.006,74,0.278,75,0.508,76,2.301,77,2.426,78,2.426,79,1.997,80,1.997,81,1.006,82,2.124,86,1.249,87,1.249,90,1.249,95,1.997,96,1.249,102,1.249,108,1.249,109,1.249,110,1.063,114,2.109,115,0.924,116,1.856,117,0.924,118,1.362,119,0.924,120,0.642,121,0.924,122,0.916,123,1.308,124,1.846,125,0.642,126,1.301,127,0.924,128,0.019,129,0.019,142,0.36,154,1.063,155,1.531,156,1.531,157,3.116,158,2.448,159,2.448,160,2.448,161,2.448,162,2.495,163,1.478,164,1.997,165,3.058,166,1.478,167,1.531,168,1.249,169,1.531,170,1.531,171,1.531,172,1.531,173,1.531,174,1.531,175,1.531,176,1.063,177,1.531,178,1.531]],["title/classes/MarkdownHarness.html",[130,1.081,179,2.006]],["body/classes/MarkdownHarness.html",[3,0.5,4,0.429,13,0.842,21,1.915,39,1.966,52,0.04,66,0.5,70,3.405,71,2.588,73,1.098,74,0.577,75,0.866,81,1.098,118,1.06,128,0.032,129,0.032,132,1.188,134,1.495,138,1.331,139,1.915,140,1.751,141,1.751,142,0.746,157,2.588,176,2.898,179,2.203,180,2.588,181,4.174,182,4.174,183,4.174,184,3.172,185,4.174,186,4.174]],["title/directives/OkState.html",[125,1.212,143,1.535]],["body/directives/OkState.html",[3,0.63,4,0.54,52,0.037,54,1.191,63,1.496,65,1.496,66,0.63,69,0.94,123,1.496,125,1.676,126,2.566,128,0.037,129,0.037,144,2.123,145,2.413,187,3.996]],["title/components/Slide.html",[0,1.212,120,1.212]],["body/components/Slide.html",[1,0.784,2,1.421,3,0.37,4,0.317,8,3.343,17,2.763,43,1.596,44,1.596,45,1.596,52,0.042,54,0.699,55,0.983,56,0.983,57,0.983,63,0.878,65,1.938,66,0.817,67,1.415,69,0.551,73,0.797,74,0.426,75,0.703,76,1.596,81,0.797,114,2.629,115,1.415,116,2.113,117,1.415,118,0.784,119,1.415,120,1.827,121,1.415,122,1.268,123,1.63,124,2.401,125,0.983,126,1.8,127,1.415,128,0.026,129,0.026,163,2.045,166,2.045,188,1.912,189,3.976,190,3.976,191,3.387,192,2.763]],["title/classes/SlideHarness.html",[130,1.081,193,2.006]],["body/classes/SlideHarness.html",[3,0.56,4,0.48,13,0.942,39,2.114,52,0.04,66,0.56,73,1.056,74,0.645,75,0.931,76,2.114,81,1.056,120,1.489,128,0.034,129,0.034,132,1.328,138,1.489,139,2.142,140,1.882,141,1.882,142,0.835,193,2.464,194,2.464,195,2.464,196,2.895]],["title/components/Slides.html",[0,1.212,122,1.081]],["body/components/Slides.html",[1,0.378,2,0.801,3,0.179,4,0.153,8,2.02,43,0.9,44,0.9,45,0.9,52,0.043,54,0.338,55,0.475,56,0.475,57,0.475,63,0.424,64,0.786,65,1.535,66,0.732,67,0.684,69,0.266,73,1.073,74,0.206,75,0.396,76,2.396,77,3.474,78,3.225,81,1.073,114,1.756,115,0.684,116,1.316,117,0.684,118,0.378,119,0.684,120,1.039,121,0.684,122,1.587,123,1.089,124,1.495,125,0.475,126,1.015,127,0.684,128,0.015,129,0.015,142,0.266,163,1.153,166,2.378,192,3.213,197,1.91,198,0.786,199,1.132,200,1.132,201,2.909,202,1.91,203,2.909,204,2.909,205,1.91,206,1.91,207,1.91,208,1.91,209,1.91,210,1.91,211,3.345,212,1.91,213,1.91,214,1.91,215,1.91,216,1.91,217,1.91,218,1.91,219,1.91,220,1.91,221,1.91,222,2.477,223,1.91,224,1.91,225,1.91,226,1.91,227,2.477,228,2.477,229,2.477,230,2.477,231,2.477,232,2.477,233,2.477,234,2.477,235,1.91,236,1.91,237,2.909,238,1.91,239,2.477,240,1.132,241,1.132,242,1.132,243,1.132,244,1.91,245,1.132,246,1.91,247,1.132,248,1.132,249,1.132,250,0.924]],["title/classes/SlidesHarness.html",[130,1.081,251,2.006]],["body/classes/SlidesHarness.html",[3,0.457,4,0.392,13,0.769,39,1.852,52,0.041,66,0.457,73,1.049,74,0.714,75,0.816,76,2.252,81,1.049,110,2.013,116,1.541,122,1.669,128,0.03,129,0.03,132,1.085,138,1.216,139,1.75,140,1.649,141,1.649,142,0.925,163,2.373,164,3.9,166,2.373,168,2.365,194,2.013,195,2.013,196,2.365,250,3.206,251,2.013,252,3.93,253,4.459,254,2.899,255,2.899,256,3.93]],["title/coverage.html",[257,3.198]],["body/coverage.html",[0,1.746,1,0.712,4,0.288,5,2.613,27,1.738,52,0.043,55,0.894,56,0.894,57,0.894,92,1.738,118,0.712,120,0.894,122,0.798,125,0.894,128,0.024,129,0.024,130,1.804,131,1.48,133,1.738,134,2.094,142,0.885,143,2.211,144,2.211,147,1.48,148,2.272,151,1.48,153,1.48,154,2.193,179,1.48,180,1.738,188,1.738,193,1.48,194,2.193,195,2.193,198,2.193,211,4.392,251,1.48,257,1.738,258,2.131,259,2.131,260,2.131,261,2.131,262,3.158,263,1.738,264,4.818,265,1.738,266,3.158,267,2.131,268,3.763,269,2.131,270,2.131,271,3.158,272,1.738,273,2.131,274,2.131,275,2.131,276,2.131,277,2.131,278,1.738,279,2.131,280,2.131,281,2.131,282,2.131]],["title/dependencies.html",[283,1.682,284,2.829]],["body/dependencies.html",[52,0.043,128,0.037,129,0.037,284,3.26,285,3.996,286,3.996,287,3.996,288,3.996,289,3.996,290,3.996,291,3.996,292,3.996,293,3.996]],["title/index.html",[74,0.44,294,2.423,295,2.423]],["body/index.html",[0,1.974,1,1.573,2,1.772,10,2.242,29,2.634,32,3.445,39,1.521,52,0.036,54,0.963,69,0.76,118,1.573,122,1.209,128,0.032,129,0.032,283,2.242,296,3.229,297,3.229,298,3.229,299,3.229,300,3.229,301,3.229,302,3.229,303,3.229,304,3.229,305,4.223,306,3.229,307,2.634,308,3.229,309,4.223,310,3.229,311,4.223,312,3.229,313,3.229,314,3.229,315,3.229,316,3.229,317,3.229]],["title/modules.html",[318,3.198]],["body/modules.html",[52,0.039,128,0.039,129,0.039,318,3.608]],["title/overview.html",[319,3.198]],["body/overview.html",[2,1.768,52,0.038,54,1.257,128,0.038,129,0.038,132,1.578,319,3.438,320,4.985,321,4.215]],["title/properties.html",[75,0.72,283,1.682]],["body/properties.html",[52,0.041,75,0.896,128,0.038,129,0.038,307,3.521,322,4.316]],["title/miscellaneous/typealiases.html",[323,1.463,324,3.468]],["body/miscellaneous/typealiases.html",[13,0.987,52,0.041,74,0.676,118,1.243,128,0.035,129,0.035,142,0.875,154,2.583,162,3.035,198,2.583,272,3.77,278,3.77,323,2.246,325,3.72,326,3.72,327,3.72,328,3.72,329,3.72,330,3.72,331,3.72,332,3.72,333,3.72]],["title/miscellaneous/variables.html",[323,1.463,334,2.829]],["body/miscellaneous/variables.html",[1,1.494,5,2.448,13,1.186,21,2.698,52,0.041,73,1.051,74,0.641,81,1.051,82,3.103,84,2.876,128,0.034,129,0.034,142,1.051,176,3.103,263,3.645,265,3.645,323,2.128,334,2.876,335,4.468,336,3.525]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":211,"title":{},"body":{"components/Slides.html":{},"coverage.html":{}}}],["0.0.0",{"_index":322,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":247,"title":{},"body":{"components/Slides.html":{}}}],["1/1",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":306,"title":{},"body":{"index.html":{}}}],["20.1.0",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["2em",{"_index":208,"title":{},"body":{"components/Slides.html":{}}}],["3em",{"_index":206,"title":{},"body":{"components/Slides.html":{}}}],["4",{"_index":320,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["5.1.0",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["6/10",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":321,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":209,"title":{},"body":{"components/Slides.html":{}}}],["actual_component",{"_index":127,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["alias",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":325,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":305,"title":{},"body":{"index.html":{}}}],["angular/platform",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["api.ts",{"_index":195,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["async",{"_index":164,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["attr",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["attribute",{"_index":85,"title":{},"body":{"components/Code.html":{}}}],["autoplay",{"_index":215,"title":{},"body":{"components/Slides.html":{}}}],["available",{"_index":62,"title":{},"body":{"components/Code.html":{}}}],["below",{"_index":48,"title":{},"body":{"components/Code.html":{}}}],["block",{"_index":203,"title":{},"body":{"components/Slides.html":{}}}],["booleanattribute",{"_index":238,"title":{},"body":{"components/Slides.html":{}}}],["both",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":213,"title":{},"body":{"components/Slides.html":{}}}],["case",{"_index":70,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["class",{"_index":130,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}},"body":{"coverage.html":{}}}],["classes",{"_index":132,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code'},{'name",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["codeharness",{"_index":131,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":309,"title":{},"body":{"index.html":{}}}],["community",{"_index":317,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":303,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}},"body":{"components/Code.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":115,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["componentharness",{"_index":149,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":87,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["const",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["constructor",{"_index":235,"title":{},"body":{"components/Slides.html":{}}}],["containing",{"_index":18,"title":{},"body":{"components/Code.html":{}}}],["content",{"_index":39,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"index.html":{}}}],["contentchildren(slide",{"_index":249,"title":{},"body":{"components/Slides.html":{}}}],["contentcontainercomponentharness",{"_index":139,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["coverage",{"_index":257,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":216,"title":{},"body":{"components/Slides.html":{}}}],["custom",{"_index":33,"title":{},"body":{"components/Code.html":{}}}],["cyclic",{"_index":217,"title":{},"body":{"components/Slides.html":{}}}],["dec",{"_index":227,"title":{},"body":{"components/Slides.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":218,"title":{},"body":{"components/Slides.html":{}}}],["dependencies",{"_index":284,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{}}}],["different",{"_index":41,"title":{},"body":{"components/Code.html":{}}}],["directive",{"_index":143,"title":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"coverage.html":{}}}],["directives",{"_index":54,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":14,"title":{},"body":{"components/Code.html":{}}}],["display",{"_index":8,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["displayed",{"_index":19,"title":{},"body":{"components/Code.html":{}}}],["documentation",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["el",{"_index":219,"title":{},"body":{"components/Slides.html":{}}}],["empty",{"_index":45,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["emptystate",{"_index":57,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":147,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"coverage.html":{}}}],["encapsulation",{"_index":199,"title":{},"body":{"components/Slides.html":{}}}],["error",{"_index":44,"title":{},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["error(error_both",{"_index":94,"title":{},"body":{"components/Code.html":{}}}],["error(error_none",{"_index":93,"title":{},"body":{"components/Code.html":{}}}],["error_both",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_none",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorstate",{"_index":56,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":151,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/ErrorStateHarness.html":{},"coverage.html":{}}}],["example",{"_index":47,"title":{},"body":{"components/Code.html":{}}}],["examples",{"_index":49,"title":{},"body":{"components/Code.html":{}}}],["exportas",{"_index":145,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["express",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":138,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["false",{"_index":191,"title":{},"body":{"components/Slide.html":{}}}],["fetch",{"_index":15,"title":{},"body":{"components/Code.html":{}}}],["fetching",{"_index":60,"title":{},"body":{"components/Code.html":{}}}],["file",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["first",{"_index":228,"title":{},"body":{"components/Slides.html":{}}}],["function",{"_index":34,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":98,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":181,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":182,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getslideatindex",{"_index":252,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslideatindex(index",{"_index":255,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getslidecount",{"_index":253,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["getting",{"_index":294,"title":{"index.html":{}},"body":{}}],["harness",{"_index":135,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts",{"_index":134,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["height",{"_index":207,"title":{},"body":{"components/Slides.html":{}}}],["hide",{"_index":189,"title":{},"body":{"components/Slide.html":{}}}],["highlighter",{"_index":32,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["highlightercore",{"_index":37,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":11,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["host",{"_index":64,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["hostselector",{"_index":141,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["httpresource.text",{"_index":108,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":107,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":113,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["idx",{"_index":220,"title":{},"body":{"components/Slides.html":{}}}],["ignored",{"_index":86,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["implements",{"_index":155,"title":{},"body":{"components/Markdown.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/Code.html":{}}}],["importing",{"_index":50,"title":{},"body":{"components/Code.html":{}}}],["inc",{"_index":229,"title":{},"body":{"components/Slides.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["inject(domsanitizer",{"_index":109,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(elementref",{"_index":242,"title":{},"body":{"components/Slides.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["input(\"github",{"_index":177,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":106,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":112,"title":{},"body":{"components/Code.html":{}}}],["input>(0",{"_index":243,"title":{},"body":{"components/Slides.html":{}}}],["input>(5000",{"_index":245,"title":{},"body":{"components/Slides.html":{}}}],["input>(false",{"_index":236,"title":{},"body":{"components/Slides.html":{}}}],["inputs",{"_index":17,"title":{},"body":{"components/Code.html":{},"components/Slide.html":{}}}],["instance",{"_index":35,"title":{},"body":{"components/Code.html":{}}}],["interacting",{"_index":136,"title":{},"body":{"classes/CodeHarness.html":{}}}],["interval",{"_index":221,"title":{},"body":{"components/Slides.html":{}}}],["lang",{"_index":23,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":25,"title":{},"body":{"components/Code.html":{}}}],["last",{"_index":230,"title":{},"body":{"components/Slides.html":{}}}],["left",{"_index":212,"title":{},"body":{"components/Slides.html":{}}}],["light",{"_index":178,"title":{},"body":{"components/Markdown.html":{}}}],["linkedsignal",{"_index":239,"title":{},"body":{"components/Slides.html":{}}}],["loaded",{"_index":184,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["loading",{"_index":43,"title":{},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["loadingstate",{"_index":55,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":153,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":71,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["made",{"_index":316,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":174,"title":{},"body":{"components/Markdown.html":{}}}],["markdown",{"_index":118,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdown'},{'name",{"_index":119,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["markdownharness",{"_index":179,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":272,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":331,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["markedoptions",{"_index":333,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":129,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":157,"title":{},"body":{"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["metadata",{"_index":63,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["methods",{"_index":163,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["micro",{"_index":298,"title":{},"body":{"index.html":{}}}],["min",{"_index":204,"title":{},"body":{"components/Slides.html":{}}}],["miscellaneous",{"_index":323,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":186,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modules",{"_index":318,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":116,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["nested",{"_index":38,"title":{},"body":{"components/Code.html":{}}}],["new",{"_index":92,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["next",{"_index":231,"title":{},"body":{"components/Slides.html":{}}}],["ng)angular",{"_index":297,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":165,"title":{},"body":{"components/Markdown.html":{}}}],["notification",{"_index":222,"title":{},"body":{"components/Slides.html":{}}}],["notificationclass",{"_index":223,"title":{},"body":{"components/Slides.html":{}}}],["null",{"_index":329,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["number",{"_index":250,"title":{},"body":{"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["numberattribute",{"_index":244,"title":{},"body":{"components/Slides.html":{}}}],["ok",{"_index":126,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["okstate",{"_index":125,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"coverage.html":{}}}],["oninit",{"_index":156,"title":{},"body":{"components/Markdown.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["options",{"_index":162,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":319,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":283,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":299,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":168,"title":{},"body":{"components/Markdown.html":{},"classes/SlidesHarness.html":{}}}],["parse",{"_index":95,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(code",{"_index":103,"title":{},"body":{"components/Code.html":{}}}],["parse(text",{"_index":167,"title":{},"body":{"components/Markdown.html":{}}}],["parse(this.res.value",{"_index":105,"title":{},"body":{"components/Code.html":{}}}],["parser",{"_index":175,"title":{},"body":{"components/Markdown.html":{}}}],["parsing",{"_index":332,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["position",{"_index":201,"title":{},"body":{"components/Slides.html":{}}}],["prev",{"_index":224,"title":{},"body":{"components/Slides.html":{}}}],["previous",{"_index":232,"title":{},"body":{"components/Slides.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["programming",{"_index":24,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":185,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["promise",{"_index":256,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["properties",{"_index":75,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"properties.html":{}}}],["protected",{"_index":77,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slides.html":{}}}],["provide",{"_index":83,"title":{},"body":{"components/Code.html":{}}}],["provided",{"_index":176,"title":{},"body":{"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":59,"title":{},"body":{"components/Code.html":{}}}],["readonly",{"_index":76,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["registry",{"_index":315,"title":{},"body":{"index.html":{}}}],["relative",{"_index":202,"title":{},"body":{"components/Slides.html":{}}}],["remote",{"_index":16,"title":{},"body":{"components/Code.html":{}}}],["rendered",{"_index":173,"title":{},"body":{"components/Markdown.html":{}}}],["res",{"_index":79,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":161,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":158,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":160,"title":{},"body":{"components/Markdown.html":{}}}],["res.value",{"_index":159,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":72,"title":{},"body":{"components/Code.html":{}}}],["results",{"_index":128,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":102,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":166,"title":{},"body":{"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["right",{"_index":214,"title":{},"body":{"components/Slides.html":{}}}],["sanitize",{"_index":80,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":46,"title":{},"body":{"components/Code.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["server",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":84,"title":{},"body":{"components/Code.html":{},"miscellaneous/variables.html":{}}}],["shiki",{"_index":29,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["shiki's",{"_index":36,"title":{},"body":{"components/Code.html":{}}}],["shouldplay",{"_index":225,"title":{},"body":{"components/Slides.html":{}}}],["show",{"_index":190,"title":{},"body":{"components/Slide.html":{}}}],["signal",{"_index":246,"title":{},"body":{"components/Slides.html":{}}}],["simple",{"_index":301,"title":{},"body":{"index.html":{}}}],["slide",{"_index":120,"title":{"components/Slide.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"coverage.html":{}}}],["slide'},{'name",{"_index":121,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["slideharness",{"_index":193,"title":{"classes/SlideHarness.html":{}},"body":{"classes/SlideHarness.html":{},"coverage.html":{}}}],["slides",{"_index":122,"title":{"components/Slides.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"index.html":{}}}],["slidesharness",{"_index":251,"title":{"classes/SlidesHarness.html":{}},"body":{"classes/SlidesHarness.html":{},"coverage.html":{}}}],["smart",{"_index":302,"title":{},"body":{"index.html":{}}}],["source",{"_index":9,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["src",{"_index":21,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":295,"title":{"index.html":{}},"body":{}}],["state",{"_index":69,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{},"index.html":{}}}],["state,[xpr",{"_index":123,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["state]'},{'name",{"_index":124,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["statements",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["static",{"_index":140,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["string",{"_index":13,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":197,"title":{},"body":{"components/Slides.html":{}}}],["supported",{"_index":28,"title":{},"body":{"components/Code.html":{}}}],["supports",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":68,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":10,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"index.html":{}}}],["t",{"_index":328,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":12,"title":{},"body":{"components/Code.html":{}}}],["template",{"_index":67,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["tests",{"_index":137,"title":{},"body":{"classes/CodeHarness.html":{}}}],["text",{"_index":96,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":30,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.autoplay",{"_index":248,"title":{},"body":{"components/Slides.html":{}}}],["this.code",{"_index":89,"title":{},"body":{"components/Code.html":{}}}],["this.idx",{"_index":240,"title":{},"body":{"components/Slides.html":{}}}],["this.interval",{"_index":241,"title":{},"body":{"components/Slides.html":{}}}],["this.lang",{"_index":99,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforall(slideharness",{"_index":254,"title":{},"body":{"classes/SlidesHarness.html":{}}}],["this.locatorforoptional",{"_index":196,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":183,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["this.md",{"_index":169,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.md",{"_index":170,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":171,"title":{},"body":{"components/Markdown.html":{}}}],["this.res.hasvalue",{"_index":104,"title":{},"body":{"components/Code.html":{}}}],["this.res.status",{"_index":111,"title":{},"body":{"components/Code.html":{}}}],["this.res.value",{"_index":172,"title":{},"body":{"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":97,"title":{},"body":{"components/Code.html":{}}}],["this.src",{"_index":90,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.theme",{"_index":100,"title":{},"body":{"components/Code.html":{}}}],["throw",{"_index":91,"title":{},"body":{"components/Code.html":{}}}],["timer",{"_index":226,"title":{},"body":{"components/Slides.html":{}}}],["toggleautoplay",{"_index":233,"title":{},"body":{"components/Slides.html":{}}}],["togglefullscreen",{"_index":234,"title":{},"body":{"components/Slides.html":{}}}],["top",{"_index":210,"title":{},"body":{"components/Slides.html":{}}}],["tostring",{"_index":101,"title":{},"body":{"components/Code.html":{}}}],["transform",{"_index":237,"title":{},"body":{"components/Slides.html":{}}}],["tslib",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":142,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":324,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unable",{"_index":20,"title":{},"body":{"components/Code.html":{}}}],["undefined",{"_index":330,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["url",{"_index":22,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["use",{"_index":31,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["used",{"_index":7,"title":{},"body":{"components/Code.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["valid",{"_index":26,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":81,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":114,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"components/Slide.html":{},"components/Slides.html":{}}}],["variable",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":334,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":311,"title":{},"body":{"index.html":{}}}],["version",{"_index":307,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":300,"title":{},"body":{"index.html":{}}}],["viewencapsulation.none",{"_index":200,"title":{},"body":{"components/Slides.html":{}}}],["void",{"_index":192,"title":{},"body":{"components/Slide.html":{},"components/Slides.html":{}}}],["width",{"_index":205,"title":{},"body":{"components/Slides.html":{}}}],["xpr",{"_index":66,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"components/Slide.html":{},"classes/SlideHarness.html":{},"components/Slides.html":{},"classes/SlidesHarness.html":{}}}],["xpr)experimental",{"_index":296,"title":{},"body":{"index.html":{}}}],["xpremptystate",{"_index":146,"title":{},"body":{"directives/EmptyState.html":{}}}],["xprerrorstate",{"_index":150,"title":{},"body":{"directives/ErrorState.html":{}}}],["xprloadingstate",{"_index":152,"title":{},"body":{"directives/LoadingState.html":{}}}],["xprng/.../code.ts",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xprng/.../markdown.ts",{"_index":327,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/.../slides.ts",{"_index":326,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code",{"_index":313,"title":{},"body":{"index.html":{}}}],["xprng/code\";importing",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts",{"_index":5,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["xprng/code/testing/code",{"_index":133,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":308,"title":{},"body":{"index.html":{}}}],["xprng/common\";directly",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["xprng/common/src/states.ts",{"_index":144,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":148,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/markdown",{"_index":312,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":154,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/testing/markdown",{"_index":180,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/slides",{"_index":314,"title":{},"body":{"index.html":{}}}],["xprng/slides/src/slide.ts",{"_index":188,"title":{},"body":{"components/Slide.html":{},"coverage.html":{}}}],["xprng/slides/src/slides.ts",{"_index":198,"title":{},"body":{"components/Slides.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/slides/testing/public",{"_index":194,"title":{},"body":{"classes/SlideHarness.html":{},"classes/SlidesHarness.html":{},"coverage.html":{}}}],["xprng/vendor",{"_index":310,"title":{},"body":{"index.html":{}}}],["xprokstate",{"_index":187,"title":{},"body":{"directives/OkState.html":{}}}],["zoneless",{"_index":304,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n    \n        Description\n    \n    \n        Code\nThis component is used to display source code with syntax highlighting.\nIt can either take a string of code directly or fetch it from a remote source.\nInputs\n\ncode: A string containing the source code to be displayed. Unable to be used with src.\nsrc: A URL from which to fetch the source code. Unable to be used with code.\nlang: The programming language of the source code. This should be a valid language identifier supported by Shiki.\ntheme: The theme to use for syntax highlighting. This can be any theme supported by Shiki.\nhighlighter: A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\nNested Content\nThe component supports nested content for different states, loading, error, and empty states.\nSee the example below for how to use these states.\nExamples\nImporting the component\nExample :import { Code } from \"@xprng/code\";Importing states directives\nExample :import { LoadingState, ErrorState, EmptyState } from \"@xprng/common\";Directly providing code content\nExample :Fetching code from a remote source\nExample :Using nested content for different states\nExample :\n  Loading...\n  Error loading code.\n  No code available.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @switch (state()) {\n  @case (\"local\") {\n    \n  }\n  @case (\"error\") {\n    \n  }\n  @case (\"loading\") {\n    \n  }\n  @case (\"resolved\") {\n    \n  }\n  @default {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Private\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Protected\n                                state\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Source code content as a string\nThis can be used to directly provide source code content.\nIf this is set, the src attribute will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const code = this.code() as string;\n    const src = this.src() as string;\n\n    if (!code && !src) {\n      throw new Error(ERROR_NONE);\n    }\n    if (code && src) {\n      throw new Error(ERROR_BOTH);\n    }\n\n    const parse = (text: string) =>\n      this.sanitize.bypassSecurityTrustHtml(\n        getHighlighter().codeToHtml(text, {\n          lang: this.lang(),\n          theme: this.theme(),\n        }).toString(),\n      );\n\n    if (code) return parse(code as string);\n\n    if (this.res.hasValue()) {\n      return parse(this.res.value());\n    }\n\n    return parse(\"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n\n            \n                \n                    The programming language of the source code.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the source code content.\nThis is optional and can be used to fetch source code content from a URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.code()) return \"local\";\n    if (this.src()) return this.res.status();\n    return \"empty\";\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch (state()) {  @case (\"local\") {      }  @case (\"error\") {      }  @case (\"loading\") {      }  @case (\"resolved\") {      }  @default {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n            \n                Description\n            \n            \n                Harness for interacting with Code components in tests.\n\n            \n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-code\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (md()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                md\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.md()\n      ? this.parse(this.md()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The markdown content to be rendered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the markdown content.\nIf md is provided, this will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (md()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n\n            \n                \n                    The content projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n\n            \n                \n                    The content projected in case of \"md\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slide.html":{"url":"components/Slide.html","title":"component - Slide","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slide\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slide.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                xpr-slide\n            \n\n\n\n\n\n            \n                template\n                @if (display()) {\n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (display()) {  }'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slide'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlideHarness.html":{"url":"classes/SlideHarness.html","title":"class - SlideHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlideHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slide\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Slides.html":{"url":"components/Slides.html","title":"component - Slides","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Slides\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    xprng/slides/src/slides.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-slides\n            \n\n\n\n\n            \n                styles\n                \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                autoplay\n                            \n                            \n                                    Private\n                                    Readonly\n                                current\n                            \n                            \n                                    Readonly\n                                cyclic\n                            \n                            \n                                    Private\n                                    Readonly\n                                delay\n                            \n                            \n                                    Private\n                                    Readonly\n                                el\n                            \n                            \n                                    Readonly\n                                idx\n                            \n                            \n                                    Readonly\n                                interval\n                            \n                            \n                                    Protected\n                                    Readonly\n                                notification\n                            \n                            \n                                    Protected\n                                    Readonly\n                                notificationClass\n                            \n                            \n                                    Private\n                                prev\n                            \n                            \n                                    Private\n                                    Readonly\n                                shouldPlay\n                            \n                            \n                                    Private\n                                    Readonly\n                                slides\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dec\n                            \n                            \n                                    Protected\n                                first\n                            \n                            \n                                    Protected\n                                inc\n                            \n                            \n                                    Protected\n                                last\n                            \n                            \n                                    Protected\n                                next\n                            \n                            \n                                    Protected\n                                previous\n                            \n                            \n                                    Protected\n                                toggleAutoPlay\n                            \n                            \n                                    Protected\n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dec\n                        \n                    \n                \n            \n            \n                \n                        \n                    dec()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        first\n                        \n                    \n                \n            \n            \n                \n                        \n                    first()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        inc\n                        \n                    \n                \n            \n            \n                \n                        \n                    inc()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        last\n                        \n                    \n                \n            \n            \n                \n                        \n                    last()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleAutoPlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleAutoPlay()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        toggleFullScreen\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFullScreen()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        autoplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.idx())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        cyclic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(false, {\n    transform: booleanAttribute,\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.interval())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        idx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(0, { transform: numberAttribute })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>(5000, {\n    transform: numberAttribute,\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\"\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        notificationClass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    \"xpr-slides-notification\",\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prev\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        shouldPlay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : linkedSignal(() => this.autoplay())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : contentChildren(Slide)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n            \n    xpr-slides {\n      position: relative;\n      display: block;\n      min-width: 3em;\n      min-height: 2em;\n\n      xpr-slide {\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'},{'name': 'Slide', 'selector': 'xpr-slide'},{'name': 'Slides', 'selector': 'xpr-slides'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Slides'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlidesHarness.html":{"url":"classes/SlidesHarness.html","title":"class - SlidesHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlidesHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/slides/testing/public-api.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Static\n                                    Readonly\n                                hostSelector\n                            \n                            \n                                    Readonly\n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSlideAtIndex\n                            \n                            \n                                    Async\n                                getSlideCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\"*\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-slides\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        slides\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForAll(SlideHarness)\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideAtIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideAtIndex(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSlideCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSlideCount()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_BOTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_NONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                xprng/slides/src/slide.ts\n            \n            component\n            Slide\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                xprng/slides/src/slides.ts\n            \n            component\n            Slides\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                        xprng/slides/src/slides.ts\n            \n            type alias\n            Attr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlideHarness\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                xprng/slides/testing/public-api.ts\n            \n            class\n            SlidesHarness\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/platform-server : ^20.1.0\n        \n            @angular/ssr : ^20.1.5\n        \n            express : ^5.1.0\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XPR)Experimental (NG)Angular Components\nMicro packages of very simple, yet, smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nPackage\nComponent\nVersion\n\n\n\n\n@xprng/common\nCommon\n\n\n\n@xprng/vendor\nVendor\n\n\n\n@xprng/markdown\nMarkdown\n\n\n\n@xprng/code\nCode\n\n\n\n@xprng/slides\nSlides\n\n\n\n\nContent\n\nCommon\nState directives\n\n\nVendor\nShiki syntax highlighter registry\n\n\nMarkdown\nMarkdown component\n\n\nCode\nCode highlighter component\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Attr   (xprng/.../slides.ts)\n                        \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/slides/src/slides.ts\n    \n    \n        \n            \n                \n                    \n                    Attr\n                \n            \n            \n                \n                        T | string | null | undefined\n\n                \n            \n        \n    \n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ERROR_BOTH   (xprng/.../code.ts)\n                        \n                        \n                            ERROR_NONE   (xprng/.../code.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/code/src/code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_BOTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input should be provided, not both.\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input must be provided. Neither is set.\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
