var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,1.355,1,1.03]],["body/components/Code.html",[0,0.891,1,1.748,2,0.663,3,0.161,4,0.137,5,0.507,6,0.605,7,2.463,8,0.753,9,2.957,10,1.202,11,1.435,12,0.753,13,0.971,14,1.33,15,1.787,16,1.33,17,0.753,18,0.753,19,0.753,20,1.33,21,1.802,22,1.435,23,2.157,24,1.33,25,2.157,26,1.33,27,1.068,28,2.157,29,1.732,30,2.512,31,1.435,32,1.977,33,1.33,34,1.33,35,1.33,36,1.33,37,1.33,38,1.787,39,1.981,40,0.753,41,1.33,42,2.463,43,1.693,44,1.567,45,1.242,46,1.787,47,2.721,48,0.753,49,0.753,50,0.753,51,1.33,52,0.051,53,0.753,54,0.439,55,0.663,56,0.663,57,0.663,58,0.753,59,0.753,60,0.753,61,0.753,62,0.753,63,0.327,64,0.605,65,1.276,66,0.628,67,0.605,68,1.33,69,0.613,70,2.512,71,1.435,72,1.33,73,1.179,74,0.187,75,0.382,76,3.114,77,1.732,78,1.732,79,1.068,80,1.068,81,1.088,82,1.202,83,0.753,84,0.605,85,0.753,86,0.605,87,1.068,88,1.787,89,1.33,90,1.435,91,1.33,92,1.068,93,0.753,94,0.753,95,1.068,96,0.605,97,0.753,98,0.753,99,0.753,100,0.753,101,0.753,102,2.184,103,0.753,104,0.753,105,0.753,106,0.753,107,0.753,108,0.605,109,0.605,110,0.605,111,0.753,112,0.753,113,0.753,114,1.732,115,0.605,116,1.435,117,0.605,118,0.504,119,0.936,120,1.435,121,0.375,122,0.895,123,0.605,124,0.013,125,0.013]],["title/classes/CodeHarness.html",[126,1.18,127,1.83]],["body/classes/CodeHarness.html",[1,1.536,2,1.57,3,0.673,4,0.572,6,2.529,13,1.041,52,0.046,66,0.673,73,1.041,74,0.784,75,1.166,81,1.041,124,0.04,125,0.04,127,2.12,128,1.367,129,2.529,130,1.367,131,3.15,132,3.15,133,3.15,134,1.57,135,2.529,136,2.022,137,2.022,138,0.905]],["title/directives/EmptyState.html",[57,1.355,139,1.355]],["body/directives/EmptyState.html",[3,0.765,4,0.65,45,2.533,52,0.043,54,1.183,57,1.785,63,1.554,65,1.554,66,0.765,69,0.891,119,1.554,124,0.043,125,0.043,140,1.785,141,2.063,142,3.582]],["title/classes/EmptyStateHarness.html",[126,1.18,143,1.83]],["body/classes/EmptyStateHarness.html",[3,0.701,4,0.596,13,1.084,45,1.89,52,0.047,66,0.701,69,0.816,73,1.084,74,0.816,75,1.197,81,1.084,124,0.041,125,0.041,128,1.424,130,1.424,134,1.636,136,2.076,137,2.076,138,0.943,143,2.209,144,1.89,145,2.209]],["title/directives/ErrorState.html",[56,1.355,139,1.355]],["body/directives/ErrorState.html",[3,0.765,4,0.65,44,2.533,52,0.043,54,1.183,56,1.785,63,1.554,65,1.554,66,0.765,69,0.891,119,1.554,124,0.043,125,0.043,140,1.785,141,2.063,146,3.582]],["title/classes/ErrorStateHarness.html",[126,1.18,147,1.83]],["body/classes/ErrorStateHarness.html",[3,0.701,4,0.596,13,1.084,44,1.89,52,0.047,66,0.701,69,0.816,73,1.084,74,0.816,75,1.197,81,1.084,124,0.041,125,0.041,128,1.424,130,1.424,134,1.636,136,2.076,137,2.076,138,0.943,144,1.89,145,2.209,147,2.209]],["title/directives/LoadingState.html",[55,1.355,139,1.355]],["body/directives/LoadingState.html",[3,0.765,4,0.65,43,2.533,52,0.043,54,1.183,55,1.785,63,1.554,65,1.554,66,0.765,69,0.891,119,1.554,124,0.043,125,0.043,140,1.785,141,2.063,148,3.582]],["title/classes/LoadingStateHarness.html",[126,1.18,149,1.83]],["body/classes/LoadingStateHarness.html",[3,0.701,4,0.596,13,1.084,43,1.89,52,0.047,66,0.701,69,0.816,73,1.084,74,0.816,75,1.197,81,1.084,124,0.041,125,0.041,128,1.424,130,1.424,134,1.636,136,2.076,137,2.076,138,0.943,144,1.89,145,2.209,149,2.209]],["title/components/Markdown.html",[0,1.355,118,1.03]],["body/components/Markdown.html",[1,0.466,2,1.009,3,0.263,4,0.223,9,0.988,10,0.828,11,0.988,13,0.669,21,1.72,22,0.988,30,2.07,31,0.988,39,1.72,43,1.166,44,1.166,45,1.166,52,0.052,54,0.407,55,0.613,56,0.613,57,0.613,63,0.534,64,0.988,65,1.628,66,0.802,67,0.988,69,0.306,73,1.24,74,0.306,75,0.582,76,3.512,77,2.398,78,2.398,79,1.625,80,1.625,81,1.24,82,1.735,86,0.988,87,0.988,90,0.988,95,1.625,96,0.988,102,0.988,108,0.988,109,0.988,110,0.988,114,2.398,115,0.988,116,2.398,117,0.988,118,1.421,119,1.296,120,2.07,121,0.613,122,1.362,123,0.988,124,0.02,125,0.02,138,0.354,150,0.828,151,1.231,152,1.231,153,2.651,154,2.024,155,2.024,156,2.024,157,2.024,158,2.07,159,2.024,160,2.024,161,2.579,162,2.024,163,1.231,164,1.231,165,1.231,166,1.231,167,1.231,168,1.231,169,1.231,170,1.231,171,1.231,172,0.828,173,1.231,174,1.231]],["title/classes/MarkdownHarness.html",[126,1.18,175,1.83]],["body/classes/MarkdownHarness.html",[3,0.58,4,0.492,13,0.897,21,1.563,39,2.117,52,0.047,66,0.58,70,2.952,71,2.179,73,1.377,74,0.675,75,1.057,81,1.377,118,1.028,124,0.036,125,0.036,128,1.178,130,1.178,134,1.353,135,2.179,136,1.833,137,1.833,138,0.78,153,2.179,172,2.474,175,1.826,176,2.179,177,3.677,178,3.677,179,3.677,180,2.714,181,3.677,182,3.677]],["title/directives/OkState.html",[121,1.355,139,1.355]],["body/directives/OkState.html",[3,0.765,4,0.65,52,0.043,54,1.183,63,1.554,65,1.554,66,0.765,69,0.891,119,1.554,121,1.785,122,2.96,124,0.043,125,0.043,140,1.785,141,2.063,183,3.582]],["title/coverage.html",[184,2.956]],["body/coverage.html",[0,1.484,1,0.763,4,0.366,5,2.383,27,1.618,52,0.05,55,1.005,56,1.005,57,1.005,92,1.618,118,0.763,121,1.005,124,0.029,125,0.029,126,1.811,127,1.356,129,1.618,130,1.811,138,0.856,139,1.95,140,1.95,143,1.356,144,2.04,147,1.356,149,1.356,150,2.004,175,1.356,176,1.618,184,1.618,185,2.016,186,2.016,187,2.016,188,2.016,189,2.978,190,1.618,191,4.737,192,4.369,193,1.618,194,2.978,195,2.016,196,3.542,197,2.016,198,2.016,199,2.016,200,1.618,201,2.016,202,2.016,203,2.016,204,2.016,205,2.016]],["title/dependencies.html",[206,1.538,207,2.619]],["body/dependencies.html",[52,0.048,124,0.046,125,0.046,207,3.165,208,3.943,209,3.943]],["title/index.html",[74,0.569,210,2.286,211,2.286]],["body/index.html",[0,2.086,1,1.585,2,1.841,10,1.839,29,2.194,32,2.966,39,1.574,52,0.041,54,0.903,69,0.68,118,1.585,124,0.036,125,0.036,206,1.839,212,2.733,213,2.733,214,2.733,215,2.733,216,2.733,217,2.733,218,2.733,219,2.733,220,2.733,221,3.694,222,2.733,223,2.733,224,3.694,225,2.733,226,2.733,227,3.694,228,2.733,229,2.733,230,2.733,231,2.733,232,2.733,233,2.733,234,2.733,235,2.733,236,2.733]],["title/modules.html",[237,2.956]],["body/modules.html",[52,0.046,124,0.046,125,0.046,237,3.264]],["title/overview.html",[238,2.956]],["body/overview.html",[2,1.907,52,0.045,54,1.264,124,0.045,125,0.045,128,1.661,238,3.072,239,3.827,240,3.827,241,3.827]],["title/properties.html",[75,0.938,206,1.538]],["body/properties.html",[52,0.048,75,1.133,124,0.046,125,0.046,242,3.943,243,3.943]],["title/miscellaneous/typealiases.html",[244,1.316,245,3.263]],["body/miscellaneous/typealiases.html",[52,0.043,74,0.899,118,1.369,124,0.043,125,0.043,138,1.039,150,2.433,158,2.902,200,3.551,244,2.082,246,3.615,247,3.615,248,3.615,249,3.615,250,3.615]],["title/miscellaneous/variables.html",[244,1.316,251,2.619]],["body/miscellaneous/variables.html",[1,1.513,5,2.07,13,1.32,21,2.301,52,0.049,73,1.32,74,0.765,81,1.32,82,2.688,84,2.469,124,0.039,125,0.039,138,1.148,172,2.688,190,3.207,193,3.207,244,1.771,251,2.469,252,3.995,253,3.076]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":243,"title":{},"body":{"properties.html":{}}}],["0.0.2",{"_index":229,"title":{},"body":{"index.html":{}}}],["0.4.1",{"_index":231,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":226,"title":{},"body":{"index.html":{}}}],["1.1.1",{"_index":233,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":239,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":222,"title":{},"body":{"index.html":{}}}],["4",{"_index":240,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":241,"title":{},"body":{"overview.html":{}}}],["50",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["6/10",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["actual_component",{"_index":123,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["alias",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":221,"title":{},"body":{"index.html":{}}}],["async",{"_index":160,"title":{},"body":{"components/Markdown.html":{}}}],["attribute",{"_index":85,"title":{},"body":{"components/Code.html":{}}}],["available",{"_index":62,"title":{},"body":{"components/Code.html":{}}}],["below",{"_index":48,"title":{},"body":{"components/Code.html":{}}}],["both",{"_index":253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":70,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["class",{"_index":126,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}},"body":{"coverage.html":{}}}],["classes",{"_index":128,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code'},{'name",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["codeharness",{"_index":127,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":224,"title":{},"body":{"index.html":{}}}],["community",{"_index":236,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":219,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{}},"body":{"components/Code.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":115,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["componentharness",{"_index":145,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":87,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["const",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["containing",{"_index":18,"title":{},"body":{"components/Code.html":{}}}],["content",{"_index":39,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"index.html":{}}}],["contentcontainercomponentharness",{"_index":135,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{}}}],["coverage",{"_index":184,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["custom",{"_index":33,"title":{},"body":{"components/Code.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":207,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{}}}],["different",{"_index":41,"title":{},"body":{"components/Code.html":{}}}],["directive",{"_index":139,"title":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"coverage.html":{}}}],["directives",{"_index":54,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":14,"title":{},"body":{"components/Code.html":{}}}],["display",{"_index":8,"title":{},"body":{"components/Code.html":{}}}],["displayed",{"_index":19,"title":{},"body":{"components/Code.html":{}}}],["documentation",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["empty",{"_index":45,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"components/Markdown.html":{}}}],["emptystate",{"_index":57,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"components/Markdown.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":143,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"coverage.html":{}}}],["error",{"_index":44,"title":{},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"components/Markdown.html":{}}}],["error(error_both",{"_index":94,"title":{},"body":{"components/Code.html":{}}}],["error(error_none",{"_index":93,"title":{},"body":{"components/Code.html":{}}}],["error_both",{"_index":190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_none",{"_index":193,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorstate",{"_index":56,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/ErrorState.html":{},"components/Markdown.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":147,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/ErrorStateHarness.html":{},"coverage.html":{}}}],["example",{"_index":47,"title":{},"body":{"components/Code.html":{}}}],["examples",{"_index":49,"title":{},"body":{"components/Code.html":{}}}],["exportas",{"_index":141,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["extends",{"_index":134,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["fetch",{"_index":15,"title":{},"body":{"components/Code.html":{}}}],["fetching",{"_index":60,"title":{},"body":{"components/Code.html":{}}}],["file",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["function",{"_index":34,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":98,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":177,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":178,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getting",{"_index":210,"title":{"index.html":{}},"body":{}}],["harness",{"_index":131,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts",{"_index":130,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["highlighter",{"_index":32,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["highlightercore",{"_index":37,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":11,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["host",{"_index":64,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["hostselector",{"_index":137,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["httpresource.text",{"_index":108,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":107,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":113,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["ignored",{"_index":86,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["implements",{"_index":151,"title":{},"body":{"components/Markdown.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/Code.html":{}}}],["importing",{"_index":50,"title":{},"body":{"components/Code.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["inject(domsanitizer",{"_index":109,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["input",{"_index":82,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["input(\"github",{"_index":173,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":106,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":112,"title":{},"body":{"components/Code.html":{}}}],["inputs",{"_index":17,"title":{},"body":{"components/Code.html":{}}}],["instance",{"_index":35,"title":{},"body":{"components/Code.html":{}}}],["interacting",{"_index":132,"title":{},"body":{"classes/CodeHarness.html":{}}}],["lang",{"_index":23,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":25,"title":{},"body":{"components/Code.html":{}}}],["light",{"_index":174,"title":{},"body":{"components/Markdown.html":{}}}],["loaded",{"_index":180,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["loading",{"_index":43,"title":{},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{}}}],["loadingstate",{"_index":55,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":149,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":71,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["made",{"_index":235,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":170,"title":{},"body":{"components/Markdown.html":{}}}],["markdown",{"_index":118,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdownharness",{"_index":175,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":200,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":248,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["markedoptions",{"_index":250,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":125,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":153,"title":{},"body":{"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["metadata",{"_index":63,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["methods",{"_index":159,"title":{},"body":{"components/Markdown.html":{}}}],["micro",{"_index":214,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":244,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":182,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modules",{"_index":237,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":116,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["nested",{"_index":38,"title":{},"body":{"components/Code.html":{}}}],["new",{"_index":92,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["ng)angular",{"_index":213,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":161,"title":{},"body":{"components/Markdown.html":{}}}],["ok",{"_index":122,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["okstate",{"_index":121,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["oninit",{"_index":152,"title":{},"body":{"components/Markdown.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["options",{"_index":158,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":238,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":206,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":215,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":164,"title":{},"body":{"components/Markdown.html":{}}}],["parse",{"_index":95,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(code",{"_index":103,"title":{},"body":{"components/Code.html":{}}}],["parse(text",{"_index":163,"title":{},"body":{"components/Markdown.html":{}}}],["parse(this.res.value",{"_index":105,"title":{},"body":{"components/Code.html":{}}}],["parser",{"_index":171,"title":{},"body":{"components/Markdown.html":{}}}],["parsing",{"_index":249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["private",{"_index":78,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["programming",{"_index":24,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":181,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["properties",{"_index":75,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"properties.html":{}}}],["protected",{"_index":77,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["provide",{"_index":83,"title":{},"body":{"components/Code.html":{}}}],["provided",{"_index":172,"title":{},"body":{"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["providing",{"_index":59,"title":{},"body":{"components/Code.html":{}}}],["readonly",{"_index":76,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["reference",{"_index":223,"title":{},"body":{"index.html":{}}}],["registry",{"_index":234,"title":{},"body":{"index.html":{}}}],["remote",{"_index":16,"title":{},"body":{"components/Code.html":{}}}],["rendered",{"_index":169,"title":{},"body":{"components/Markdown.html":{}}}],["res",{"_index":79,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":157,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":154,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":156,"title":{},"body":{"components/Markdown.html":{}}}],["res.value",{"_index":155,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":72,"title":{},"body":{"components/Code.html":{}}}],["results",{"_index":124,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":102,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":162,"title":{},"body":{"components/Markdown.html":{}}}],["sanitize",{"_index":80,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":46,"title":{},"body":{"components/Code.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["set",{"_index":84,"title":{},"body":{"components/Code.html":{},"miscellaneous/variables.html":{}}}],["shiki",{"_index":29,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["shiki's",{"_index":36,"title":{},"body":{"components/Code.html":{}}}],["simple",{"_index":217,"title":{},"body":{"index.html":{}}}],["smart",{"_index":218,"title":{},"body":{"index.html":{}}}],["source",{"_index":9,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["src",{"_index":21,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":211,"title":{"index.html":{}},"body":{}}],["state",{"_index":69,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"index.html":{}}}],["state,[xpr",{"_index":119,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["state]'},{'name",{"_index":120,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["statements",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["static",{"_index":136,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["string",{"_index":13,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":28,"title":{},"body":{"components/Code.html":{}}}],["supports",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":68,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":10,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"index.html":{}}}],["table",{"_index":205,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":12,"title":{},"body":{"components/Code.html":{}}}],["template",{"_index":67,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["tests",{"_index":133,"title":{},"body":{"classes/CodeHarness.html":{}}}],["text",{"_index":96,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":30,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.code",{"_index":89,"title":{},"body":{"components/Code.html":{}}}],["this.lang",{"_index":99,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":179,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["this.md",{"_index":165,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.md",{"_index":166,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":167,"title":{},"body":{"components/Markdown.html":{}}}],["this.res.hasvalue",{"_index":104,"title":{},"body":{"components/Code.html":{}}}],["this.res.status",{"_index":111,"title":{},"body":{"components/Code.html":{}}}],["this.res.value",{"_index":168,"title":{},"body":{"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":97,"title":{},"body":{"components/Code.html":{}}}],["this.src",{"_index":90,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.theme",{"_index":100,"title":{},"body":{"components/Code.html":{}}}],["throw",{"_index":91,"title":{},"body":{"components/Code.html":{}}}],["tostring",{"_index":101,"title":{},"body":{"components/Code.html":{}}}],["tslib",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":138,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":245,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unable",{"_index":20,"title":{},"body":{"components/Code.html":{}}}],["url",{"_index":22,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["use",{"_index":31,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["used",{"_index":7,"title":{},"body":{"components/Code.html":{}}}],["using",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["valid",{"_index":26,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":81,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":114,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["variable",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":251,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":227,"title":{},"body":{"index.html":{}}}],["version",{"_index":242,"title":{},"body":{"properties.html":{}}}],["very",{"_index":216,"title":{},"body":{"index.html":{}}}],["xp)experimental",{"_index":212,"title":{},"body":{"index.html":{}}}],["xpr",{"_index":66,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["xpremptystate",{"_index":142,"title":{},"body":{"directives/EmptyState.html":{}}}],["xprerrorstate",{"_index":146,"title":{},"body":{"directives/ErrorState.html":{}}}],["xprloadingstate",{"_index":148,"title":{},"body":{"directives/LoadingState.html":{}}}],["xprng/.../code.ts",{"_index":252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xprng/.../markdown.ts",{"_index":247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code",{"_index":232,"title":{},"body":{"index.html":{}}}],["xprng/code\";importing",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts",{"_index":5,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["xprng/code/testing/code",{"_index":129,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":225,"title":{},"body":{"index.html":{}}}],["xprng/common\";directly",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["xprng/common/src/states.ts",{"_index":140,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":144,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/markdown",{"_index":230,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":150,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/testing/markdown",{"_index":176,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/vendor",{"_index":228,"title":{},"body":{"index.html":{}}}],["xprokstate",{"_index":183,"title":{},"body":{"directives/OkState.html":{}}}],["zoneless",{"_index":220,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n    \n        Description\n    \n    \n        Code\nThis component is used to display source code with syntax highlighting.\nIt can either take a string of code directly or fetch it from a remote source.\nInputs\n\ncode: A string containing the source code to be displayed. Unable to be used with src.\nsrc: A URL from which to fetch the source code. Unable to be used with code.\nlang: The programming language of the source code. This should be a valid language identifier supported by Shiki.\ntheme: The theme to use for syntax highlighting. This can be any theme supported by Shiki.\nhighlighter: A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\nNested Content\nThe component supports nested content for different states, loading, error, and empty states.\nSee the example below for how to use these states.\nExamples\nImporting the component\nExample :import { Code } from \"@xprng/code\";Importing states directives\nExample :import { LoadingState, ErrorState, EmptyState } from \"@xprng/common\";Directly providing code content\nExample :Fetching code from a remote source\nExample :Using nested content for different states\nExample :\n  Loading...\n  Error loading code.\n  No code available.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @switch (state()) {\n  @case (\"local\") {\n    \n  }\n  @case (\"error\") {\n    \n  }\n  @case (\"loading\") {\n    \n  }\n  @case (\"resolved\") {\n    \n  }\n  @default {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Private\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Protected\n                                state\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    Source code content as a string\nThis can be used to directly provide source code content.\nIf this is set, the src attribute will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const code = this.code() as string;\n    const src = this.src() as string;\n\n    if (!code && !src) {\n      throw new Error(ERROR_NONE);\n    }\n    if (code && src) {\n      throw new Error(ERROR_BOTH);\n    }\n\n    const parse = (text: string) =>\n      this.sanitize.bypassSecurityTrustHtml(\n        getHighlighter().codeToHtml(text, {\n          lang: this.lang(),\n          theme: this.theme(),\n        }).toString(),\n      );\n\n    if (code) return parse(code as string);\n\n    if (this.res.hasValue()) {\n      return parse(this.res.value());\n    }\n\n    return parse(\"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    A custom highlighter function (Should be an instance of Shiki's HighlighterCore).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n\n            \n                \n                    The programming language of the source code.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the source code content.\nThis is optional and can be used to fetch source code content from a URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.code()) return \"local\";\n    if (this.src()) return this.res.status();\n    return \"empty\";\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@switch (state()) {  @case (\"local\") {      }  @case (\"error\") {      }  @case (\"loading\") {      }  @case (\"resolved\") {      }  @default {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n            \n                Description\n            \n            \n                Harness for interacting with Code components in tests.\n\n            \n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-code\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (md()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                md\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.md()\n      ? this.parse(this.md()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The markdown content to be rendered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n\n            \n                \n                    The source URL of the markdown content.\nIf md is provided, this will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (md()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n\n            \n                \n                    The content projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n\n            \n                \n                    The content projected in case of \"md\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_BOTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            variable\n            ERROR_NONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XP)Experimental (NG)Angular Components\nMicro packages of very simple, yet, smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nComponent\nPackage\nReference\n\n\n\n\nCommon\n@xprng/common\n1.0.0\n\n\nVendor\n@xprng/vendor\n0.0.2\n\n\nMarkdown\n@xprng/markdown\n0.4.1\n\n\nCode\n@xprng/code\n1.1.1\n\n\n\nContent\n\nCommon\nState directives\n\n\nVendor\nShiki syntax highlighter registry\n\n\nMarkdown\nMarkdown component\n\n\nCode\nCode highlighter component\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ERROR_BOTH   (xprng/.../code.ts)\n                        \n                        \n                            ERROR_NONE   (xprng/.../code.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/code/src/code.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ERROR_BOTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input should be provided, not both.\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_NONE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Either 'code' or 'src' input must be provided. Neither is set.\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
