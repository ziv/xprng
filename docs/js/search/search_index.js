var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,0.901,1,1.081]],["body/components/Code.html",[0,0.946,1,1.931,2,0.788,3,0.386,4,1.727,5,0.689,6,0.689,7,0.322,8,0.56,9,0.386,10,0.657,11,0.072,12,1.318,13,1.388,14,1.173,15,1.968,16,1.968,17,1.968,18,0.386,19,0.788,20,3.294,21,2.354,22,1.968,23,3.157,24,3.025,25,2.354,26,1.531,27,1.531,28,2.354,29,2.758,30,2.013,31,2.013,32,2.479,33,2.479,34,0.885,35,2.175,36,2.479,37,1.507,38,1.507,39,2.479,40,2.206,41,1.173,42,1.173,43,1.173,44,0.885,45,1.531,46,1.507,47,1.507,48,1.507,49,1.173,50,1.507,51,1.507,52,3.186,53,1.582,54,1.173,55,1.507,56,1.507,57,1.507,58,1.507,59,1.507,60,1.507,61,0.885,62,1.808,63,1.173,64,1.507,65,0.885,66,1.507,67,2.323,68,1.507,69,1.173,70,2.323,71,1.808,72,1.507,73,0.885,74,1.507,75,1.507,76,1.173,77,1.173,78,1.173,79,0.885,80,0.885,81,1.808,82,1.507,83,1.507,84,0.885,85,1.173,86,1.507,87,1.507,88,1.507,89,1.012,90,0.689,91,0.322,92,0.689,93,0.689,94,0.689,95,0.56,96,0.56,97,0.858,98,0.788,99,0.689,100,0.56,101,0.689,102,0.689,103,0.657,104,0.689,105,1.173,106,1.173,107,0.176,108,1.808,109,0.689,110,1.531,111,0.689,112,0.657,113,0.322,114,0.267,115,0.657,116,0.858,117,1.173,118,0.267,119,0.657,120,0.267,121,0.657,122,0.386,123,0.689,124,0.022,125,0.022]],["title/components/Markdown.html",[0,0.901,112,1.081]],["body/components/Markdown.html",[0,1.074,1,0.483,2,0.951,3,0.483,4,1.008,5,0.863,6,0.863,7,0.403,9,0.483,10,0.793,11,0.072,12,1.462,13,1.526,14,1.416,18,0.483,19,0.951,20,3.29,21,2.611,23,3.038,25,2.472,26,1.8,27,1.8,28,2.3,30,2.008,31,2.008,32,2.611,33,2.472,35,1.15,36,2.083,39,2.472,40,2.083,41,1.416,42,1.416,43,1.416,45,1.8,49,1.416,54,1.416,62,1.416,63,1.416,71,0.863,77,2.083,78,1.416,81,1.416,89,1.167,90,0.863,91,0.403,92,0.863,93,0.863,94,0.863,95,0.701,96,0.701,97,0.793,98,0.951,99,2.083,101,0.863,102,0.863,103,0.793,104,0.863,105,1.416,106,1.416,107,0.22,108,2.083,109,0.863,110,1.8,111,0.863,112,1.899,113,0.403,114,0.334,115,0.793,116,1.008,117,1.416,118,0.334,119,0.793,120,0.334,121,0.793,122,0.483,123,0.863,124,0.027,125,0.027,126,0.701,127,3.734,128,2.314,129,2.314,130,2.314,131,2.314,132,3.177,133,1.82,134,1.82,135,1.82,136,1.82,137,1.82,138,1.109,139,1.109,140,1.109,141,1.82,142,1.82,143,1.82,144,1.109,145,1.109,146,1.109,147,1.416,148,1.82,149,0.701,150,1.109,151,1.109]],["title/directives/XprErrorState.html",[107,0.492,114,0.747]],["body/directives/XprErrorState.html",[3,1.092,4,1.092,7,0.91,9,1.092,10,1.647,11,0.07,12,1.758,13,1.926,89,1.092,91,0.91,97,1.647,103,1.886,107,0.801,113,0.91,114,1.215,115,1.833,116,1.758,118,1.01,119,1.647,120,1.01,121,1.647,122,1.926,124,0.049,125,0.049,152,1.311,153,2.551]],["title/directives/XprLoadingState.html",[107,0.492,118,0.747]],["body/directives/XprLoadingState.html",[3,1.092,4,1.092,7,0.91,9,1.092,10,1.647,11,0.07,12,1.758,13,1.926,89,1.092,91,0.91,97,1.647,103,1.886,107,0.801,113,0.91,114,1.01,115,1.647,116,1.758,118,1.215,119,1.833,120,1.01,121,1.647,122,1.926,124,0.049,125,0.049,152,1.311,153,2.551]],["title/directives/XprOkState.html",[107,0.492,120,0.747]],["body/directives/XprOkState.html",[3,1.092,4,1.092,7,0.91,9,1.092,10,1.647,11,0.07,12,1.758,13,1.926,89,1.092,91,0.91,97,1.647,103,1.886,107,0.801,113,0.91,114,1.01,115,1.647,116,1.758,118,1.01,119,1.647,120,1.215,121,1.833,122,1.926,124,0.049,125,0.049,152,1.311,153,2.551]],["title/coverage.html",[154,2.592]],["body/coverage.html",[0,1.279,1,1.176,7,0.98,8,2.478,11,0.069,53,1.841,69,2.1,98,2.173,100,1.706,107,0.778,112,1.176,114,0.813,118,0.813,120,0.813,124,0.052,125,0.052,126,2.226,149,1.706,152,2.05,154,2.1,155,2.1,156,2.699,157,2.699,158,2.699,159,3.92,160,4.502,161,4.502,162,2.1,163,2.699,164,2.699,165,2.699,166,2.699,167,2.699,168,2.699]],["title/dependencies.html",[169,1.328,170,2.311]],["body/dependencies.html",[11,0.071,91,1.13,95,1.966,96,1.966,124,0.057,125,0.057,170,2.421,171,3.111,172,4.585,173,3.111,174,3.111,175,3.111,176,3.111,177,3.855,178,3.111,179,3.111,180,3.111,181,3.111,182,3.111,183,3.111,184,3.111]],["title/index.html",[18,0.915,185,1.634,186,1.634]],["body/index.html",[0,1.17,1,1.404,2,2.059,11,0.063,112,1.404,124,0.058,125,0.058,169,2.036,187,3.222,188,3.222,189,3.222,190,3.222,191,3.222,192,3.222,193,3.222,194,3.222,195,3.939,196,3.222,197,3.222,198,3.222,199,3.222,200,3.222,201,3.222,202,3.222,203,3.222,204,3.222,205,3.222,206,3.222]],["title/license.html",[185,1.634,186,1.634,207,1.634]],["body/license.html",[11,0.048,85,2.556,124,0.048,125,0.048,147,1.891,155,1.891,207,1.891,208,2.43,209,3.72,210,2.43,211,2.43,212,2.43,213,3.284,214,2.43,215,2.43,216,2.43,217,2.43,218,2.43,219,2.43,220,3.284,221,4.521,222,2.43,223,2.43,224,2.43,225,3.72,226,2.43,227,3.284,228,2.43,229,2.43,230,2.43,231,2.43,232,2.43,233,2.43,234,2.43,235,2.43,236,2.43,237,3.284,238,2.43,239,2.43,240,2.43,241,2.43,242,2.43,243,2.43,244,2.43,245,3.284,246,3.284,247,2.43,248,2.43,249,2.43,250,2.43,251,2.43,252,2.43,253,2.43,254,2.43,255,2.43,256,2.43,257,2.43,258,2.43,259,2.43,260,2.43,261,2.43,262,2.43,263,2.43,264,2.43,265,2.43,266,2.43,267,2.43,268,2.43,269,2.43,270,2.43,271,2.43,272,2.43,273,2.43,274,2.43,275,2.43,276,2.43]],["title/modules.html",[277,2.592]],["body/modules.html",[11,0.063,124,0.063,125,0.063,277,2.907]],["title/overview.html",[278,2.592]],["body/overview.html",[2,1.908,11,0.062,113,1.325,124,0.062,125,0.062,278,2.84,279,3.649,280,3.649]],["title/properties.html",[19,1.553,169,1.328]],["body/properties.html",[11,0.066,19,1.919,124,0.063,125,0.063,281,3.671,282,3.671]],["title/miscellaneous/typealiases.html",[283,1.098,284,2.97]],["body/miscellaneous/typealiases.html",[8,2.123,11,0.059,18,1.463,53,2.112,76,2.614,98,2.265,100,2.553,124,0.059,125,0.059,126,2.123,149,2.553,283,1.756,285,3.359,286,4.039,287,3.359,288,4.039]],["title/miscellaneous/variables.html",[283,1.098,289,2.311]],["body/miscellaneous/variables.html",[11,0.07,18,1.336,29,2.385,30,1.938,31,1.938,35,1.938,53,1.997,124,0.056,125,0.056,162,2.385,283,1.603,289,2.385,290,3.066,291,3.066,292,3.066,293,3.066,294,3.066,295,3.066,296,3.066,297,3.066,298,3.066,299,3.066,300,3.066,301,3.066,302,3.066,303,3.066,304,3.066,305,3.066,306,3.066,307,3.066,308,3.066]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":282,"title":{},"body":{"properties.html":{}}}],["0.4.0",{"_index":200,"title":{},"body":{"index.html":{}}}],["0.4.1",{"_index":202,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["1.1.1",{"_index":204,"title":{},"body":{"index.html":{}}}],["2",{"_index":279,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":196,"title":{},"body":{"index.html":{}}}],["20.1.0",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":210,"title":{},"body":{"license.html":{}}}],["3",{"_index":280,"title":{},"body":{"overview.html":{}}}],["4.1.11",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["8.5.6",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":244,"title":{},"body":{"license.html":{}}}],["action",{"_index":269,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":123,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["alias",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":285,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":235,"title":{},"body":{"license.html":{}}}],["angular",{"_index":195,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":93,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["angular/compiler",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":91,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":95,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"dependencies.html":{}}}],["angular/router",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["arising",{"_index":273,"title":{},"body":{"license.html":{}}}],["associated",{"_index":222,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":40,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["authors",{"_index":262,"title":{},"body":{"license.html":{}}}],["await",{"_index":291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["binary",{"_index":304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":102,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["browser",{"_index":96,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"dependencies.html":{}}}],["charge",{"_index":217,"title":{},"body":{"license.html":{}}}],["claim",{"_index":265,"title":{},"body":{"license.html":{}}}],["class",{"_index":103,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["code'},{'name",{"_index":111,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["codeoptions",{"_index":100,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["coderesource",{"_index":22,"title":{},"body":{"components/Code.html":{}}}],["coderesource.error",{"_index":15,"title":{},"body":{"components/Code.html":{}}}],["coderesource.hasvalue",{"_index":17,"title":{},"body":{"components/Code.html":{}}}],["coderesource.isloading",{"_index":16,"title":{},"body":{"components/Code.html":{}}}],["common",{"_index":198,"title":{},"body":{"index.html":{}}}],["community",{"_index":206,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":193,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":109,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":45,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["conditions",{"_index":243,"title":{},"body":{"license.html":{}}}],["connection",{"_index":275,"title":{},"body":{"license.html":{}}}],["const",{"_index":49,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["contains",{"_index":302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content",{"_index":23,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["contract",{"_index":270,"title":{},"body":{"license.html":{}}}],["copies",{"_index":237,"title":{},"body":{"license.html":{}}}],["copy",{"_index":220,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":209,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":154,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createhighlightercore",{"_index":292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createonigurumaengine(import(\"shiki/wasm",{"_index":308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":75,"title":{},"body":{"components/Code.html":{}}}],["damages",{"_index":266,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":276,"title":{},"body":{"license.html":{}}}],["default",{"_index":30,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["delal",{"_index":224,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":170,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["directive",{"_index":107,"title":{"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{}}}],["directives",{"_index":113,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"overview.html":{}}}],["directly",{"_index":37,"title":{},"body":{"components/Code.html":{}}}],["distribute",{"_index":233,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":155,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["domsanitizer",{"_index":94,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["element",{"_index":106,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["engine",{"_index":307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":115,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["event",{"_index":261,"title":{},"body":{"license.html":{}}}],["export",{"_index":97,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["exportas",{"_index":153,"title":{},"body":{"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["express",{"_index":252,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":62,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{}}}],["files",{"_index":223,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":257,"title":{},"body":{"license.html":{}}}],["fn",{"_index":50,"title":{},"body":{"components/Code.html":{}}}],["following",{"_index":242,"title":{},"body":{"license.html":{}}}],["free",{"_index":216,"title":{},"body":{"license.html":{}}}],["function",{"_index":76,"title":{},"body":{"components/Code.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":240,"title":{},"body":{"license.html":{}}}],["getting",{"_index":185,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":215,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":214,"title":{},"body":{"license.html":{}}}],["highlighter",{"_index":53,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["highlighting",{"_index":87,"title":{},"body":{"components/Code.html":{}}}],["holders",{"_index":263,"title":{},"body":{"license.html":{}}}],["host",{"_index":10,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["html",{"_index":105,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["httpresource",{"_index":92,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["httpresource.text",{"_index":42,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["https://marked.js.org/using_advanced#options",{"_index":151,"title":{},"body":{"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":72,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":69,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["ignored",{"_index":41,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["implied",{"_index":253,"title":{},"body":{"license.html":{}}}],["import",{"_index":89,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["import(\"@shikijs/langs/javascript",{"_index":298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import(\"@shikijs/themes/material",{"_index":295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import(\"@shikijs/themes/nord",{"_index":294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('@shikijs/langs/css",{"_index":299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('@shikijs/langs/html",{"_index":300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["include",{"_index":74,"title":{},"body":{"components/Code.html":{}}}],["included",{"_index":247,"title":{},"body":{"license.html":{}}}],["including",{"_index":227,"title":{},"body":{"license.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["inject",{"_index":90,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(domsanitizer",{"_index":78,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inlined",{"_index":305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":32,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["input(\"javascript",{"_index":64,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":83,"title":{},"body":{"components/Code.html":{}}}],["kind",{"_index":251,"title":{},"body":{"license.html":{}}}],["lang",{"_index":24,"title":{},"body":{"components/Code.html":{}}}],["langs",{"_index":297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":67,"title":{},"body":{"components/Code.html":{}}}],["legend",{"_index":104,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["liability",{"_index":267,"title":{},"body":{"license.html":{}}}],["liable",{"_index":264,"title":{},"body":{"license.html":{}}}],["license",{"_index":207,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":228,"title":{},"body":{"license.html":{}}}],["limited",{"_index":254,"title":{},"body":{"license.html":{}}}],["literal",{"_index":288,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["loading",{"_index":119,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["made",{"_index":205,"title":{},"body":{"index.html":{}}}],["markdown",{"_index":112,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["markdownoptions",{"_index":149,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["markdownsource",{"_index":131,"title":{},"body":{"components/Markdown.html":{}}}],["markdownsource.error",{"_index":128,"title":{},"body":{"components/Markdown.html":{}}}],["markdownsource.hasvalue",{"_index":130,"title":{},"body":{"components/Markdown.html":{}}}],["markdownsource.isloading",{"_index":129,"title":{},"body":{"components/Markdown.html":{}}}],["marked",{"_index":77,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["markedoptions",{"_index":148,"title":{},"body":{"components/Markdown.html":{}}}],["matching",{"_index":125,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":127,"title":{},"body":{"components/Markdown.html":{}}}],["merchantability",{"_index":256,"title":{},"body":{"license.html":{}}}],["merge",{"_index":231,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["micro",{"_index":189,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":283,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":208,"title":{},"body":{"license.html":{}}}],["modify",{"_index":230,"title":{},"body":{"license.html":{}}}],["modules",{"_index":277,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":110,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["new",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["ng)angular",{"_index":188,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":260,"title":{},"body":{"license.html":{}}}],["notice",{"_index":245,"title":{},"body":{"license.html":{}}}],["null",{"_index":143,"title":{},"body":{"components/Markdown.html":{}}}],["obtaining",{"_index":219,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":121,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["optional",{"_index":82,"title":{},"body":{"components/Code.html":{}}}],["options",{"_index":25,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["opts",{"_index":99,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["otherwise",{"_index":272,"title":{},"body":{"license.html":{}}}],["out",{"_index":274,"title":{},"body":{"license.html":{}}}],["overview",{"_index":278,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":169,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":190,"title":{},"body":{"index.html":{}}}],["parsing",{"_index":150,"title":{},"body":{"components/Markdown.html":{}}}],["particular",{"_index":258,"title":{},"body":{"license.html":{}}}],["permission",{"_index":213,"title":{},"body":{"license.html":{}}}],["permit",{"_index":238,"title":{},"body":{"license.html":{}}}],["perry",{"_index":212,"title":{},"body":{"license.html":{}}}],["person",{"_index":218,"title":{},"body":{"license.html":{}}}],["persons",{"_index":239,"title":{},"body":{"license.html":{}}}],["portions",{"_index":249,"title":{},"body":{"license.html":{}}}],["postcss",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":26,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["programming",{"_index":66,"title":{},"body":{"components/Code.html":{}}}],["properties",{"_index":19,"title":{"properties.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"properties.html":{}}}],["protected",{"_index":21,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["provide",{"_index":38,"title":{},"body":{"components/Code.html":{}}}],["provided",{"_index":147,"title":{},"body":{"components/Markdown.html":{},"license.html":{}}}],["publish",{"_index":232,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":259,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":20,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["reference",{"_index":197,"title":{},"body":{"index.html":{}}}],["render",{"_index":63,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["rendered",{"_index":141,"title":{},"body":{"components/Markdown.html":{}}}],["restriction",{"_index":226,"title":{},"body":{"license.html":{}}}],["results",{"_index":124,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":54,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["rights",{"_index":229,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["sanitize",{"_index":27,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":71,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["sell",{"_index":236,"title":{},"body":{"license.html":{}}}],["set",{"_index":39,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["shall",{"_index":246,"title":{},"body":{"license.html":{}}}],["shiki",{"_index":52,"title":{},"body":{"components/Code.html":{}}}],["shiki/wasm",{"_index":301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":191,"title":{},"body":{"index.html":{}}}],["smart",{"_index":192,"title":{},"body":{"index.html":{}}}],["software",{"_index":221,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["src",{"_index":28,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["started",{"_index":186,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":122,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["state,[xpr",{"_index":116,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["state]'},{'name",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["statements",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":35,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["style.display",{"_index":101,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["subject",{"_index":241,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":234,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":248,"title":{},"body":{"license.html":{}}}],["supported",{"_index":70,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":86,"title":{},"body":{"components/Code.html":{}}}],["table",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["tailwindcss/postcss",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["template",{"_index":14,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["text",{"_index":132,"title":{},"body":{"components/Markdown.html":{}}}],["theme",{"_index":29,"title":{},"body":{"components/Code.html":{},"miscellaneous/variables.html":{}}}],["themes",{"_index":293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.code",{"_index":46,"title":{},"body":{"components/Code.html":{}}}],["this.coderesource.hasvalue",{"_index":47,"title":{},"body":{"components/Code.html":{}}}],["this.coderesource.value",{"_index":48,"title":{},"body":{"components/Code.html":{}}}],["this.lang",{"_index":57,"title":{},"body":{"components/Code.html":{}}}],["this.markdownsource.hasvalue",{"_index":134,"title":{},"body":{"components/Markdown.html":{}}}],["this.markdownsource.value",{"_index":135,"title":{},"body":{"components/Markdown.html":{}}}],["this.md",{"_index":133,"title":{},"body":{"components/Markdown.html":{}}}],["this.options()?.highlighter",{"_index":51,"title":{},"body":{"components/Code.html":{}}}],["this.options()?.lang",{"_index":56,"title":{},"body":{"components/Code.html":{}}}],["this.options()?.marked",{"_index":136,"title":{},"body":{"components/Markdown.html":{}}}],["this.options()?.theme",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["this.sanitize.bypasssecuritytrusthtml(fn(code",{"_index":55,"title":{},"body":{"components/Code.html":{}}}],["this.sanitize.bypasssecuritytrusthtml(marked.parse(text",{"_index":137,"title":{},"body":{"components/Markdown.html":{}}}],["this.src",{"_index":43,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.theme",{"_index":59,"title":{},"body":{"components/Code.html":{}}}],["tort",{"_index":271,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":60,"title":{},"body":{"components/Code.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["tslib",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":98,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":284,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":142,"title":{},"body":{"components/Markdown.html":{}}}],["url",{"_index":81,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["use",{"_index":85,"title":{},"body":{"components/Code.html":{},"license.html":{}}}],["used",{"_index":36,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["valid",{"_index":68,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":31,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":108,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["variable",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":289,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":281,"title":{},"body":{"properties.html":{}}}],["warranties",{"_index":255,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":250,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":268,"title":{},"body":{"license.html":{}}}],["without",{"_index":225,"title":{},"body":{"license.html":{}}}],["xp)experimental",{"_index":187,"title":{},"body":{"index.html":{}}}],["xpr",{"_index":13,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{}}}],["xprerrorstate",{"_index":114,"title":{"directives/XprErrorState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{}}}],["xprloadingstate",{"_index":118,"title":{"directives/XprLoadingState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{}}}],["xprng/.../code.ts",{"_index":286,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/.../markdown.ts",{"_index":287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/.../shiki.ts",{"_index":290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xprng/code",{"_index":203,"title":{},"body":{"index.html":{}}}],["xprng/code/src/code.ts",{"_index":8,"title":{},"body":{"components/Code.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/code/src/code.ts:38",{"_index":34,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:44",{"_index":80,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:51",{"_index":65,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:58",{"_index":84,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:64",{"_index":73,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:74",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:86",{"_index":44,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:87",{"_index":79,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/shiki.ts",{"_index":162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["xprng/common",{"_index":199,"title":{},"body":{"index.html":{}}}],["xprng/common/src/states.ts",{"_index":152,"title":{},"body":{"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{}}}],["xprng/markdown",{"_index":201,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":126,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/src/markdown.ts:36",{"_index":140,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:42",{"_index":146,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:47",{"_index":144,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:57",{"_index":138,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:66",{"_index":139,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:67",{"_index":145,"title":{},"body":{"components/Markdown.html":{}}}],["xprokstate",{"_index":120,"title":{"directives/XprOkState.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"directives/XprErrorState.html":{},"directives/XprLoadingState.html":{},"directives/XprOkState.html":{},"coverage.html":{}}}],["ziv",{"_index":211,"title":{},"body":{"license.html":{}}}],["zoneless",{"_index":194,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @if (code()) {\n  \n} @else if (codeResource.error()) {\n  \n} @else if (codeResource.isLoading()) {\n  \n} @else if (codeResource.hasValue()) {\n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Protected\n                                    Readonly\n                                codeResource\n                            \n                            \n                                    Protected\n                                    Readonly\n                                content\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:38\n                        \n                    \n\n            \n                \n                    Source code content as a string\nThis can be used to directly provide source code content.\nIf this is set, the src attribute will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        codeResource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let code = this.code() ?? \"\";\n    if (!code && this.codeResource.hasValue()) {\n      code = this.codeResource.value() ?? \"\";\n    }\n    const fn = (this.options()?.highlighter ?? shiki) as Highlighter;\n    return this.sanitize.bypassSecurityTrustHtml(fn(code as string, {\n      lang: this.options()?.lang ?? this.lang(),\n      theme: this.options()?.theme ?? this.theme(),\n    }).toString());\n  })\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:74\n                        \n                    \n\n            \n                \n                    If attribute code is set, it will be used as the source content.\nIf attribute src is set, it will be used to fetch the source content.\nIf neither is set, the component will not render any content.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:51\n                        \n                    \n\n            \n                \n                    The programming language of the source code.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:64\n                        \n                    \n\n            \n                \n                    Options for the code content.\nThis can include a custom highlighter function and marked options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:44\n                        \n                    \n\n            \n                \n                    The source URL of the source code content.\nThis is optional and can be used to fetch source code content from a URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:58\n                        \n                    \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, computed, inject, input,} from \"@angular/core\";\nimport {httpResource} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport shiki from './shiki';\n\nexport type Highlighter = (input: string, opts: { theme: string; lang: string; }) => string;\n\nexport type CodeOptions = {\n  highlighter: Highlighter;\n  theme?: string;\n  lang?: string;\n};\n\n@Component({\n  selector: \"xpr-code\",\n  host: {\n    \"[style.display]\": '\"block\"',\n    class: \"xpr-code\",\n  },\n  template: `\n    @if (code()) {\n      \n    } @else if (codeResource.error()) {\n      \n    } @else if (codeResource.isLoading()) {\n      \n    } @else if (codeResource.hasValue()) {\n      \n    }\n  `,\n})\nexport class Code {\n  /**\n   * Source code content as a string\n   * This can be used to directly provide source code content.\n   * If this is set, the `src` attribute will be ignored.\n   */\n  readonly code = input();\n\n  /**\n   * The source URL of the source code content.\n   * This is optional and can be used to fetch source code content from a URL.\n   */\n  readonly src = input();\n\n  /**\n   * The programming language of the source code.\n   * This should be a valid language identifier supported by Shiki.\n   * @see https://shiki.style/languages\n   */\n  readonly lang = input(\"javascript\");\n\n  /**\n   * The theme to use for syntax highlighting.\n   * This can be any theme supported by Shiki.\n   * @see https://shiki.style/themes\n   */\n  readonly theme = input(\"nord\");\n\n  /**\n   * Options for the code content.\n   * This can include a custom highlighter function and marked options.\n   */\n  readonly options = input();\n\n  //\n\n  /**\n   * If attribute `code` is set, it will be used as the source content.\n   * If attribute `src` is set, it will be used to fetch the source content.\n   * If neither is set, the component will not render any content.\n   * @protected\n   */\n  protected readonly content = computed(() => {\n    let code = this.code() ?? \"\";\n    if (!code && this.codeResource.hasValue()) {\n      code = this.codeResource.value() ?? \"\";\n    }\n    const fn = (this.options()?.highlighter ?? shiki) as Highlighter;\n    return this.sanitize.bypassSecurityTrustHtml(fn(code as string, {\n      lang: this.options()?.lang ?? this.lang(),\n      theme: this.options()?.theme ?? this.theme(),\n    }).toString());\n  });\n\n  protected readonly codeResource = httpResource.text(() => this.src());\n  private readonly sanitize = inject(DomSanitizer);\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (code()) {  } @else if (codeResource.error()) {  } @else if (codeResource.isLoading()) {  } @else if (codeResource.hasValue()) {  }'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'}];\n    var DIRECTIVES = [{'name': 'XprErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'XprLoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'XprOkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (md()) {\n  \n} @else if (markdownSource.error()) {\n  \n} @else if (markdownSource.isLoading()) {\n  \n} @else if (markdownSource.hasValue()) {\n  \n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                markdown\n                            \n                            \n                                    Protected\n                                    Readonly\n                                markdownSource\n                            \n                            \n                                    Readonly\n                                md\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        markdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let text = this.md() ?? \"\";\n    if (!text && this.markdownSource.hasValue()) {\n      text = this.markdownSource.value() ?? \"\";\n    }\n    const opts = this.options()?.marked ?? {};\n    return this.sanitize.bypassSecurityTrustHtml(marked.parse(text, opts) as string);\n  })\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:57\n                        \n                    \n\n            \n                \n                    If attribute md is set, it will be used as the markdown content.\nIf attribute src is set, it will be used to fetch the markdown content.\nIf neither is set, the component will not render any content.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        markdownSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:36\n                        \n                    \n\n            \n                \n                    The markdown content to be rendered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input | undefined | null>()\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:47\n                        \n                    \n\n            \n                \n                    Options for the markdown content.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:42\n                        \n                    \n\n            \n                \n                    The source URL of the markdown content.\nIf md is provided, this will be ignored.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, computed, inject, input,} from \"@angular/core\";\nimport {httpResource} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {marked, type MarkedOptions} from \"marked\";\n\nexport type MarkdownOptions = {\n  /**\n   * Marked options for parsing markdown.\n   * @see https://marked.js.org/using_advanced#options\n   */\n  marked: MarkedOptions;\n};\n\n@Component({\n  selector: \"xpr-markdown\",\n  host: {\n    \"[style.display]\": '\"block\"',\n    class: \"xpr-markdown\",\n  },\n  template: `\n    @if (md()) {\n      \n    } @else if (markdownSource.error()) {\n      \n    } @else if (markdownSource.isLoading()) {\n      \n    } @else if (markdownSource.hasValue()) {\n      \n    }\n  `,\n})\nexport class Markdown {\n  /**\n   * The markdown content to be rendered.\n   */\n  readonly md = input();\n\n  /**\n   * The source URL of the markdown content.\n   * If `md` is provided, this will be ignored.\n   */\n  readonly src = input();\n\n  /**\n   * Options for the markdown content.\n   */\n  readonly options = input | undefined | null>();\n\n  //\n\n  /**\n   * If attribute `md` is set, it will be used as the markdown content.\n   * If attribute `src` is set, it will be used to fetch the markdown content.\n   * If neither is set, the component will not render any content.\n   * @protected\n   */\n  protected readonly markdown = computed(() => {\n    let text = this.md() ?? \"\";\n    if (!text && this.markdownSource.hasValue()) {\n      text = this.markdownSource.value() ?? \"\";\n    }\n    const opts = this.options()?.marked ?? {};\n    return this.sanitize.bypassSecurityTrustHtml(marked.parse(text, opts) as string);\n  });\n\n  protected readonly markdownSource = httpResource.text(() => this.src());\n  private readonly sanitize = inject(DomSanitizer);\n}\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (md()) {  } @else if (markdownSource.error()) {  } @else if (markdownSource.isLoading()) {  } @else if (markdownSource.hasValue()) {  }'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'}];\n    var DIRECTIVES = [{'name': 'XprErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'XprLoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'XprOkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/XprErrorState.html":{"url":"directives/XprErrorState.html","title":"directive - XprErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  XprErrorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive} from '@angular/core';\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class XprLoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class XprErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class XprOkState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/XprLoadingState.html":{"url":"directives/XprLoadingState.html","title":"directive - XprLoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  XprLoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive} from '@angular/core';\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class XprLoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class XprErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class XprOkState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/XprOkState.html":{"url":"directives/XprOkState.html","title":"directive - XprOkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  XprOkState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive} from '@angular/core';\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class XprLoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class XprErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class XprOkState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            type alias\n            CodeOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        xprng/code/src/code.ts\n            \n            type alias\n            Highlighter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        xprng/code/src/shiki.ts\n            \n            variable\n            highlighter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            XprErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            XprLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            XprOkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^20.1.0\n        \n            @angular/compiler : ^20.1.0\n        \n            @angular/core : ^20.1.0\n        \n            @angular/forms : ^20.1.0\n        \n            @angular/platform-browser : ^20.1.0\n        \n            @angular/router : ^20.1.0\n        \n            @tailwindcss/postcss : ^4.1.11\n        \n            postcss : ^8.5.6\n        \n            rxjs : ~7.8.0\n        \n            tailwindcss : ^4.1.11\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XP)Experimental (NG)Angular Components\nMicro packages of simple and smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nComponent\nPackage\nReference\n\n\n\n\nCommon\n@xprng/common\n0.4.0\n\n\nMarkdown\n@xprng/markdown\n0.4.1\n\n\nCode\n@xprng/code\n1.1.1\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright 2025 to Ziv Perry.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to delal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodeOptions   (xprng/.../code.ts)\n                        \n                        \n                            Highlighter   (xprng/.../code.ts)\n                        \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/code/src/code.ts\n    \n    \n        \n            \n                \n                    \n                    CodeOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Highlighter\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            highlighter   (xprng/.../shiki.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/code/src/shiki.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : await createHighlighterCore({\n  themes: [\n    import(\"@shikijs/themes/nord\"),\n    import(\"@shikijs/themes/material-theme-ocean\"),\n  ],\n  langs: [\n    import(\"@shikijs/langs/javascript\"),\n    // import('@shikijs/langs/css'),\n    // import('@shikijs/langs/html'),\n  ],\n  // `shiki/wasm` contains the wasm binary inlined as base64 string.\n  engine: createOnigurumaEngine(import(\"shiki/wasm\")),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
