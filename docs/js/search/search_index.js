var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,1.18,1,1.18]],["body/components/Code.html",[0,0.975,1,2.112,2,0.994,3,0.217,4,0.899,5,0.816,6,0.816,7,0.184,8,0.816,9,1.385,10,1.805,11,0.441,12,0.749,13,0.054,14,1.569,15,0.805,16,1.385,17,2.625,18,2.248,19,2.248,20,3.026,21,0.853,22,0.853,23,2.248,24,1.521,25,0.292,26,0.496,27,3.752,28,2.588,29,2.423,30,2.381,31,2.649,32,1.805,33,2.588,34,1.805,35,2.903,36,1.385,37,2.126,38,1.385,39,1.477,40,1.017,41,1.385,42,1.017,43,1.385,44,1.123,45,1.017,46,0.816,47,2.126,48,0.496,49,1.805,50,0.816,51,1.369,52,3.442,53,1.017,54,2.649,55,1.725,56,1.725,57,1.725,58,1.725,59,1.385,60,1.805,61,2.649,62,2.759,63,1.725,64,2.588,65,1.385,66,1.385,67,1.725,68,1.017,69,1.017,70,1.782,71,1.725,72,1.725,73,1.725,74,0.994,75,1.725,76,1.017,77,1.725,78,2.649,79,1.725,80,1.385,81,2.649,82,2.381,83,2.126,84,1.725,85,1.385,86,1.017,87,1.385,88,1.017,89,1.017,90,2.126,91,1.725,92,1.725,93,1.017,94,1.161,95,1.161,96,1.385,97,1.725,98,0.634,99,0.816,100,0.385,101,0.816,102,0.816,103,0.816,104,0.684,105,0.684,106,1.017,107,1.017,108,0.816,109,0.816,110,0.816,111,0.089,112,0.217,113,0.816,114,1.017,115,1.017,116,1.017,117,0.816,118,0.684,119,0.816,120,0.994,121,1.017,122,0.816,123,0.816,124,1.385,125,1.385,126,0.217,127,2.126,128,0.816,129,0.816,130,0.653,131,0.336,132,0.336,133,0.496,134,1.149,135,1.805,136,0.336,137,0.336,138,0.336,139,0.749,140,0.253,141,0.816,142,0.017,143,0.017]],["title/classes/CodeHarness.html",[111,0.14,144,1.83]],["body/classes/CodeHarness.html",[1,1.71,3,0.644,4,0.644,7,0.547,13,0.052,15,0.842,24,1.664,25,0.866,26,1.133,39,1.664,44,1.141,48,0.866,51,1.664,98,0.644,111,0.155,112,0.644,142,0.039,143,0.039,144,2.653,145,1.307,146,3.741,147,1.307,148,1.965,149,3.527,150,4.393,151,4.393,152,2.19,153,2.19,154,3.741,155,2.653,156,3.013,157,3.165,158,3.013,159,2.028,160,1.502]],["title/directives/EmptyState.html",[126,0.581,132,0.898]],["body/directives/EmptyState.html",[3,0.567,4,0.567,7,0.481,11,1.151,12,1.921,13,0.053,14,2.011,15,1.08,21,1.184,22,1.184,98,0.567,100,1.004,111,0.257,112,0.946,126,0.99,131,0.876,132,1.196,133,1.332,134,2.011,136,0.876,137,0.876,138,0.876,139,1.788,140,1.257,142,0.035,143,0.035,161,1.322,162,2.668,163,2.084,164,1.527,165,1.527,166,1.527]],["title/classes/EmptyStateHarness.html",[111,0.14,167,1.355]],["body/classes/EmptyStateHarness.html",[3,0.644,4,0.644,7,0.547,13,0.053,15,0.996,21,0.866,22,0.866,24,1.141,25,0.866,26,1.133,39,1.141,44,1.141,48,0.866,51,1.141,98,0.644,111,0.226,112,0.939,133,1.133,140,1.159,142,0.039,143,0.039,145,1.307,147,1.307,148,2.323,152,2.411,153,2.411,160,1.502,167,1.965,168,2.27,169,3.254,170,3.013,171,1.502,172,1.502]],["title/directives/ErrorState.html",[126,0.581,136,0.898]],["body/directives/ErrorState.html",[3,0.567,4,0.567,7,0.481,11,1.151,12,1.921,13,0.053,14,2.011,15,1.08,21,1.332,22,1.184,98,0.567,100,1.004,111,0.257,112,0.946,126,0.99,131,0.876,132,0.876,133,1.184,134,2.011,136,1.196,137,0.876,138,0.876,139,1.788,140,1.257,142,0.035,143,0.035,161,1.322,162,2.668,163,1.527,164,1.527,165,2.084,166,1.527]],["title/classes/ErrorStateHarness.html",[111,0.14,171,1.355]],["body/classes/ErrorStateHarness.html",[3,0.644,4,0.644,7,0.547,13,0.053,15,0.996,21,1.133,22,0.866,24,1.141,25,0.866,26,1.133,39,1.141,44,1.141,48,0.866,51,1.141,98,0.644,111,0.226,112,0.939,133,0.866,140,1.159,142,0.039,143,0.039,145,1.307,147,1.307,148,2.323,152,2.411,153,2.411,159,2.028,160,1.502,167,1.502,168,2.27,169,3.254,171,1.965,172,1.502]],["title/directives/LoadingState.html",[126,0.581,137,0.898]],["body/directives/LoadingState.html",[3,0.567,4,0.567,7,0.481,11,1.151,12,1.921,13,0.053,14,2.011,15,1.08,21,1.184,22,1.332,98,0.567,100,1.004,111,0.257,112,0.946,126,0.99,131,0.876,132,0.876,133,1.184,134,2.011,136,0.876,137,1.196,138,0.876,139,1.788,140,1.257,142,0.035,143,0.035,161,1.322,162,2.668,163,1.527,164,2.084,165,1.527,166,1.527]],["title/classes/LoadingStateHarness.html",[111,0.14,172,1.355]],["body/classes/LoadingStateHarness.html",[3,0.644,4,0.644,7,0.547,13,0.053,15,0.996,21,0.866,22,1.133,24,1.141,25,0.866,26,1.133,39,1.141,44,1.141,48,0.866,51,1.141,98,0.644,111,0.226,112,0.939,133,0.866,140,1.159,142,0.039,143,0.039,145,1.307,147,1.307,148,2.323,152,2.411,153,2.411,160,1.502,167,1.502,168,2.27,169,3.254,171,1.502,172,1.965,173,3.013]],["title/components/Markdown.html",[0,1.18,130,1.03]],["body/components/Markdown.html",[0,1.073,1,0.503,2,1.109,3,0.248,4,0.528,5,0.931,6,0.931,7,0.21,9,1.547,10,1.985,11,0.503,12,0.836,13,0.054,14,1.66,15,0.848,16,1.547,17,2.574,21,0.554,22,0.554,24,1.384,25,0.333,26,0.554,27,3.757,28,2.934,29,2.104,32,1.985,33,2.768,34,1.985,35,2.566,36,1.547,37,2.312,38,1.547,39,1.504,41,1.547,43,1.547,44,1.09,46,0.931,47,2.312,48,0.71,49,0.931,50,0.931,51,1.384,52,3.516,59,1.547,60,2.312,62,1.985,64,2.312,65,1.547,66,1.547,70,2.32,74,1.658,83,0.931,85,1.547,87,1.547,90,1.547,94,1.296,95,1.296,96,1.547,98,0.683,99,0.931,100,0.439,101,0.931,102,0.931,103,0.931,104,0.78,105,0.78,108,0.931,109,0.931,110,0.931,111,0.099,112,0.412,113,0.931,117,1.547,118,1.663,119,1.547,120,1.986,122,0.931,123,0.931,124,1.547,125,1.547,126,0.248,127,2.312,128,0.931,129,0.931,130,1.658,131,0.383,132,0.383,133,0.554,134,1.25,135,1.985,136,0.383,137,0.383,138,0.383,139,0.836,140,0.288,141,0.931,142,0.019,143,0.019,155,2.756,174,0.78,175,2.472,176,2.472,177,2.472,178,2.472,179,2.472,180,1.159,181,1.159,182,2.88,183,1.927,184,1.159,185,1.159,186,1.927,187,1.159,188,1.927,189,1.547,190,1.159,191,1.159,192,1.159,193,1.927,194,1.927,195,1.159,196,1.547,197,1.159,198,0.931,199,1.159,200,0.78,201,1.159,202,1.159,203,1.159,204,1.159,205,1.159,206,1.159]],["title/classes/MarkdownHarness.html",[111,0.14,207,1.83]],["body/classes/MarkdownHarness.html",[3,0.575,4,0.575,7,0.488,13,0.053,15,0.781,17,2.459,20,3.575,24,1.572,25,0.773,26,1.05,29,2.564,39,1.572,44,1.019,48,0.773,51,1.572,98,0.575,111,0.139,112,0.575,120,2.564,130,1.384,142,0.036,143,0.036,145,1.167,147,1.167,148,1.821,149,3.332,152,2.069,153,2.069,154,3.575,155,2.459,157,2.934,159,1.81,160,1.341,207,2.459,208,3.575,209,4.151,210,4.151,211,2.69,212,4.453,213,4.453,214,3.655,215,2.69]],["title/directives/OkState.html",[126,0.581,138,0.898]],["body/directives/OkState.html",[3,0.567,4,0.567,7,0.481,11,1.151,12,1.921,13,0.053,14,2.011,15,1.08,21,1.184,22,1.184,98,0.567,100,1.004,111,0.257,112,0.946,126,0.99,131,0.876,132,0.876,133,1.184,134,2.011,136,0.876,137,0.876,138,1.196,139,2.011,140,1.257,142,0.035,143,0.035,161,1.322,162,2.668,163,1.527,164,1.527,165,1.527,166,2.084]],["title/coverage.html",[216,2.956]],["body/coverage.html",[0,1.646,1,1.233,7,0.516,8,2.282,13,0.052,48,1.09,80,2.282,111,0.245,118,1.913,126,0.973,130,1.076,132,0.939,136,0.939,137,0.939,138,0.939,142,0.037,143,0.037,144,1.913,146,2.282,147,2.059,161,2.27,167,1.417,168,2.458,171,1.417,172,1.417,174,2.552,200,1.913,207,1.913,208,2.282,216,2.282,217,2.282,218,2.842,219,2.842,220,2.842,221,5.063,222,2.842,223,4.554,224,4.269,225,2.842,226,2.842,227,2.842,228,2.842,229,2.842,230,2.842,231,2.842,232,2.842,233,2.842]],["title/dependencies.html",[234,1.538,235,2.619]],["body/dependencies.html",[13,0.053,100,1.321,104,2.347,105,2.347,142,0.042,143,0.042,235,2.801,236,3.489,237,3.489,238,3.489,239,5.154,240,3.489,241,3.489,242,3.489,243,3.489,244,4.328,245,3.489,246,3.489,247,3.489,248,3.489,249,3.489,250,3.489,251,3.489]],["title/index.html",[25,0.657,252,1.835,253,1.835]],["body/index.html",[0,1.98,1,1.98,2,2.389,13,0.045,29,1.878,30,3.33,74,1.878,82,2.618,95,2.195,130,1.728,131,1.077,140,0.811,142,0.041,143,0.041,189,2.618,234,2.195,254,3.262,255,3.262,256,3.262,257,3.262,258,3.262,259,3.262,260,3.262,261,3.262,262,3.262,263,3.262,264,3.262,265,4.149,266,3.262,267,3.262,268,4.149,269,3.262,270,3.262,271,4.149,272,3.262,273,3.262,274,3.262,275,3.262,276,3.262,277,3.262,278,4.149,279,3.262,280,3.262]],["title/license.html",[252,1.835,253,1.835,281,1.835]],["body/license.html",[13,0.037,94,2.52,120,1.606,142,0.037,143,0.037,217,2.239,281,2.239,282,2.79,283,4.229,284,2.79,285,2.79,286,2.79,287,3.746,288,2.79,289,2.79,290,2.79,291,2.79,292,2.79,293,2.79,294,3.746,295,5.107,296,2.79,297,2.79,298,2.79,299,4.229,300,2.79,301,3.746,302,2.79,303,2.79,304,2.79,305,2.79,306,2.79,307,2.79,308,2.79,309,2.79,310,2.79,311,3.746,312,2.79,313,2.79,314,2.79,315,2.79,316,2.79,317,2.79,318,2.79,319,3.746,320,3.746,321,2.79,322,2.79,323,2.79,324,2.79,325,2.79,326,2.79,327,2.79,328,2.79,329,2.79,330,2.79,331,2.79,332,2.79,333,2.79,334,2.79,335,2.79,336,2.79,337,2.79,338,2.79,339,2.79,340,2.79,341,2.79,342,2.79,343,2.79,344,2.79,345,2.79,346,2.79,347,2.79,348,2.79,349,2.79,350,2.79]],["title/modules.html",[351,2.956]],["body/modules.html",[13,0.047,142,0.047,143,0.047,351,3.381]],["title/overview.html",[352,2.956]],["body/overview.html",[2,2.346,13,0.046,131,1.346,142,0.046,143,0.046,145,1.768,352,3.271,353,4.075,354,4.075,355,4.075]],["title/properties.html",[26,0.938,234,1.538]],["body/properties.html",[13,0.049,26,1.19,142,0.047,143,0.047,356,4.142,357,4.142]],["title/miscellaneous/typealiases.html",[358,1.835,359,3.263]],["body/miscellaneous/typealiases.html",[13,0.046,25,1.134,48,1.134,70,2.655,74,2.273,130,1.494,142,0.046,143,0.046,174,2.655,196,3.168,198,3.168,200,3.138,358,3.168,360,3.946,361,3.946]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":357,"title":{},"body":{"properties.html":{}}}],["0.0.2",{"_index":273,"title":{},"body":{"index.html":{}}}],["0.4.1",{"_index":275,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":270,"title":{},"body":{"index.html":{}}}],["1.1.1",{"_index":277,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":353,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":266,"title":{},"body":{"index.html":{}}}],["20.1.0",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":284,"title":{},"body":{"license.html":{}}}],["4",{"_index":354,"title":{},"body":{"overview.html":{}}}],["4.1.11",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":355,"title":{},"body":{"overview.html":{}}}],["5/11",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["8.5.6",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":318,"title":{},"body":{"license.html":{}}}],["action",{"_index":343,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":141,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["alias",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":360,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":309,"title":{},"body":{"license.html":{}}}],["angular",{"_index":265,"title":{},"body":{"index.html":{}}}],["angular/cdk",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/testing",{"_index":160,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["angular/common",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":102,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["angular/compiler",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":100,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":104,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"dependencies.html":{}}}],["angular/router",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["arising",{"_index":347,"title":{},"body":{"license.html":{}}}],["associated",{"_index":296,"title":{},"body":{"license.html":{}}}],["async",{"_index":179,"title":{},"body":{"components/Markdown.html":{}}}],["attribute",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["authors",{"_index":336,"title":{},"body":{"license.html":{}}}],["block",{"_index":110,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["both",{"_index":122,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["browser",{"_index":105,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"dependencies.html":{}}}],["case",{"_index":20,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["charge",{"_index":291,"title":{},"body":{"license.html":{}}}],["claim",{"_index":339,"title":{},"body":{"license.html":{}}}],["class",{"_index":111,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["classes",{"_index":145,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["code'},{'name",{"_index":129,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["codeharness",{"_index":144,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":268,"title":{},"body":{"index.html":{}}}],["community",{"_index":280,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":263,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":128,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["componentharness",{"_index":169,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":60,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["conditions",{"_index":317,"title":{},"body":{"license.html":{}}}],["connection",{"_index":349,"title":{},"body":{"license.html":{}}}],["console.warn(\"either",{"_index":121,"title":{},"body":{"components/Code.html":{}}}],["const",{"_index":203,"title":{},"body":{"components/Markdown.html":{}}}],["content",{"_index":29,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"index.html":{}}}],["contentcontainercomponentharness",{"_index":149,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{}}}],["contract",{"_index":344,"title":{},"body":{"license.html":{}}}],["copies",{"_index":311,"title":{},"body":{"license.html":{}}}],["copy",{"_index":294,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":283,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":216,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["custom",{"_index":72,"title":{},"body":{"components/Code.html":{}}}],["damages",{"_index":340,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":350,"title":{},"body":{"license.html":{}}}],["default",{"_index":24,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["delal",{"_index":298,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":235,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["directive",{"_index":126,"title":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["directives",{"_index":131,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"index.html":{},"overview.html":{}}}],["directly",{"_index":55,"title":{},"body":{"components/Code.html":{}}}],["distribute",{"_index":307,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":217,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["domsanitizer",{"_index":103,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["element",{"_index":125,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["empty",{"_index":133,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["emptystate",{"_index":132,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":167,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["error",{"_index":21,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["error(\"either",{"_index":119,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["errorstate",{"_index":136,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":171,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["event",{"_index":335,"title":{},"body":{"license.html":{}}}],["export",{"_index":112,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["exportas",{"_index":162,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["express",{"_index":326,"title":{},"body":{"license.html":{}}}],["extends",{"_index":148,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["factory",{"_index":278,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":91,"title":{},"body":{"components/Code.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["files",{"_index":297,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":331,"title":{},"body":{"license.html":{}}}],["following",{"_index":316,"title":{},"body":{"license.html":{}}}],["free",{"_index":290,"title":{},"body":{"license.html":{}}}],["function",{"_index":73,"title":{},"body":{"components/Code.html":{}}}],["furnished",{"_index":314,"title":{},"body":{"license.html":{}}}],["gethighlighter",{"_index":107,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":114,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":209,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":210,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getmdvel",{"_index":150,"title":{},"body":{"classes/CodeHarness.html":{}}}],["getsrcel",{"_index":151,"title":{},"body":{"classes/CodeHarness.html":{}}}],["getting",{"_index":252,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":289,"title":{},"body":{"license.html":{}}}],["harness.ts",{"_index":147,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["harness.ts:12",{"_index":170,"title":{},"body":{"classes/EmptyStateHarness.html":{}}}],["harness.ts:14",{"_index":211,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["harness.ts:4",{"_index":159,"title":{},"body":{"classes/CodeHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["harness.ts:6",{"_index":158,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts:7",{"_index":156,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts:8",{"_index":173,"title":{},"body":{"classes/LoadingStateHarness.html":{}}}],["harness.ts:9",{"_index":215,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["hereby",{"_index":288,"title":{},"body":{"license.html":{}}}],["high",{"_index":260,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":197,"title":{},"body":{"components/Markdown.html":{}}}],["highlighter",{"_index":30,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["highlightercore",{"_index":106,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":96,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["holders",{"_index":337,"title":{},"body":{"license.html":{}}}],["host",{"_index":12,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["hostselector",{"_index":153,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["html",{"_index":124,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["httpresource",{"_index":101,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["httpresource.text",{"_index":85,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["https://marked.js.org/using_advanced#options",{"_index":199,"title":{},"body":{"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":84,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":97,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":80,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["ignored",{"_index":59,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["implements",{"_index":9,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["implied",{"_index":327,"title":{},"body":{"license.html":{}}}],["import",{"_index":98,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["include",{"_index":71,"title":{},"body":{"components/Code.html":{}}}],["included",{"_index":321,"title":{},"body":{"license.html":{}}}],["including",{"_index":301,"title":{},"body":{"license.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["inject",{"_index":99,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(domsanitizer",{"_index":87,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["input",{"_index":52,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["input(\"github",{"_index":193,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":75,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":92,"title":{},"body":{"components/Code.html":{}}}],["kind",{"_index":325,"title":{},"body":{"license.html":{}}}],["lang",{"_index":31,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":78,"title":{},"body":{"components/Code.html":{}}}],["legend",{"_index":123,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["liability",{"_index":341,"title":{},"body":{"license.html":{}}}],["liable",{"_index":338,"title":{},"body":{"license.html":{}}}],["license",{"_index":281,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":194,"title":{},"body":{"components/Markdown.html":{}}}],["limitation",{"_index":302,"title":{},"body":{"license.html":{}}}],["limited",{"_index":328,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":157,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{}}}],["loading",{"_index":22,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["loadingstate",{"_index":137,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":172,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":214,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["made",{"_index":279,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":188,"title":{},"body":{"components/Markdown.html":{}}}],["markdown",{"_index":130,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdownharness",{"_index":207,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":200,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":74,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["marked(highlight(this.theme",{"_index":204,"title":{},"body":{"components/Markdown.html":{}}}],["marked.parse(text",{"_index":205,"title":{},"body":{"components/Markdown.html":{}}}],["markedoptions",{"_index":196,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":143,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["md",{"_index":155,"title":{},"body":{"classes/CodeHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["mdcontent",{"_index":201,"title":{},"body":{"components/Markdown.html":{}}}],["merchantability",{"_index":330,"title":{},"body":{"license.html":{}}}],["merge",{"_index":305,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["methods",{"_index":36,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["micro",{"_index":256,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":358,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mit",{"_index":282,"title":{},"body":{"license.html":{}}}],["mode",{"_index":213,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modify",{"_index":304,"title":{},"body":{"license.html":{}}}],["modules",{"_index":351,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":47,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["new",{"_index":118,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"coverage.html":{}}}],["ng)angular",{"_index":255,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":37,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["noninfringement",{"_index":334,"title":{},"body":{"license.html":{}}}],["notice",{"_index":319,"title":{},"body":{"license.html":{}}}],["obtaining",{"_index":293,"title":{},"body":{"license.html":{}}}],["ok",{"_index":139,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["okstate",{"_index":138,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["optional",{"_index":49,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["options",{"_index":70,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":346,"title":{},"body":{"license.html":{}}}],["out",{"_index":348,"title":{},"body":{"license.html":{}}}],["overview",{"_index":352,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":234,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":257,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse",{"_index":38,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(text",{"_index":43,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parser",{"_index":189,"title":{},"body":{"components/Markdown.html":{},"index.html":{}}}],["parsing",{"_index":198,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["particular",{"_index":332,"title":{},"body":{"license.html":{}}}],["permission",{"_index":287,"title":{},"body":{"license.html":{}}}],["permit",{"_index":312,"title":{},"body":{"license.html":{}}}],["perry",{"_index":286,"title":{},"body":{"license.html":{}}}],["person",{"_index":292,"title":{},"body":{"license.html":{}}}],["persons",{"_index":313,"title":{},"body":{"license.html":{}}}],["portions",{"_index":323,"title":{},"body":{"license.html":{}}}],["postcss",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":33,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["programming",{"_index":77,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":212,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"properties.html":{}}}],["protected",{"_index":28,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["provide",{"_index":56,"title":{},"body":{"components/Code.html":{}}}],["provided",{"_index":120,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"license.html":{}}}],["publish",{"_index":306,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":333,"title":{},"body":{"license.html":{}}}],["quality",{"_index":261,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["reference",{"_index":267,"title":{},"body":{"index.html":{}}}],["rendered",{"_index":186,"title":{},"body":{"components/Markdown.html":{}}}],["res",{"_index":32,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":178,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":175,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":177,"title":{},"body":{"components/Markdown.html":{}}}],["res.status",{"_index":19,"title":{},"body":{"components/Code.html":{}}}],["res.value",{"_index":176,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":23,"title":{},"body":{"components/Code.html":{}}}],["restriction",{"_index":300,"title":{},"body":{"license.html":{}}}],["results",{"_index":142,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":62,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":41,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["rights",{"_index":303,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["sanitize",{"_index":34,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":83,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["sell",{"_index":310,"title":{},"body":{"license.html":{}}}],["set",{"_index":57,"title":{},"body":{"components/Code.html":{}}}],["shall",{"_index":320,"title":{},"body":{"license.html":{}}}],["shiki",{"_index":82,"title":{},"body":{"components/Code.html":{},"index.html":{}}}],["simple",{"_index":259,"title":{},"body":{"index.html":{}}}],["smart",{"_index":262,"title":{},"body":{"index.html":{}}}],["software",{"_index":295,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["src",{"_index":17,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["started",{"_index":253,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":140,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"index.html":{}}}],["state,[xpr",{"_index":134,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["state]'},{'name",{"_index":135,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["statements",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":152,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["string",{"_index":44,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["style.display",{"_index":109,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["subject",{"_index":315,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":308,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":322,"title":{},"body":{"license.html":{}}}],["supported",{"_index":81,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":18,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":95,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"index.html":{}}}],["table",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["tailwindcss/postcss",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["template",{"_index":16,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["text",{"_index":50,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":35,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.code",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["this.content(this.md",{"_index":202,"title":{},"body":{"components/Markdown.html":{}}}],["this.lang",{"_index":115,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":154,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{}}}],["this.md",{"_index":182,"title":{},"body":{"components/Markdown.html":{}}}],["this.options",{"_index":206,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse",{"_index":67,"title":{},"body":{"components/Code.html":{}}}],["this.parse(this.code",{"_index":63,"title":{},"body":{"components/Code.html":{}}}],["this.parse(this.md",{"_index":183,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":65,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.res.value",{"_index":66,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":113,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.src",{"_index":64,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.theme()}).tostring",{"_index":116,"title":{},"body":{"components/Code.html":{}}}],["throw",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["tort",{"_index":345,"title":{},"body":{"license.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["tslib",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":48,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":359,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["url",{"_index":90,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["use",{"_index":94,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"license.html":{}}}],["used",{"_index":54,"title":{},"body":{"components/Code.html":{}}}],["valid",{"_index":79,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["var",{"_index":127,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["vendor",{"_index":271,"title":{},"body":{"index.html":{}}}],["version",{"_index":356,"title":{},"body":{"properties.html":{}}}],["very",{"_index":258,"title":{},"body":{"index.html":{}}}],["void",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["warranties",{"_index":329,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":324,"title":{},"body":{"license.html":{}}}],["whether",{"_index":342,"title":{},"body":{"license.html":{}}}],["without",{"_index":299,"title":{},"body":{"license.html":{}}}],["xp)experimental",{"_index":254,"title":{},"body":{"index.html":{}}}],["xpr",{"_index":15,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["xpremptystate",{"_index":163,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["xprerrorstate",{"_index":165,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["xprloadingstate",{"_index":164,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["xprng/.../markdown.ts",{"_index":361,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code",{"_index":276,"title":{},"body":{"index.html":{}}}],["xprng/code/src/code.ts",{"_index":8,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["xprng/code/src/code.ts:42",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:49",{"_index":89,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:57",{"_index":76,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:65",{"_index":93,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:72",{"_index":69,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:76",{"_index":68,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:84",{"_index":45,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:90",{"_index":86,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:91",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:94",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/testing/code",{"_index":146,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":269,"title":{},"body":{"index.html":{}}}],["xprng/common/src/states.ts",{"_index":161,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":168,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/markdown",{"_index":274,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":174,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/src/markdown.ts:47",{"_index":185,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:54",{"_index":192,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:60",{"_index":195,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:66",{"_index":187,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:71",{"_index":184,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:77",{"_index":181,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:84",{"_index":190,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:85",{"_index":191,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:87",{"_index":180,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/testing/markdown",{"_index":208,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/vendor",{"_index":272,"title":{},"body":{"index.html":{}}}],["xprng/vendor/shiki",{"_index":108,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["xprokstate",{"_index":166,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["ziv",{"_index":285,"title":{},"body":{"license.html":{}}}],["zoneless",{"_index":264,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @if (code()) {\n  \n}\n@if (src()) {\n  @switch (res.status()) {\n    @case (\"error\") {\n      \n    }\n    @case (\"loading\") {\n      \n    }\n    @case (\"resolved\") {\n      \n    }\n    @default {\n      \n    }\n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in xprng/code/src/code.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in xprng/code/src/code.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:42\n                        \n                    \n\n            \n                \n                    Source code content as a string\nThis can be used to directly provide source code content.\nIf this is set, the src attribute will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.code()) return this.parse(this.code() ?? \"\");\n\n    if (this.src()) return this.parse(this.res.hasValue() ? this.res.value() : \"\");\n\n    return this.parse(\"\");\n  })\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:72\n                        \n                    \n\n            \n                \n                    Options for the code content.\nThis can include a custom highlighter function and marked options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:57\n                        \n                    \n\n            \n                \n                    The programming language of the source code.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:49\n                        \n                    \n\n            \n                \n                    The source URL of the source code content.\nThis is optional and can be used to fetch source code content from a URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:65\n                        \n                    \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, computed, inject, input, OnInit} from \"@angular/core\";\nimport {httpResource} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport type {HighlighterCore} from \"shiki\";\nimport {getHighlighter} from '@xprng/vendor/shiki'\n\n@Component({\n  selector: \"xpr-code\",\n  host: {\n    \"[style.display]\": '\"block\"',\n    class: \"xpr-code\",\n  },\n  template: `\n    @if (code()) {\n      \n    }\n    @if (src()) {\n      @switch (res.status()) {\n        @case (\"error\") {\n          \n        }\n        @case (\"loading\") {\n          \n        }\n        @case (\"resolved\") {\n          \n        }\n        @default {\n          \n        }\n      }\n    }\n  `,\n})\nexport class Code implements OnInit {\n  /**\n   * Source code content as a string\n   * This can be used to directly provide source code content.\n   * If this is set, the `src` attribute will be ignored.\n   * @input\n   */\n  readonly code = input();\n\n  /**\n   * The source URL of the source code content.\n   * This is optional and can be used to fetch source code content from a URL.\n   * @input\n   */\n  readonly src = input();\n\n  /**\n   * The programming language of the source code.\n   * This should be a valid language identifier supported by Shiki.\n   * @see https://shiki.style/languages\n   * @input\n   */\n  readonly lang = input(\"javascript\");\n\n  /**\n   * The theme to use for syntax highlighting.\n   * This can be any theme supported by Shiki.\n   * @see https://shiki.style/themes\n   * @input\n   */\n  readonly theme = input(\"nord\");\n\n  /**\n   * Options for the code content.\n   * This can include a custom highlighter function and marked options.\n   * @input\n   */\n  readonly highlighter = input();\n\n  //\n\n  protected content = computed(() => {\n    if (this.code()) return this.parse(this.code() ?? \"\");\n\n    if (this.src()) return this.parse(this.res.hasValue() ? this.res.value() : \"\");\n\n    return this.parse(\"\");\n  });\n\n  private parse(text: string) {\n    return this.sanitize.bypassSecurityTrustHtml(\n      getHighlighter().codeToHtml(text, {lang: this.lang(), theme: this.theme()}).toString()\n    );\n  }\n\n  protected readonly res = httpResource.text(() => this.src());\n  private readonly sanitize = inject(DomSanitizer);\n\n\n  ngOnInit() {\n    if (!this.code() && !this.src()) {\n      throw new Error(\"Either 'code' or 'src' input must be provided.\");\n    }\n    if (this.code() && this.src()) {\n      console.warn(\"Either 'code' or 'src' input should be provided, not both.\");\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (code()) {  }@if (src()) {  @switch (res.status()) {    @case (\"error\") {          }    @case (\"loading\") {          }    @case (\"resolved\") {          }    @default {          }  }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getMdVEl\n                            \n                            \n                                getSrcEl\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getMdVEl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-md\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/testing/code-harness.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSrcEl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/testing/code-harness.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-code\"\n                    \n                \n                    \n                        \n                                Defined in xprng/code/testing/code-harness.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ContentContainerComponentHarness } from \"@angular/cdk/testing\";\n\nexport class CodeHarness extends ContentContainerComponentHarness {\n  static hostSelector = \"xpr-code\";\n\n  getSrcEl = this.locatorForOptional(\".xpr-loaded\");\n  getMdVEl = this.locatorForOptional(\".xpr-md\");\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive} from \"@angular/core\";\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class LoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class ErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class OkState {\n}\n\n@Directive({\n  selector: \"xpr-empty-state,[xpr-empty-state]\",\n  exportAs: \"xprEmptyState\",\n  host: {\n    class: \"xpr-empty-state\",\n  },\n})\nexport class EmptyState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n                    \n                        \n                                Defined in xprng/common/testing/state-harness.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentHarness } from \"@angular/cdk/testing\";\n\nexport class ErrorStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-error-state\";\n}\n\nexport class LoadingStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-loading-state\";\n}\n\nexport class EmptyStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-empty-state\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive} from \"@angular/core\";\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class LoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class ErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class OkState {\n}\n\n@Directive({\n  selector: \"xpr-empty-state,[xpr-empty-state]\",\n  exportAs: \"xprEmptyState\",\n  host: {\n    class: \"xpr-empty-state\",\n  },\n})\nexport class EmptyState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n                    \n                        \n                                Defined in xprng/common/testing/state-harness.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentHarness } from \"@angular/cdk/testing\";\n\nexport class ErrorStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-error-state\";\n}\n\nexport class LoadingStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-loading-state\";\n}\n\nexport class EmptyStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-empty-state\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive} from \"@angular/core\";\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class LoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class ErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class OkState {\n}\n\n@Directive({\n  selector: \"xpr-empty-state,[xpr-empty-state]\",\n  exportAs: \"xprEmptyState\",\n  host: {\n    class: \"xpr-empty-state\",\n  },\n})\nexport class EmptyState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n                    \n                        \n                                Defined in xprng/common/testing/state-harness.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentHarness } from \"@angular/cdk/testing\";\n\nexport class ErrorStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-error-state\";\n}\n\nexport class LoadingStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-loading-state\";\n}\n\nexport class EmptyStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-empty-state\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (md()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                md\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in xprng/markdown/src/markdown.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in xprng/markdown/src/markdown.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.md()\n      ? this.parse(this.md()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:47\n                        \n                    \n\n            \n                \n                    The markdown content to be rendered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:66\n                        \n                    \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:54\n                        \n                    \n\n            \n                \n                    The source URL of the markdown content.\nIf md is provided, this will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:60\n                        \n                    \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, computed, inject, input, OnInit,} from \"@angular/core\";\nimport {httpResource} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {Marked, type MarkedOptions} from \"marked\";\nimport {highlight} from \"@xprng/vendor/shiki\"\n\n/**\n * Marked options for parsing markdown.\n * @see https://marked.js.org/using_advanced#options\n */\nexport type MarkdownOptions = MarkedOptions;\n\n@Component({\n  selector: \"xpr-markdown\",\n  host: {\n    \"[style.display]\": '\"block\"',\n    class: \"xpr-markdown\",\n  },\n  template: `\n    @if (md()) {\n      \n      \n\n    } @else if (src()) {\n      \n      @if (res.hasValue() && res.value()) {\n        \n      } @else if (res.isLoading()) {\n        \n      } @else if (res.error()) {\n        \n      } @else {\n        \n      }\n    }\n  `,\n})\nexport class Markdown implements OnInit {\n  /**\n   * The markdown content to be rendered.\n   * @input\n   */\n  readonly md = input();\n\n  /**\n   * The source URL of the markdown content.\n   * If `md` is provided, this will be ignored.\n   * @input\n   */\n  readonly src = input();\n\n  /**\n   * The theme to use for syntax highlighting.\n   * @input\n   */\n  readonly theme = input(\"github-light\");\n\n  /**\n   * Options for the Maerked parser\n   * @input\n   */\n  readonly options = input>({});\n\n  //\n\n  // protected mdContent = computed(() => this.content(this.md() ?? \"\"));\n  protected content = computed(() => {\n    return this.md()\n      ? this.parse(this.md()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  });\n\n  private parse(text: string) {\n    const marked = new Marked(highlight(this.theme()));\n    return this.sanitize.bypassSecurityTrustHtml(\n      marked.parse(text, this.options()) as string,\n    );\n  }\n\n  protected readonly res = httpResource.text(() => this.src());\n  private readonly sanitize = inject(DomSanitizer);\n\n  async ngOnInit() {\n    if (!this.md() && !this.src()) {\n      throw new Error(\"Either 'md' or 'src' input must be provided. Neither provided.\");\n    }\n    if (this.md() && this.src()) {\n      throw new Error(\"Either 'md' or 'src' input must be provided. Both provided.\");\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (md()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/testing/markdown-harness.ts:14\n                        \n                    \n\n            \n                \n                    The content projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/testing/markdown-harness.ts:9\n                        \n                    \n\n            \n                \n                    The content projected in case of \"md\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/testing/markdown-harness.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ContentContainerComponentHarness } from \"@angular/cdk/testing\";\n\nexport class MarkdownHarness extends ContentContainerComponentHarness {\n  static hostSelector = \"xpr-markdown\";\n\n  /**\n   * The content projected in case of \"md\" provided mode.\n   */\n  getLocal = this.locatorForOptional(\".xpr-local\");\n\n  /**\n   * The content projected in case of \"src\" provided mode.\n   */\n  getLoaded = this.locatorForOptional(\".xpr-loaded\");\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive} from \"@angular/core\";\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class LoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class ErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class OkState {\n}\n\n@Directive({\n  selector: \"xpr-empty-state,[xpr-empty-state]\",\n  exportAs: \"xprEmptyState\",\n  host: {\n    class: \"xpr-empty-state\",\n  },\n})\nexport class EmptyState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.1.5\n        \n            @angular/common : ^20.1.0\n        \n            @angular/compiler : ^20.1.0\n        \n            @angular/core : ^20.1.0\n        \n            @angular/forms : ^20.1.0\n        \n            @angular/platform-browser : ^20.1.0\n        \n            @angular/router : ^20.1.0\n        \n            @tailwindcss/postcss : ^4.1.11\n        \n            postcss : ^8.5.6\n        \n            rxjs : ~7.8.0\n        \n            tailwindcss : ^4.1.11\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XP)Experimental (NG)Angular Components\nMicro packages of very simple - but high quality - smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nComponent\nPackage\nReference\n\n\n\n\nCommon\n@xprng/common\n1.0.0\n\n\nVendor\n@xprng/vendor\n0.0.2\n\n\nMarkdown\n@xprng/markdown\n0.4.1\n\n\nCode\n@xprng/code\n1.1.1\n\n\n\nContent\n\nCommon\nState directives\n\n\nVendor\nShiki syntax highlighter factory\nMarked parser factory\n\n\nMarkdown\nMarkdown component\n\n\nCode\nCode highlighter component\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright 2025 to Ziv Perry.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to delal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
