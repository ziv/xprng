var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/Code.html",[0,1.18,1,1.18]],["body/components/Code.html",[0,0.956,1,2.124,2,0.971,3,0.211,4,0.891,5,0.794,6,0.794,7,0.179,8,0.794,9,1.353,10,1.768,11,0.429,12,0.731,13,0.054,14,1.55,15,0.796,16,1.353,17,2.745,18,2.203,19,2.203,20,2.992,21,0.839,22,0.839,23,2.203,24,1.506,25,0.284,26,0.484,27,3.761,28,2.551,29,2.807,30,3.177,31,2.602,32,1.768,33,2.551,34,1.768,35,2.868,36,1.353,37,2.088,38,1.353,39,1.462,40,0.989,41,1.353,42,0.989,43,1.353,44,1.105,45,0.989,46,0.794,47,2.088,48,0.484,49,1.768,50,0.794,51,1.353,52,3.472,53,0.989,54,2.602,55,1.686,56,1.686,57,1.686,58,1.686,59,1.353,60,1.768,61,2.602,62,2.723,63,1.686,64,2.551,65,1.353,66,1.353,67,1.686,68,1.768,69,1.482,70,1.768,71,1.498,72,0.989,73,0.989,74,1.751,75,1.686,76,1.686,77,1.686,78,1.134,79,1.686,80,0.989,81,1.686,82,2.602,83,1.686,84,1.353,85,2.602,86,2.919,87,2.088,88,1.686,89,1.353,90,0.989,91,1.353,92,0.989,93,0.989,94,2.088,95,1.686,96,1.686,97,0.989,98,1.134,99,1.353,100,1.353,101,1.686,102,0.624,103,0.794,104,0.375,105,0.794,106,0.794,107,0.794,108,0.666,109,0.666,110,0.989,111,0.989,112,0.794,113,0.794,114,0.794,115,0.087,116,0.211,117,0.794,118,0.989,119,0.989,120,0.989,121,0.989,122,0.989,123,0.794,124,0.794,125,1.353,126,1.353,127,0.211,128,2.088,129,0.794,130,0.794,131,0.638,132,0.375,133,0.327,134,0.484,135,1.129,136,1.768,137,0.327,138,0.327,139,0.327,140,0.731,141,0.284,142,0.794,143,0.016,144,0.016]],["title/classes/CodeHarness.html",[115,0.14,145,1.83]],["body/classes/CodeHarness.html",[1,1.712,3,0.645,4,0.645,7,0.547,13,0.052,15,0.843,24,1.665,25,0.867,26,1.134,39,1.665,44,1.142,48,0.867,51,1.665,102,0.645,115,0.156,116,0.645,143,0.039,144,0.039,145,2.655,146,1.309,147,3.743,148,1.309,149,1.966,150,3.529,151,4.396,152,4.396,153,2.191,154,2.191,155,3.743,156,2.655,157,3.017,158,3.167,159,3.017,160,2.03,161,1.504]],["title/directives/EmptyState.html",[127,0.581,133,0.898]],["body/directives/EmptyState.html",[3,0.563,4,0.563,7,0.479,11,1.144,12,1.917,13,0.053,14,2.007,15,1.078,21,1.181,22,1.181,102,0.563,104,0.999,115,0.257,116,0.944,127,0.988,132,0.999,133,1.191,134,1.329,135,2.007,137,0.871,138,0.871,139,0.871,140,1.783,141,1.451,143,0.035,144,0.035,162,1.314,163,2.663,164,2.077,165,1.519,166,1.519,167,1.519]],["title/classes/EmptyStateHarness.html",[115,0.14,168,1.355]],["body/classes/EmptyStateHarness.html",[3,0.645,4,0.645,7,0.547,13,0.053,15,0.996,21,0.867,22,0.867,24,1.142,25,0.867,26,1.134,39,1.142,44,1.142,48,0.867,51,1.142,102,0.645,115,0.227,116,0.939,134,1.134,141,1.34,143,0.039,144,0.039,146,1.309,148,1.309,149,2.324,153,2.411,154,2.411,161,1.504,168,1.966,169,2.272,170,3.256,171,3.017,172,1.504,173,1.504]],["title/directives/ErrorState.html",[127,0.581,137,0.898]],["body/directives/ErrorState.html",[3,0.563,4,0.563,7,0.479,11,1.144,12,1.917,13,0.053,14,2.007,15,1.078,21,1.329,22,1.181,102,0.563,104,0.999,115,0.257,116,0.944,127,0.988,132,0.999,133,0.871,134,1.181,135,2.007,137,1.191,138,0.871,139,0.871,140,1.783,141,1.451,143,0.035,144,0.035,162,1.314,163,2.663,164,1.519,165,1.519,166,2.077,167,1.519]],["title/classes/ErrorStateHarness.html",[115,0.14,172,1.355]],["body/classes/ErrorStateHarness.html",[3,0.645,4,0.645,7,0.547,13,0.053,15,0.996,21,1.134,22,0.867,24,1.142,25,0.867,26,1.134,39,1.142,44,1.142,48,0.867,51,1.142,102,0.645,115,0.227,116,0.939,134,0.867,141,1.34,143,0.039,144,0.039,146,1.309,148,1.309,149,2.324,153,2.411,154,2.411,160,2.03,161,1.504,168,1.504,169,2.272,170,3.256,172,1.966,173,1.504]],["title/directives/LoadingState.html",[127,0.581,138,0.898]],["body/directives/LoadingState.html",[3,0.563,4,0.563,7,0.479,11,1.144,12,1.917,13,0.053,14,2.007,15,1.078,21,1.181,22,1.329,102,0.563,104,0.999,115,0.257,116,0.944,127,0.988,132,0.999,133,0.871,134,1.181,135,2.007,137,0.871,138,1.191,139,0.871,140,1.783,141,1.451,143,0.035,144,0.035,162,1.314,163,2.663,164,1.519,165,2.077,166,1.519,167,1.519]],["title/classes/LoadingStateHarness.html",[115,0.14,173,1.355]],["body/classes/LoadingStateHarness.html",[3,0.645,4,0.645,7,0.547,13,0.053,15,0.996,21,0.867,22,1.134,24,1.142,25,0.867,26,1.134,39,1.142,44,1.142,48,0.867,51,1.142,102,0.645,115,0.227,116,0.939,134,0.867,141,1.34,143,0.039,144,0.039,146,1.309,148,1.309,149,2.324,153,2.411,154,2.411,161,1.504,168,1.504,169,2.272,170,3.256,172,1.504,173,1.966,174,3.017]],["title/components/Markdown.html",[0,1.18,131,1.03]],["body/components/Markdown.html",[0,1.075,1,0.504,2,1.112,3,0.248,4,0.529,5,0.933,6,0.933,7,0.211,9,1.55,10,1.989,11,0.504,12,0.838,13,0.054,14,1.662,15,0.849,16,1.55,17,2.578,21,0.555,22,0.555,24,1.386,25,0.334,26,0.555,27,3.76,28,2.938,29,2.462,32,1.989,33,2.772,34,1.989,35,2.57,36,1.55,37,2.316,38,1.55,39,1.505,41,1.55,43,1.55,44,1.092,46,0.933,47,2.316,48,0.712,49,0.933,50,0.933,51,1.386,52,3.519,59,1.55,60,2.316,62,1.989,64,2.316,65,1.55,66,1.55,68,1.55,69,1.667,70,1.55,71,1.989,74,2.324,78,1.941,87,0.933,89,1.55,91,1.55,94,1.55,98,1.3,99,1.55,100,1.55,102,0.684,103,0.933,104,0.44,105,0.933,106,0.933,107,0.933,108,0.782,109,0.782,112,0.933,113,0.933,114,0.933,115,0.1,116,0.413,117,0.933,123,0.933,124,0.933,125,1.55,126,1.55,127,0.248,128,2.316,129,0.933,130,0.933,131,1.66,132,0.44,133,0.384,134,0.555,135,1.252,136,1.989,137,0.384,138,0.384,139,0.384,140,0.838,141,0.334,142,0.933,143,0.019,144,0.019,156,2.758,175,0.782,176,2.477,177,2.477,178,2.477,179,2.477,180,2.477,181,1.163,182,1.163,183,2.885,184,1.931,185,1.163,186,1.163,187,1.931,188,1.163,189,1.931,190,1.931,191,1.163,192,1.163,193,1.163,194,1.931,195,1.931,196,1.163,197,1.55,198,1.163,199,0.933,200,1.163,201,0.782,202,1.163,203,1.163,204,1.163,205,1.163,206,1.163,207,1.163]],["title/classes/MarkdownHarness.html",[115,0.14,208,1.83]],["body/classes/MarkdownHarness.html",[3,0.576,4,0.576,7,0.489,13,0.053,15,0.782,17,2.462,20,3.577,24,1.573,25,0.774,26,1.051,29,2.998,39,1.573,44,1.02,48,0.774,51,1.573,71,2.566,102,0.576,115,0.139,116,0.576,131,1.385,143,0.036,144,0.036,146,1.169,148,1.169,149,1.823,150,3.335,153,2.07,154,2.07,155,3.577,156,2.462,158,2.937,160,1.813,161,1.343,208,2.462,209,3.577,210,4.154,211,4.154,212,2.694,213,4.456,214,4.456,215,3.658,216,2.694]],["title/directives/OkState.html",[127,0.581,139,0.898]],["body/directives/OkState.html",[3,0.563,4,0.563,7,0.479,11,1.144,12,1.917,13,0.053,14,2.007,15,1.078,21,1.181,22,1.181,102,0.563,104,0.999,115,0.257,116,0.944,127,0.988,132,0.999,133,0.871,134,1.181,135,2.007,137,0.871,138,0.871,139,1.191,140,2.007,141,1.451,143,0.035,144,0.035,162,1.314,163,2.663,164,1.519,165,1.519,166,1.519,167,2.077]],["title/coverage.html",[217,2.956]],["body/coverage.html",[0,1.647,1,1.235,7,0.516,8,2.285,13,0.052,48,1.091,69,1.915,84,2.285,115,0.245,127,0.974,131,1.078,133,0.94,137,0.94,138,0.94,139,0.94,143,0.037,144,0.037,145,1.915,147,2.285,148,2.06,162,2.271,168,1.419,169,2.46,172,1.419,173,1.419,175,2.555,201,1.915,208,1.915,209,2.285,217,2.285,218,2.285,219,2.846,220,2.846,221,2.846,222,5.064,223,2.846,224,4.557,225,4.272,226,2.846,227,2.846,228,2.846,229,2.846,230,2.846,231,2.846,232,2.846,233,2.846,234,2.846]],["title/dependencies.html",[235,1.538,236,2.619]],["body/dependencies.html",[13,0.053,104,1.322,108,2.349,109,2.349,143,0.042,144,0.042,236,2.803,237,3.491,238,3.491,239,3.491,240,5.155,241,3.491,242,3.491,243,3.491,244,3.491,245,4.33,246,3.491,247,3.491,248,3.491,249,3.491,250,3.491,251,3.491,252,3.491]],["title/index.html",[25,0.657,253,1.835,254,1.835]],["body/index.html",[0,1.566,1,1.566,2,2.545,13,0.047,131,1.366,143,0.043,144,0.043,235,2.428,255,3.608,256,3.608,257,3.608,258,3.608,259,3.608,260,3.608,261,3.608,262,3.608,263,3.608,264,3.608,265,3.608,266,4.419,267,3.608,268,3.608,269,3.608,270,3.608,271,3.608,272,3.608,273,3.608,274,3.608,275,3.608,276,3.608,277,3.608]],["title/license.html",[253,1.835,254,1.835,278,1.835]],["body/license.html",[13,0.037,71,1.609,98,2.523,143,0.037,144,0.037,218,2.243,278,2.243,279,2.794,280,4.232,281,2.794,282,2.794,283,2.794,284,3.749,285,2.794,286,2.794,287,2.794,288,2.794,289,2.794,290,2.794,291,3.749,292,5.108,293,2.794,294,2.794,295,2.794,296,4.232,297,2.794,298,3.749,299,2.794,300,2.794,301,2.794,302,2.794,303,2.794,304,2.794,305,2.794,306,2.794,307,2.794,308,3.749,309,2.794,310,2.794,311,2.794,312,2.794,313,2.794,314,2.794,315,2.794,316,3.749,317,3.749,318,2.794,319,2.794,320,2.794,321,2.794,322,2.794,323,2.794,324,2.794,325,2.794,326,2.794,327,2.794,328,2.794,329,2.794,330,2.794,331,2.794,332,2.794,333,2.794,334,2.794,335,2.794,336,2.794,337,2.794,338,2.794,339,2.794,340,2.794,341,2.794,342,2.794,343,2.794,344,2.794,345,2.794,346,2.794,347,2.794]],["title/modules.html",[348,2.956]],["body/modules.html",[13,0.047,143,0.047,144,0.047,348,3.382]],["title/overview.html",[349,2.956]],["body/overview.html",[2,2.347,13,0.046,132,1.543,143,0.046,144,0.046,146,1.769,349,3.272,350,4.076,351,4.076,352,4.076]],["title/properties.html",[26,0.938,235,1.538]],["body/properties.html",[13,0.05,26,1.191,143,0.047,144,0.047,353,4.143,354,4.143]],["title/miscellaneous/typealiases.html",[355,1.835,356,3.263]],["body/miscellaneous/typealiases.html",[13,0.046,25,1.135,48,1.135,74,2.657,78,2.657,131,1.495,143,0.046,144,0.046,175,2.657,197,3.169,199,3.169,201,3.139,355,3.169,357,3.948,358,3.948]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":354,"title":{},"body":{"properties.html":{}}}],["0.4.0",{"_index":271,"title":{},"body":{"index.html":{}}}],["0.4.1",{"_index":273,"title":{},"body":{"index.html":{}}}],["0/1",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["1.1.1",{"_index":275,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":350,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":267,"title":{},"body":{"index.html":{}}}],["20.1.0",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["20.1.5",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":281,"title":{},"body":{"license.html":{}}}],["4",{"_index":351,"title":{},"body":{"overview.html":{}}}],["4.1.11",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":352,"title":{},"body":{"overview.html":{}}}],["5/11",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["8.5.6",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["aaa",{"_index":118,"title":{},"body":{"components/Code.html":{}}}],["above",{"_index":315,"title":{},"body":{"license.html":{}}}],["action",{"_index":340,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":142,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["alias",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":357,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":306,"title":{},"body":{"license.html":{}}}],["angular",{"_index":266,"title":{},"body":{"index.html":{}}}],["angular/cdk",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/testing",{"_index":161,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["angular/common",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":106,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["angular/compiler",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":104,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":108,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"dependencies.html":{}}}],["angular/router",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["arising",{"_index":344,"title":{},"body":{"license.html":{}}}],["associated",{"_index":293,"title":{},"body":{"license.html":{}}}],["async",{"_index":180,"title":{},"body":{"components/Markdown.html":{}}}],["attribute",{"_index":58,"title":{},"body":{"components/Code.html":{}}}],["authors",{"_index":333,"title":{},"body":{"license.html":{}}}],["block",{"_index":114,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["both",{"_index":123,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["browser",{"_index":109,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"dependencies.html":{}}}],["case",{"_index":20,"title":{},"body":{"components/Code.html":{},"classes/MarkdownHarness.html":{}}}],["charge",{"_index":288,"title":{},"body":{"license.html":{}}}],["claim",{"_index":336,"title":{},"body":{"license.html":{}}}],["class",{"_index":115,"title":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["classes",{"_index":146,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"overview.html":{}}}],["code",{"_index":1,"title":{"components/Code.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["code'},{'name",{"_index":130,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["codeharness",{"_index":145,"title":{"classes/CodeHarness.html":{}},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["common",{"_index":269,"title":{},"body":{"index.html":{}}}],["community",{"_index":277,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":264,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Code.html":{},"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":129,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["componentharness",{"_index":170,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":60,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["conditions",{"_index":314,"title":{},"body":{"license.html":{}}}],["connection",{"_index":346,"title":{},"body":{"license.html":{}}}],["console.warn(\"either",{"_index":122,"title":{},"body":{"components/Code.html":{}}}],["const",{"_index":204,"title":{},"body":{"components/Markdown.html":{}}}],["content",{"_index":29,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["contentcontainercomponentharness",{"_index":150,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{}}}],["contract",{"_index":341,"title":{},"body":{"license.html":{}}}],["copies",{"_index":308,"title":{},"body":{"license.html":{}}}],["copy",{"_index":291,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":280,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":217,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["custom",{"_index":76,"title":{},"body":{"components/Code.html":{}}}],["damages",{"_index":337,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":347,"title":{},"body":{"license.html":{}}}],["default",{"_index":24,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["delal",{"_index":295,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":236,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["directive",{"_index":127,"title":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["directives",{"_index":132,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"overview.html":{}}}],["directly",{"_index":55,"title":{},"body":{"components/Code.html":{}}}],["distribute",{"_index":304,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":218,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["domsanitizer",{"_index":107,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["element",{"_index":126,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["empty",{"_index":134,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["emptystate",{"_index":133,"title":{"directives/EmptyState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["emptystateharness",{"_index":168,"title":{"classes/EmptyStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["error",{"_index":21,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["error(\"either",{"_index":70,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["errorstate",{"_index":137,"title":{"directives/ErrorState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["errorstateharness",{"_index":172,"title":{"classes/ErrorStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["event",{"_index":332,"title":{},"body":{"license.html":{}}}],["export",{"_index":116,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["exportas",{"_index":163,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["express",{"_index":323,"title":{},"body":{"license.html":{}}}],["extends",{"_index":149,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["fetch",{"_index":95,"title":{},"body":{"components/Code.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["files",{"_index":294,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":328,"title":{},"body":{"license.html":{}}}],["following",{"_index":313,"title":{},"body":{"license.html":{}}}],["free",{"_index":287,"title":{},"body":{"license.html":{}}}],["function",{"_index":77,"title":{},"body":{"components/Code.html":{}}}],["furnished",{"_index":311,"title":{},"body":{"license.html":{}}}],["gethighlighter",{"_index":111,"title":{},"body":{"components/Code.html":{}}}],["gethighlighter().codetohtml(text",{"_index":119,"title":{},"body":{"components/Code.html":{}}}],["getloaded",{"_index":210,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getlocal",{"_index":211,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["getmdvel",{"_index":151,"title":{},"body":{"classes/CodeHarness.html":{}}}],["getsrcel",{"_index":152,"title":{},"body":{"classes/CodeHarness.html":{}}}],["getting",{"_index":253,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":286,"title":{},"body":{"license.html":{}}}],["harness.ts",{"_index":148,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["harness.ts:12",{"_index":171,"title":{},"body":{"classes/EmptyStateHarness.html":{}}}],["harness.ts:14",{"_index":212,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["harness.ts:4",{"_index":160,"title":{},"body":{"classes/CodeHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["harness.ts:6",{"_index":159,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts:7",{"_index":157,"title":{},"body":{"classes/CodeHarness.html":{}}}],["harness.ts:8",{"_index":174,"title":{},"body":{"classes/LoadingStateHarness.html":{}}}],["harness.ts:9",{"_index":216,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["hereby",{"_index":285,"title":{},"body":{"license.html":{}}}],["high",{"_index":261,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":198,"title":{},"body":{"components/Markdown.html":{}}}],["highlighter",{"_index":30,"title":{},"body":{"components/Code.html":{}}}],["highlightercore",{"_index":110,"title":{},"body":{"components/Code.html":{}}}],["highlighting",{"_index":100,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["holders",{"_index":334,"title":{},"body":{"license.html":{}}}],["host",{"_index":12,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["hostselector",{"_index":154,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["html",{"_index":125,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["httpresource",{"_index":105,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["httpresource.text",{"_index":89,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["https://marked.js.org/using_advanced#options",{"_index":200,"title":{},"body":{"components/Markdown.html":{}}}],["https://shiki.style/languages",{"_index":88,"title":{},"body":{"components/Code.html":{}}}],["https://shiki.style/themes",{"_index":101,"title":{},"body":{"components/Code.html":{}}}],["identifier",{"_index":84,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["ignored",{"_index":59,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["implements",{"_index":9,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["implied",{"_index":324,"title":{},"body":{"license.html":{}}}],["import",{"_index":102,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["include",{"_index":75,"title":{},"body":{"components/Code.html":{}}}],["included",{"_index":318,"title":{},"body":{"license.html":{}}}],["including",{"_index":298,"title":{},"body":{"license.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["inject",{"_index":103,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["inject(domsanitizer",{"_index":91,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["input",{"_index":52,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["input(\"github",{"_index":194,"title":{},"body":{"components/Markdown.html":{}}}],["input(\"javascript",{"_index":79,"title":{},"body":{"components/Code.html":{}}}],["input(\"nord",{"_index":96,"title":{},"body":{"components/Code.html":{}}}],["kind",{"_index":322,"title":{},"body":{"license.html":{}}}],["lang",{"_index":31,"title":{},"body":{"components/Code.html":{}}}],["language",{"_index":82,"title":{},"body":{"components/Code.html":{}}}],["legend",{"_index":124,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["liability",{"_index":338,"title":{},"body":{"license.html":{}}}],["liable",{"_index":335,"title":{},"body":{"license.html":{}}}],["license",{"_index":278,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":195,"title":{},"body":{"components/Markdown.html":{}}}],["limitation",{"_index":299,"title":{},"body":{"license.html":{}}}],["limited",{"_index":325,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":158,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{}}}],["loading",{"_index":22,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["loadingstate",{"_index":138,"title":{"directives/LoadingState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["loadingstateharness",{"_index":173,"title":{"classes/LoadingStateHarness.html":{}},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["local",{"_index":215,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["made",{"_index":276,"title":{},"body":{"index.html":{}}}],["maerked",{"_index":189,"title":{},"body":{"components/Markdown.html":{}}}],["markdown",{"_index":131,"title":{"components/Markdown.html":{}},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["markdownharness",{"_index":208,"title":{"classes/MarkdownHarness.html":{}},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["markdownoptions",{"_index":201,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["marked",{"_index":78,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["marked(highlight(this.theme",{"_index":205,"title":{},"body":{"components/Markdown.html":{}}}],["marked.parse(text",{"_index":206,"title":{},"body":{"components/Markdown.html":{}}}],["markedoptions",{"_index":197,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":144,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["md",{"_index":156,"title":{},"body":{"classes/CodeHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["mdcontent",{"_index":202,"title":{},"body":{"components/Markdown.html":{}}}],["merchantability",{"_index":327,"title":{},"body":{"license.html":{}}}],["merge",{"_index":302,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["methods",{"_index":36,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["micro",{"_index":257,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":355,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mit",{"_index":279,"title":{},"body":{"license.html":{}}}],["mode",{"_index":214,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["modify",{"_index":301,"title":{},"body":{"license.html":{}}}],["modules",{"_index":348,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":47,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["new",{"_index":69,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"coverage.html":{}}}],["ng)angular",{"_index":256,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":37,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["noninfringement",{"_index":331,"title":{},"body":{"license.html":{}}}],["notice",{"_index":316,"title":{},"body":{"license.html":{}}}],["obtaining",{"_index":290,"title":{},"body":{"license.html":{}}}],["ok",{"_index":140,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["okstate",{"_index":139,"title":{"directives/OkState.html":{}},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["optional",{"_index":49,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["options",{"_index":74,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":343,"title":{},"body":{"license.html":{}}}],["out",{"_index":345,"title":{},"body":{"license.html":{}}}],["overview",{"_index":349,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":235,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packages",{"_index":258,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse",{"_index":38,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parse(text",{"_index":43,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["parser",{"_index":190,"title":{},"body":{"components/Markdown.html":{}}}],["parsing",{"_index":199,"title":{},"body":{"components/Markdown.html":{},"miscellaneous/typealiases.html":{}}}],["particular",{"_index":329,"title":{},"body":{"license.html":{}}}],["permission",{"_index":284,"title":{},"body":{"license.html":{}}}],["permit",{"_index":309,"title":{},"body":{"license.html":{}}}],["perry",{"_index":283,"title":{},"body":{"license.html":{}}}],["person",{"_index":289,"title":{},"body":{"license.html":{}}}],["persons",{"_index":310,"title":{},"body":{"license.html":{}}}],["portions",{"_index":320,"title":{},"body":{"license.html":{}}}],["postcss",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":33,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["programming",{"_index":81,"title":{},"body":{"components/Code.html":{}}}],["projected",{"_index":213,"title":{},"body":{"classes/MarkdownHarness.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"properties.html":{}}}],["protected",{"_index":28,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["provide",{"_index":56,"title":{},"body":{"components/Code.html":{}}}],["provided",{"_index":71,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"license.html":{}}}],["publish",{"_index":303,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":330,"title":{},"body":{"license.html":{}}}],["quality",{"_index":262,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["reference",{"_index":268,"title":{},"body":{"index.html":{}}}],["rendered",{"_index":187,"title":{},"body":{"components/Markdown.html":{}}}],["res",{"_index":32,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["res.error",{"_index":179,"title":{},"body":{"components/Markdown.html":{}}}],["res.hasvalue",{"_index":176,"title":{},"body":{"components/Markdown.html":{}}}],["res.isloading",{"_index":178,"title":{},"body":{"components/Markdown.html":{}}}],["res.status",{"_index":19,"title":{},"body":{"components/Code.html":{}}}],["res.value",{"_index":177,"title":{},"body":{"components/Markdown.html":{}}}],["resolved",{"_index":23,"title":{},"body":{"components/Code.html":{}}}],["restriction",{"_index":297,"title":{},"body":{"license.html":{}}}],["results",{"_index":143,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":62,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["returns",{"_index":41,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["rights",{"_index":300,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["sanitize",{"_index":34,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["see",{"_index":87,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["sell",{"_index":307,"title":{},"body":{"license.html":{}}}],["set",{"_index":57,"title":{},"body":{"components/Code.html":{}}}],["shall",{"_index":317,"title":{},"body":{"license.html":{}}}],["shiki",{"_index":86,"title":{},"body":{"components/Code.html":{}}}],["simple",{"_index":260,"title":{},"body":{"index.html":{}}}],["smart",{"_index":263,"title":{},"body":{"index.html":{}}}],["software",{"_index":292,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["src",{"_index":17,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["started",{"_index":254,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":141,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["state,[xpr",{"_index":135,"title":{},"body":{"components/Code.html":{},"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"components/Markdown.html":{},"directives/OkState.html":{}}}],["state]'},{'name",{"_index":136,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["statements",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":153,"title":{},"body":{"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"classes/MarkdownHarness.html":{}}}],["string",{"_index":44,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["style.display",{"_index":113,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["subject",{"_index":312,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":305,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":319,"title":{},"body":{"license.html":{}}}],["supported",{"_index":85,"title":{},"body":{"components/Code.html":{}}}],["switch",{"_index":18,"title":{},"body":{"components/Code.html":{}}}],["syntax",{"_index":99,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["table",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["tailwindcss/postcss",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["template",{"_index":16,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["text",{"_index":50,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["theme",{"_index":35,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.code",{"_index":61,"title":{},"body":{"components/Code.html":{}}}],["this.content(this.md",{"_index":203,"title":{},"body":{"components/Markdown.html":{}}}],["this.lang",{"_index":120,"title":{},"body":{"components/Code.html":{}}}],["this.locatorforoptional(\".xpr",{"_index":155,"title":{},"body":{"classes/CodeHarness.html":{},"classes/MarkdownHarness.html":{}}}],["this.md",{"_index":183,"title":{},"body":{"components/Markdown.html":{}}}],["this.options",{"_index":207,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse",{"_index":67,"title":{},"body":{"components/Code.html":{}}}],["this.parse(this.code",{"_index":63,"title":{},"body":{"components/Code.html":{}}}],["this.parse(this.md",{"_index":184,"title":{},"body":{"components/Markdown.html":{}}}],["this.parse(this.res.hasvalue",{"_index":65,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.res.value",{"_index":66,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.sanitize.bypasssecuritytrusthtml",{"_index":117,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.src",{"_index":64,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["this.theme()}).tostring",{"_index":121,"title":{},"body":{"components/Code.html":{}}}],["throw",{"_index":68,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["tort",{"_index":342,"title":{},"body":{"license.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["tslib",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":48,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":356,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["url",{"_index":94,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["use",{"_index":98,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{},"license.html":{}}}],["used",{"_index":54,"title":{},"body":{"components/Code.html":{}}}],["valid",{"_index":83,"title":{},"body":{"components/Code.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{}}}],["var",{"_index":128,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["version",{"_index":353,"title":{},"body":{"properties.html":{}}}],["very",{"_index":259,"title":{},"body":{"index.html":{}}}],["void",{"_index":42,"title":{},"body":{"components/Code.html":{}}}],["warranties",{"_index":326,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":321,"title":{},"body":{"license.html":{}}}],["whether",{"_index":339,"title":{},"body":{"license.html":{}}}],["without",{"_index":296,"title":{},"body":{"license.html":{}}}],["xp)experimental",{"_index":255,"title":{},"body":{"index.html":{}}}],["xpr",{"_index":15,"title":{},"body":{"components/Code.html":{},"classes/CodeHarness.html":{},"directives/EmptyState.html":{},"classes/EmptyStateHarness.html":{},"directives/ErrorState.html":{},"classes/ErrorStateHarness.html":{},"directives/LoadingState.html":{},"classes/LoadingStateHarness.html":{},"components/Markdown.html":{},"classes/MarkdownHarness.html":{},"directives/OkState.html":{}}}],["xpremptystate",{"_index":164,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["xprerrorstate",{"_index":166,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["xprloadingstate",{"_index":165,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["xprng/.../markdown.ts",{"_index":358,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["xprng/code",{"_index":274,"title":{},"body":{"index.html":{}}}],["xprng/code/src/code.ts",{"_index":8,"title":{},"body":{"components/Code.html":{},"coverage.html":{}}}],["xprng/code/src/code.ts:42",{"_index":53,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:49",{"_index":93,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:57",{"_index":80,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:65",{"_index":97,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:73",{"_index":73,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:77",{"_index":72,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:86",{"_index":45,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:93",{"_index":90,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:94",{"_index":92,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/src/code.ts:97",{"_index":40,"title":{},"body":{"components/Code.html":{}}}],["xprng/code/testing/code",{"_index":147,"title":{},"body":{"classes/CodeHarness.html":{},"coverage.html":{}}}],["xprng/common",{"_index":270,"title":{},"body":{"index.html":{}}}],["xprng/common/src/states.ts",{"_index":162,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{},"coverage.html":{}}}],["xprng/common/testing/state",{"_index":169,"title":{},"body":{"classes/EmptyStateHarness.html":{},"classes/ErrorStateHarness.html":{},"classes/LoadingStateHarness.html":{},"coverage.html":{}}}],["xprng/markdown",{"_index":272,"title":{},"body":{"index.html":{}}}],["xprng/markdown/src/markdown.ts",{"_index":175,"title":{},"body":{"components/Markdown.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xprng/markdown/src/markdown.ts:47",{"_index":186,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:54",{"_index":193,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:60",{"_index":196,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:66",{"_index":188,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:71",{"_index":185,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:77",{"_index":182,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:84",{"_index":191,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:85",{"_index":192,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/src/markdown.ts:87",{"_index":181,"title":{},"body":{"components/Markdown.html":{}}}],["xprng/markdown/testing/markdown",{"_index":209,"title":{},"body":{"classes/MarkdownHarness.html":{},"coverage.html":{}}}],["xprng/vendor/shiki",{"_index":112,"title":{},"body":{"components/Code.html":{},"components/Markdown.html":{}}}],["xprokstate",{"_index":167,"title":{},"body":{"directives/EmptyState.html":{},"directives/ErrorState.html":{},"directives/LoadingState.html":{},"directives/OkState.html":{}}}],["ziv",{"_index":282,"title":{},"body":{"license.html":{}}}],["zoneless",{"_index":265,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Code.html":{"url":"components/Code.html","title":"component - Code","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Code\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    xprng/code/src/code.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-code\n            \n\n\n\n\n\n            \n                template\n                @if (code()) {\n  \n}\n@if (src()) {\n  @switch (res.status()) {\n    @case (\"error\") {\n      \n    }\n    @case (\"loading\") {\n      \n    }\n    @case (\"resolved\") {\n      \n    }\n    @default {\n      \n    }\n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                highlighter\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in xprng/code/src/code.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in xprng/code/src/code.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:42\n                        \n                    \n\n            \n                \n                    Source code content as a string\nThis can be used to directly provide source code content.\nIf this is set, the src attribute will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (this.code()) return this.parse(this.code() ?? \"\");\n\n    if (this.src()) return this.parse(this.res.hasValue() ? this.res.value() : \"\");\n\n    return this.parse(\"\");\n    // throw new Error(\"Either 'code' or 'src' must be provided.\");\n  })\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlighter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:73\n                        \n                    \n\n            \n                \n                    Options for the code content.\nThis can include a custom highlighter function and marked options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"javascript\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:57\n                        \n                    \n\n            \n                \n                    The programming language of the source code.\nThis should be a valid language identifier supported by Shiki.\nSee https://shiki.style/languages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:49\n                        \n                    \n\n            \n                \n                    The source URL of the source code content.\nThis is optional and can be used to fetch source code content from a URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"nord\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/src/code.ts:65\n                        \n                    \n\n            \n                \n                    The theme to use for syntax highlighting.\nThis can be any theme supported by Shiki.\nSee https://shiki.style/themes\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, computed, inject, input, OnInit} from \"@angular/core\";\nimport {httpResource} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n// import type {HighlighterCore} from \"shiki\";\n// import {getHighlighter} from '@xprng/vendor/shiki'\n\n@Component({\n  selector: \"xpr-code\",\n  host: {\n    \"[style.display]\": '\"block\"',\n    class: \"xpr-code\",\n  },\n  template: `\n    @if (code()) {\n      \n    }\n    @if (src()) {\n      @switch (res.status()) {\n        @case (\"error\") {\n          \n        }\n        @case (\"loading\") {\n          \n        }\n        @case (\"resolved\") {\n          \n        }\n        @default {\n          \n        }\n      }\n    }\n  `,\n})\nexport class Code implements OnInit {\n  /**\n   * Source code content as a string\n   * This can be used to directly provide source code content.\n   * If this is set, the `src` attribute will be ignored.\n   * @input\n   */\n  readonly code = input();\n\n  /**\n   * The source URL of the source code content.\n   * This is optional and can be used to fetch source code content from a URL.\n   * @input\n   */\n  readonly src = input();\n\n  /**\n   * The programming language of the source code.\n   * This should be a valid language identifier supported by Shiki.\n   * @see https://shiki.style/languages\n   * @input\n   */\n  readonly lang = input(\"javascript\");\n\n  /**\n   * The theme to use for syntax highlighting.\n   * This can be any theme supported by Shiki.\n   * @see https://shiki.style/themes\n   * @input\n   */\n  readonly theme = input(\"nord\");\n\n  /**\n   * Options for the code content.\n   * This can include a custom highlighter function and marked options.\n   * @input\n   */\n  // readonly highlighter = input();\n  readonly highlighter = input();\n\n  //\n\n  protected content = computed(() => {\n    if (this.code()) return this.parse(this.code() ?? \"\");\n\n    if (this.src()) return this.parse(this.res.hasValue() ? this.res.value() : \"\");\n\n    return this.parse(\"\");\n    // throw new Error(\"Either 'code' or 'src' must be provided.\");\n  });\n\n  private parse(text: string) {\n    return this.sanitize.bypassSecurityTrustHtml(\n      'aaa'\n      // getHighlighter().codeToHtml(text, {lang: this.lang(), theme: this.theme()}).toString()\n    );\n  }\n\n  protected readonly res = httpResource.text(() => this.src());\n  private readonly sanitize = inject(DomSanitizer);\n\n\n  ngOnInit() {\n    if (!this.code() && !this.src()) {\n      throw new Error(\"Either 'code' or 'src' input must be provided.\");\n    }\n    if (this.code() && this.src()) {\n      console.warn(\"Either 'code' or 'src' input should be provided, not both.\");\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (code()) {  }@if (src()) {  @switch (res.status()) {    @case (\"error\") {          }    @case (\"loading\") {          }    @case (\"resolved\") {          }    @default {          }  }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Code'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CodeHarness.html":{"url":"classes/CodeHarness.html","title":"class - CodeHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CodeHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/code/testing/code-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getMdVEl\n                            \n                            \n                                getSrcEl\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getMdVEl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-md\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/testing/code-harness.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSrcEl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n                    \n                        \n                                Defined in xprng/code/testing/code-harness.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-code\"\n                    \n                \n                    \n                        \n                                Defined in xprng/code/testing/code-harness.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ContentContainerComponentHarness } from \"@angular/cdk/testing\";\n\nexport class CodeHarness extends ContentContainerComponentHarness {\n  static hostSelector = \"xpr-code\";\n\n  getSrcEl = this.locatorForOptional(\".xpr-loaded\");\n  getMdVEl = this.locatorForOptional(\".xpr-md\");\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmptyState.html":{"url":"directives/EmptyState.html","title":"directive - EmptyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  EmptyState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-empty-state,[xpr-empty-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprEmptyState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class LoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class ErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class OkState {\n}\n\n@Directive({\n  selector: \"xpr-empty-state,[xpr-empty-state]\",\n  exportAs: \"xprEmptyState\",\n  host: {\n    class: \"xpr-empty-state\",\n  },\n})\nexport class EmptyState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyStateHarness.html":{"url":"classes/EmptyStateHarness.html","title":"class - EmptyStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyStateHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-empty-state\"\n                    \n                \n                    \n                        \n                                Defined in xprng/common/testing/state-harness.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentHarness } from \"@angular/cdk/testing\";\n\nexport class ErrorStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-error-state\";\n}\n\nexport class LoadingStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-loading-state\";\n}\n\nexport class EmptyStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-empty-state\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ErrorState.html":{"url":"directives/ErrorState.html","title":"directive - ErrorState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ErrorState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-error-state,[xpr-error-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprErrorState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class LoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class ErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class OkState {\n}\n\n@Directive({\n  selector: \"xpr-empty-state,[xpr-empty-state]\",\n  exportAs: \"xprEmptyState\",\n  host: {\n    class: \"xpr-empty-state\",\n  },\n})\nexport class EmptyState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorStateHarness.html":{"url":"classes/ErrorStateHarness.html","title":"class - ErrorStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorStateHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-error-state\"\n                    \n                \n                    \n                        \n                                Defined in xprng/common/testing/state-harness.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentHarness } from \"@angular/cdk/testing\";\n\nexport class ErrorStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-error-state\";\n}\n\nexport class LoadingStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-loading-state\";\n}\n\nexport class EmptyStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-empty-state\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadingState.html":{"url":"directives/LoadingState.html","title":"directive - LoadingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LoadingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-loading-state,[xpr-loading-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprLoadingState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class LoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class ErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class OkState {\n}\n\n@Directive({\n  selector: \"xpr-empty-state,[xpr-empty-state]\",\n  exportAs: \"xprEmptyState\",\n  host: {\n    class: \"xpr-empty-state\",\n  },\n})\nexport class EmptyState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingStateHarness.html":{"url":"classes/LoadingStateHarness.html","title":"class - LoadingStateHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingStateHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/testing/state-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-loading-state\"\n                    \n                \n                    \n                        \n                                Defined in xprng/common/testing/state-harness.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentHarness } from \"@angular/cdk/testing\";\n\nexport class ErrorStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-error-state\";\n}\n\nexport class LoadingStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-loading-state\";\n}\n\nexport class EmptyStateHarness extends ComponentHarness {\n  static hostSelector = \"xpr-empty-state\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Markdown.html":{"url":"components/Markdown.html","title":"component - Markdown","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Markdown\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    xprng/markdown/src/markdown.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                xpr-markdown\n            \n\n\n\n\n\n            \n                template\n                @if (md()) {\n  \n  \n\n} @else if (src()) {\n  \n  @if (res.hasValue() && res.value()) {\n    \n  } @else if (res.isLoading()) {\n    \n  } @else if (res.error()) {\n    \n  } @else {\n    \n  }\n}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                content\n                            \n                            \n                                    Readonly\n                                md\n                            \n                            \n                                    Readonly\n                                options\n                            \n                            \n                                    Protected\n                                    Readonly\n                                res\n                            \n                            \n                                    Private\n                                    Readonly\n                                sanitize\n                            \n                            \n                                    Readonly\n                                src\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in xprng/markdown/src/markdown.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parse\n                        \n                    \n                \n            \n            \n                \n                        \n                    parse(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in xprng/markdown/src/markdown.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.md()\n      ? this.parse(this.md()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  })\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        md\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:47\n                        \n                    \n\n            \n                \n                    The markdown content to be rendered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input>({})\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:66\n                        \n                    \n\n            \n                \n                    Options for the Maerked parser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        res\n                        \n                    \n                \n            \n                \n                    \n                        Default value : httpResource.text(() => this.src())\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sanitize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        src\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input()\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:54\n                        \n                    \n\n            \n                \n                    The source URL of the markdown content.\nIf md is provided, this will be ignored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(\"github-light\")\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/src/markdown.ts:60\n                        \n                    \n\n            \n                \n                    The theme to use for syntax highlighting.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, computed, inject, input, OnInit,} from \"@angular/core\";\nimport {httpResource} from \"@angular/common/http\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {Marked, type MarkedOptions} from \"marked\";\nimport {highlight} from \"@xprng/vendor/shiki\"\n\n/**\n * Marked options for parsing markdown.\n * @see https://marked.js.org/using_advanced#options\n */\nexport type MarkdownOptions = MarkedOptions;\n\n@Component({\n  selector: \"xpr-markdown\",\n  host: {\n    \"[style.display]\": '\"block\"',\n    class: \"xpr-markdown\",\n  },\n  template: `\n    @if (md()) {\n      \n      \n\n    } @else if (src()) {\n      \n      @if (res.hasValue() && res.value()) {\n        \n      } @else if (res.isLoading()) {\n        \n      } @else if (res.error()) {\n        \n      } @else {\n        \n      }\n    }\n  `,\n})\nexport class Markdown implements OnInit {\n  /**\n   * The markdown content to be rendered.\n   * @input\n   */\n  readonly md = input();\n\n  /**\n   * The source URL of the markdown content.\n   * If `md` is provided, this will be ignored.\n   * @input\n   */\n  readonly src = input();\n\n  /**\n   * The theme to use for syntax highlighting.\n   * @input\n   */\n  readonly theme = input(\"github-light\");\n\n  /**\n   * Options for the Maerked parser\n   * @input\n   */\n  readonly options = input>({});\n\n  //\n\n  // protected mdContent = computed(() => this.content(this.md() ?? \"\"));\n  protected content = computed(() => {\n    return this.md()\n      ? this.parse(this.md()!)\n      : this.parse(this.res.hasValue() ? this.res.value() : \"\");\n  });\n\n  private parse(text: string) {\n    const marked = new Marked(highlight(this.theme()));\n    return this.sanitize.bypassSecurityTrustHtml(\n      marked.parse(text, this.options()) as string,\n    );\n  }\n\n  protected readonly res = httpResource.text(() => this.src());\n  private readonly sanitize = inject(DomSanitizer);\n\n  async ngOnInit() {\n    if (!this.md() && !this.src()) {\n      throw new Error(\"Either 'md' or 'src' input must be provided. Neither provided.\");\n    }\n    if (this.md() && this.src()) {\n      throw new Error(\"Either 'md' or 'src' input must be provided. Both provided.\");\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (md()) {    } @else if (src()) {    @if (res.hasValue() && res.value()) {      } @else if (res.isLoading()) {      } @else if (res.error()) {      } @else {      }}'\n    var COMPONENTS = [{'name': 'Code', 'selector': 'xpr-code'},{'name': 'Markdown', 'selector': 'xpr-markdown'}];\n    var DIRECTIVES = [{'name': 'EmptyState', 'selector': 'xpr-empty-state,[xpr-empty-state]'},{'name': 'ErrorState', 'selector': 'xpr-error-state,[xpr-error-state]'},{'name': 'LoadingState', 'selector': 'xpr-loading-state,[xpr-loading-state]'},{'name': 'OkState', 'selector': 'xpr-ok-state,[xpr-ok-state]'}];\n    var ACTUAL_COMPONENT = {'name': 'Markdown'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkdownHarness.html":{"url":"classes/MarkdownHarness.html","title":"class - MarkdownHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkdownHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/markdown/testing/markdown-harness.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ContentContainerComponentHarness\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLoaded\n                            \n                            \n                                getLocal\n                            \n                            \n                                    Static\n                                hostSelector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-loaded\")\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/testing/markdown-harness.ts:14\n                        \n                    \n\n            \n                \n                    The content projected in case of \"src\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.locatorForOptional(\".xpr-local\")\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/testing/markdown-harness.ts:9\n                        \n                    \n\n            \n                \n                    The content projected in case of \"md\" provided mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hostSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"xpr-markdown\"\n                    \n                \n                    \n                        \n                                Defined in xprng/markdown/testing/markdown-harness.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ContentContainerComponentHarness } from \"@angular/cdk/testing\";\n\nexport class MarkdownHarness extends ContentContainerComponentHarness {\n  static hostSelector = \"xpr-markdown\";\n\n  /**\n   * The content projected in case of \"md\" provided mode.\n   */\n  getLocal = this.locatorForOptional(\".xpr-local\");\n\n  /**\n   * The content projected in case of \"src\" provided mode.\n   */\n  getLoaded = this.locatorForOptional(\".xpr-loaded\");\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OkState.html":{"url":"directives/OkState.html","title":"directive - OkState","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OkState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            xprng/common/src/states.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        xpr-ok-state,[xpr-ok-state]\n                    \n\n\n\n                    \n                        exportAs\n                        xprOkState\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"xpr-loading-state,[xpr-loading-state]\",\n  exportAs: \"xprLoadingState\",\n  host: {\n    class: \"xpr-loading-state\",\n  },\n})\nexport class LoadingState {\n}\n\n@Directive({\n  selector: \"xpr-error-state,[xpr-error-state]\",\n  exportAs: \"xprErrorState\",\n  host: {\n    class: \"xpr-error-state\",\n  },\n})\nexport class ErrorState {\n}\n\n@Directive({\n  selector: \"xpr-ok-state,[xpr-ok-state]\",\n  exportAs: \"xprOkState\",\n  host: {\n    class: \"xpr-ok-state\",\n  },\n})\nexport class OkState {\n}\n\n@Directive({\n  selector: \"xpr-empty-state,[xpr-empty-state]\",\n  exportAs: \"xprEmptyState\",\n  host: {\n    class: \"xpr-empty-state\",\n  },\n})\nexport class EmptyState {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                xprng/code/src/code.ts\n            \n            component\n            Code\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                xprng/code/testing/code-harness.ts\n            \n            class\n            CodeHarness\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            EmptyState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            ErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            LoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/src/states.ts\n            \n            directive\n            OkState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            EmptyStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            ErrorStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/common/testing/state-harness.ts\n            \n            class\n            LoadingStateHarness\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                xprng/markdown/src/markdown.ts\n            \n            component\n            Markdown\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                        xprng/markdown/src/markdown.ts\n            \n            type alias\n            MarkdownOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                xprng/markdown/testing/markdown-harness.ts\n            \n            class\n            MarkdownHarness\n            \n                50 %\n                (2/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.1.5\n        \n            @angular/common : ^20.1.0\n        \n            @angular/compiler : ^20.1.0\n        \n            @angular/core : ^20.1.0\n        \n            @angular/forms : ^20.1.0\n        \n            @angular/platform-browser : ^20.1.0\n        \n            @angular/router : ^20.1.0\n        \n            @tailwindcss/postcss : ^4.1.11\n        \n            postcss : ^8.5.6\n        \n            rxjs : ~7.8.0\n        \n            tailwindcss : ^4.1.11\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n(XP)Experimental (NG)Angular Components\nMicro packages of very simple - but high quality - smart components.\n\nCompatible with Zoneless Angular 20+.\n\n\n\nComponent\nPackage\nReference\n\n\n\n\nCommon\n@xprng/common\n0.4.0\n\n\nMarkdown\n@xprng/markdown\n0.4.1\n\n\nCode\n@xprng/code\n1.1.1\n\n\n\n\nMade with ❤️ for the Angular community.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright 2025 to Ziv Perry.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to delal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MarkdownOptions   (xprng/.../markdown.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    xprng/markdown/src/markdown.ts\n    \n    \n        \n            \n                \n                    \n                    MarkdownOptions\n                \n            \n            \n                \n                    Marked options for parsing markdown.\n\n                \n            \n            \n                \n                        MarkedOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
